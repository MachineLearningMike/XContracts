/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Compounding, CompoundingInterface } from "../Compounding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002290380380620022908339810160408190526200003491620007bd565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007fe565b620000ee90600a62000923565b6200014b565b5062000a41565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000934565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000366565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f8916200098c565b620002049190620009ae565b620002109190620009de565b90506200022660065482620004d460201b60201c565b6006556001600160a01b038416600090815260026020526040812080548392906200025390849062000a01565b9250508190555080600360008282546200026e919062000a01565b90915550508115620002cb576001600160a01b03841660009081526002602052604081208054859290620002a490849062000a01565b925050819055508260036000828254620002bf919062000a01565b909155506200031c9050565b6001600160a01b038416600090815260026020526040902054620002f09084620004d4565b6001600160a01b038516600090815260026020526040902055600354620003189084620004d4565b6003555b6001600160a01b0384166000908152600260205260409020546007546200034491906200098c565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060045443620003789190620009ae565b90506000600554826200038c9190620009ae565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003c1610309620186a062000a01565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801562000414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043a919062000a1c565b9150915060006003546200045d6003548585620004fd60201b62000a621760201c565b620004699190620009ae565b905080600660008282546200047f919062000a01565b9250508190555064e8d4a51000620004a964e8d4a510008585620005fa60201b62000b381760201c565b620004b59190620009ae565b60076000828254620004c8919062000a01565b90915550505050505050565b600081831115620004f357620004eb8284620009ae565b9050620004f7565b5060005b92915050565b600080806200050d868662000640565b915091508160000362000537578381816200052c576200052c620009c8565b0492505050620005f3565b83821015620005ee5760006200054f87878762000694565b905060008062000561858585620006b2565b91509150816000036200058e57868181620005805762000580620009c8565b0495505050505050620005f3565b6000876200059d8282620006e8565b1690506000620005af848484620006f6565b90506000620005d0838b81620005c957620005c9620009c8565b046200074d565b9050620005de828262000792565b98505050505050505050620005f3565b600080fd5b9392505050565b6000806200060a858585620004fd565b905060006200061b86868662000694565b111562000638576200062f816001620007a0565b915050620005f3565b949350505050565b60008080620006508585620007ae565b9050600062000660868662000792565b9050808210620006785790819003925090506200068d565b6001620006868383620006e8565b0393509150505b9250929050565b60008180620006a757620006a7620009c8565b838509949350505050565b600080828410620006ca5750839050818303620006e0565b6000198501620006db8585620006e8565b915091505b935093915050565b6000620005f38284620009ae565b60008062000722836200070a8382620006e8565b816200071a576200071a620009c8565b506000919050565b9050828481620007365762000736620009c8565b0462000743868362000792565b1795945050505050565b60006001815b60088110156200078b5762000780826200077a600262000774838962000792565b620006e8565b62000792565b915060010162000753565b5092915050565b6000620005f382846200098c565b6000620005f3828462000a01565b60006000198284099392505050565b600060208284031215620007d057600080fd5b81516001600160a01b0381168114620005f357600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200081e576200081e620007e8565b019392505050565b600181815b80851115620008675781600019048211156200084b576200084b620007e8565b808516156200085957918102915b93841c93908002906200082b565b509250929050565b6000826200088057506001620004f7565b816200088f57506000620004f7565b8160018114620008a85760028114620008b357620008d3565b6001915050620004f7565b60ff841115620008c757620008c7620007e8565b50506001821b620004f7565b5060208310610133831016604e8410600b8410161715620008f8575081810a620004f7565b62000904838362000826565b80600019048211156200091b576200091b620007e8565b029392505050565b6000620005f360ff8416836200086f565b600060208083528351808285015260005b81811015620009635785810183015185820160400152820162000945565b8181111562000976576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009a957620009a9620007e8565b500290565b600082821015620009c357620009c3620007e8565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009fc57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000a175762000a17620007e8565b500190565b6000806040838503121562000a3057600080fd5b505080516020909101519092909150565b61183f8062000a516000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103cd578063db1d0fd5146103d6578063dd62ed3e146103de578063f2fde38b1461041757600080fd5b8063a457c2d714610377578063a9059cbb1461038a578063bdfeb1e51461039d57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031657806395d89b41146103315780639dc29fac14610351578063a150da2a1461036457600080fd5b806370a08231146102f3578063715018a614610306578063739572891461030e57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a757806357627e93146102da57806366666aa9146102e25780636863909e146102eb57600080fd5b806332cb6b0c14610277578063395093511461027f57806340c10f191461029257600080fd5b806323b872dd116101a257806323b872dd1461023b5780632e0f26251461024e5780632ff2e9dc14610268578063313ce5671461027057600080fd5b806306fdde03146101c9578063095ea7b31461020257806318160ddd14610225575b600080fd5b60408051808201909152600b81526a436f6d706f756e64696e6760a81b60208201525b6040516101f991906114d7565b60405180910390f35b610215610210366004611548565b61042a565b60405190151581526020016101f9565b61022d610441565b6040519081526020016101f9565b610215610249366004611572565b610451565b610256601281565b60405160ff90911681526020016101f9565b61022d6104f4565b6012610256565b61022d61050e565b61021561028d366004611548565b610530565b6102a56102a0366004611548565b61053d565b005b6102ba6102b53660046115ae565b6105ed565b6040805194855260208501939093529183015260608201526080016101f9565b61022d601e81565b61022d60065481565b6102a561062e565b61022d6103013660046115ae565b61076a565b6102a5610788565b6102ba6107be565b6000546040516001600160a01b0390911681526020016101f9565b6040805180820190915260048152630434f4d560e41b60208201526101ec565b6102a561035f366004611548565b6108ce565b610215610372366004611572565b610902565b610215610385366004611548565b61098e565b610215610398366004611548565b61099b565b6103a56109a8565b604080519586526020860194909452928401919091526060830152608082015260a0016101f9565b61022d60075481565b61022d600c81565b61022d6103ec3660046115c9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a56104253660046115ae565b6109c7565b6000610437338484610b76565b5060015b92915050565b600061044c60035490565b905090565b60006001600160a01b03841633146104de576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104dc5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e9848484610c38565b5060015b9392505050565b61050060126006611612565b61050b90600a61171b565b81565b61051a60126006611612565b61052590600a61171b565b61050b90600a61172a565b60006104ed338484610d52565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016104d390611749565b61057360126006611612565b61057e90600a61171b565b61058990600a61172a565b8161059360035490565b61059d919061177e565b11156105df5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d3565b6105e98282610dd9565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062585610e30565b90509193509193565b60006004544361063e9190611796565b90506000600554826106509190611796565b905080156105e9576005829055600c5460009081906001600160a01b0316635aff34dc610682610309620186a061177e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f891906117ad565b91509150600060035461070e6003548585610a62565b6107189190611796565b9050806006600082825461072c919061177e565b9091555064e8d4a510009050610743818585610b38565b61074d9190611796565b6007600082825461075e919061177e565b90915550505050505050565b6001600160a01b03811660009081526002602052604081205461043b565b6000546001600160a01b031633146107b25760405162461bcd60e51b81526004016104d390611749565b6107bc6000610fce565b565b6000806000806006546107cf61101e565b6107d9919061177e565b935060006107f76107f26000546001600160a01b031690565b610e30565b9050610803818561177e565b60095490945061081b906001600160a01b0316610e30565b9050610827818561177e565b600a5490945061083f906001600160a01b0316610e30565b905061084b818561177e565b600b54909450610863906001600160a01b0316610e30565b905061086f818561177e565b93508385101561088a576108838585611796565b9250610897565b6108948486611796565b92505b84848110156108a35750835b80156108c657806108b98564e8d4a5100061172a565b6108c391906117e7565b92505b505090919293565b6000546001600160a01b031633146108f85760405162461bcd60e51b81526004016104d390611749565b6105e98282611109565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661094f5760405162461bcd60e51b81526004016104d391906114d7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e99085908590610989908690611796565b610b76565b60006104ed338484610902565b6000610437338484610c38565b60035460055460075460065460006109be61101e565b90509091929394565b6000546001600160a01b031633146109f15760405162461bcd60e51b81526004016104d390611749565b6001600160a01b038116610a565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b610a5f81610fce565b50565b6000806000610a7186866111cb565b9150915081600003610a9657838181610a8c57610a8c6117d1565b04925050506104ed565b838210156101c4576000610aab878787611218565b9050600080610abb858585611233565b9150915081600003610ae357868181610ad657610ad66117d1565b04955050505050506104ed565b600087610af160008a611264565b1690506000610b01848484611270565b90506000610b1d838b81610b1757610b176117d1565b046112bd565b9050610b2982826112fa565b985050505050505050506104ed565b600080610b46858585610a62565b90506000610b55868686611218565b1115610b6e57610b66816001611306565b9150506104ed565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bc05760405162461bcd60e51b81526004016104d391906114d7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c0b5760405162461bcd60e51b81526004016104d391906114d7565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c825760405162461bcd60e51b81526004016104d391906114d7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610ccd5760405162461bcd60e51b81526004016104d391906114d7565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d335760405162461bcd60e51b81526004016104d391906114d7565b50610d4084836000611312565b610d4c83836001611312565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d9f5760405162461bcd60e51b81526004016104d391906114d7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e9908590859061098990869061177e565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e235760405162461bcd60e51b81526004016104d391906114d7565b506105e982826001611312565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e7257506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610eaa9161172a565b610eb49190611796565b610ebe91906117e7565b9050600060045443610ed09190611796565b9050600060055482610ee29190611796565b600c5490915060009081906001600160a01b0316635aff34dc610f0a610309620186a061177e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8091906117ad565b6001600160a01b038a1660009081526002602052604081205492945090925090610fab818585610a62565b610fb59190611796565b9050610fc1818761177e565b9998505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806004544361102f9190611796565b90506000600554826110419190611796565b600c5490915060009081906001600160a01b0316635aff34dc611069610309620186a061177e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110df91906117ad565b9150915060006003546110f56003548585610b38565b6110ff9190611796565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166111535760405162461bcd60e51b81526004016104d391906114d7565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111b95760405162461bcd60e51b81526004016104d391906114d7565b506111c683836000611312565b505050565b60008060006111da85856114a4565b905060006111e886866112fa565b90508082106111fe579081900392509050611211565b600161120a8383611264565b0393509150505b9250929050565b60008180611228576112286117d1565b838509949350505050565b600080828410611249575083905081830361125c565b600185036112578585611264565b915091505b935093915050565b60006104ed8284611796565b60008061129783611282600086611264565b8161128f5761128f6117d1565b506000919050565b90508284816112a8576112a86117d1565b046112b386836112fa565b1795945050505050565b60006001815b60088110156112f3576112e9826112e460026112df86896112fa565b611264565b6112fa565b91506001016112c3565b5092915050565b60006104ed828461172a565b60006104ed828461177e565b61131a61062e565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100092916113529161172a565b61135c9190611796565b61136691906117e7565b9050611374600654826114b3565b6006556001600160a01b0384166000908152600260205260408120805483929061139f90849061177e565b9250508190555080600360008282546113b8919061177e565b9091555050811561140f576001600160a01b038416600090815260026020526040812080548592906113eb90849061177e565b925050819055508260036000828254611404919061177e565b9091555061145c9050565b6001600160a01b03841660009081526002602052604090205461143290846114b3565b6001600160a01b03851660009081526002602052604090205560035461145890846114b3565b6003555b6001600160a01b038416600090815260026020526040902054600754611482919061172a565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b6000818311156114ce576114c78284611796565b905061043b565b50600092915050565b600060208083528351808285015260005b81811015611504578581018301518582016040015282016114e8565b81811115611516576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461154357600080fd5b919050565b6000806040838503121561155b57600080fd5b6115648361152c565b946020939093013593505050565b60008060006060848603121561158757600080fd5b6115908461152c565b925061159e6020850161152c565b9150604084013590509250925092565b6000602082840312156115c057600080fd5b6104ed8261152c565b600080604083850312156115dc57600080fd5b6115e58361152c565b91506115f36020840161152c565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561162f5761162f6115fc565b019392505050565b600181815b80851115611672578160001904821115611658576116586115fc565b8085161561166557918102915b93841c939080029061163c565b509250929050565b6000826116895750600161043b565b816116965750600061043b565b81600181146116ac57600281146116b6576116d2565b600191505061043b565b60ff8411156116c7576116c76115fc565b50506001821b61043b565b5060208310610133831016604e8410600b84101617156116f5575081810a61043b565b6116ff8383611637565b8060001904821115611713576117136115fc565b029392505050565b60006104ed60ff84168361167a565b6000816000190483118215151615611744576117446115fc565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611791576117916115fc565b500190565b6000828210156117a8576117a86115fc565b500390565b600080604083850312156117c057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261180457634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206b47aae1b184fae3fe99eac77c1b4de0463dcf6f42a5803c75a38e30b213517a64736f6c634300080e0033";

export class Compounding__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Compounding> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<Compounding>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): Compounding {
    return super.attach(address) as Compounding;
  }
  connect(signer: Signer): Compounding__factory {
    return super.connect(signer) as Compounding__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundingInterface {
    return new utils.Interface(_abi) as CompoundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Compounding {
    return new Contract(address, _abi, signerOrProvider) as Compounding;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundBurnN, CompoundBurnNInterface } from "../CompoundBurnN";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestNet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnDone",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002568380380620025688339810160408190526200003491620009ad565b6200003f33620000fb565b600d80546001600160a01b0383166001600160a01b031991821617909155436004556006805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600780548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600880549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620009ee565b620000ee90600a62000b13565b6200014b565b5062000c0e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000b24565b60405180910390fd5b50620001b082826001620001b4565b5050565b6001600160a01b0383166000908152600260205260408120546009805491929091620001e290849062000b7c565b9091555050600c5460045460009190620001fd904362000b7c565b62000209919062000b7c565b600d5490915060009081906001600160a01b0316635aff34dc62000233610309620186a062000b7c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac919062000b96565b6001600160a01b03881660009081526005602052604090206001015460045492945090925090620002de904362000b7c565b620002ea919062000b7c565b600d5490935060009081906001600160a01b0316635aff34dc62000314610309620186a062000b7c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa15801562000367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038d919062000b96565b91509150620003ce600260008a6001600160a01b03166001600160a01b031681526020019081526020016000205483836200059560201b6200097b1760201c565b620003e8600a5486866200059560201b6200097b1760201c565b620003f4919062000b7c565b600a5560045462000406904362000b7c565b600c5550600093506200041e92508691505062000692565b9050801562000472576001600160a01b038416600090815260026020526040812080548392906200045190849062000b7c565b9250508190555080600b60008282546200046c919062000bbb565b90915550505b60045462000481904362000b7c565b6001600160a01b0385166000908152600560205260409020600101558115620004f5576001600160a01b03841660009081526002602052604081208054859290620004ce90849062000bbb565b925050819055508260036000828254620004e9919062000bbb565b90915550620005409050565b6001600160a01b038416600090815260026020526040812080548592906200051f90849062000b7c565b9250508190555082600360008282546200053a919062000b7c565b90915550505b6001600160a01b03841660009081526002602052604081205460098054919283926200056e90849062000bbb565b9250508190555080600a600082825462000589919062000bbb565b90915550505050505050565b60008080620005a58686620007e1565b9150915081600003620005cf57838181620005c457620005c462000bd6565b04925050506200068b565b8382101562000686576000620005e787878762000835565b9050600080620005f985858562000853565b9150915081600003620006265786818162000618576200061862000bd6565b04955050505050506200068b565b60008762000635828262000889565b169050600062000647848484620008a0565b9050600062000668838b8162000661576200066162000bd6565b04620008f7565b90506200067682826200093c565b985050505050505050506200068b565b600080fd5b9392505050565b6001600160a01b038116600090815260056020526040812060010154600454829190620006c0904362000b7c565b620006cc919062000b7c565b600d5490915060009081906001600160a01b0316635aff34dc620006f6610309620186a062000b7c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000749573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200076f919062000b96565b915091506000620007b260026000886001600160a01b03166001600160a01b031681526020019081526020016000205484846200094a60201b62000a511760201c565b6001600160a01b038716600090815260026020526040902054620007d7919062000b7c565b9695505050505050565b60008080620007f1858562000990565b905060006200080186866200093c565b9050808210620008195790819003925090506200082e565b600162000827838362000889565b0393509150505b9250929050565b6000818062000848576200084862000bd6565b838509949350505050565b6000808284106200086b575083905081830362000881565b60001985016200087c858562000889565b915091505b935093915050565b600062000897828462000b7c565b90505b92915050565b600080620008cc83620008b4838262000889565b81620008c457620008c462000bd6565b506000919050565b9050828481620008e057620008e062000bd6565b04620008ed86836200093c565b1795945050505050565b60006001815b600881101562000935576200092a826200092460026200091e83896200093c565b62000889565b6200093c565b9150600101620008fd565b5092915050565b600062000897828462000bec565b6000806200095a85858562000595565b905060006200096b86868662000835565b111562000988576200097f8160016200099f565b9150506200068b565b949350505050565b60006000198284099392505050565b600062000897828462000bbb565b600060208284031215620009c057600080fd5b81516001600160a01b03811681146200068b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000a0e5762000a0e620009d8565b019392505050565b600181815b8085111562000a5757816000190482111562000a3b5762000a3b620009d8565b8085161562000a4957918102915b93841c939080029062000a1b565b509250929050565b60008262000a70575060016200089a565b8162000a7f575060006200089a565b816001811462000a98576002811462000aa35762000ac3565b60019150506200089a565b60ff84111562000ab75762000ab7620009d8565b50506001821b6200089a565b5060208310610133831016604e8410600b841016171562000ae8575081810a6200089a565b62000af4838362000a16565b806000190482111562000b0b5762000b0b620009d8565b029392505050565b60006200089760ff84168362000a5f565b600060208083528351808285015260005b8181101562000b535785810183015185820160400152820162000b35565b8181111562000b66576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000b915762000b91620009d8565b500390565b6000806040838503121562000baa57600080fd5b505080516020909101519092909150565b6000821982111562000bd15762000bd1620009d8565b500190565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000c095762000c09620009d8565b500290565b61194a8062000c1e6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a150da2a1161007c578063a150da2a146102ff578063a457c2d714610312578063a9059cbb14610325578063bdfeb1e514610338578063dd62ed3e1461036d578063f2fde38b146103a657600080fd5b806370a082311461026d578063715018a61461028057806373957289146102885780638da5cb5b146102b057806395d89b41146102cb5780639dc29fac146102ec57600080fd5b80632ff2e9dc116101155780632ff2e9dc146101f3578063313ce567146101fb57806332cb6b0c14610202578063395093511461020a57806340c10f191461021d578063416ae7681461023257600080fd5b806306fdde0314610152578063095ea7b31461018d57806318160ddd146101b057806323b872dd146101c65780632e0f2625146101d9575b600080fd5b60408051808201909152600d81526c21b7b6b837bab732213ab9372760991b60208201525b60405161018491906115e2565b60405180910390f35b6101a061019b366004611653565b6103b9565b6040519015158152602001610184565b6101b86103d0565b604051908152602001610184565b6101a06101d436600461167d565b6103df565b6101e1601281565b60405160ff9091168152602001610184565b6101b8610482565b60126101e1565b6101b861049c565b6101a0610218366004611653565b6104bf565b61023061022b366004611653565b6104cc565b005b6102456102403660046116b9565b61057c565b604080519586526020860194909452928401919091526060830152608082015260a001610184565b6101b861027b3660046116b9565b6105e0565b6102306105eb565b610290610621565b604080519485526020850193909352918301526060820152608001610184565b6000546040516001600160a01b039091168152602001610184565b60408051808201909152600581526421a2a1272760d91b6020820152610177565b6102306102fa366004611653565b6107d0565b6101a061030d36600461167d565b610804565b6101a0610320366004611653565b610890565b6101a0610333366004611653565b61089d565b6103406108aa565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610184565b6101b861037b3660046116d4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102306103b43660046116b9565b6108e0565b60006103c6338484610a8f565b5060015b92915050565b60006103da610b51565b905090565b60006001600160a01b038416331461046c576001600160a01b03841660009081526001602090815260408083203384529091529020548281101561046a5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b610477848484610b68565b5060015b9392505050565b61048e6012600861171d565b61049990600a611826565b81565b6104a86012600861171d565b6104b390600a611826565b610499906103e8611835565b600061047b338484610c74565b6000546001600160a01b031633146104f65760405162461bcd60e51b815260040161046190611854565b6105026012600861171d565b61050d90600a611826565b610519906103e8611835565b81610522610b51565b61052c9190611889565b111561056e5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610461565b6105788282610cfb565b5050565b6001600160a01b0381166000908152600260205260408120546004549091908190819081906105ab90436118a1565b92506105b686610d52565b6001600160a01b039096166000908152600560205260409020600101549496939592949293915050565b60006103ca82610e7e565b6000546001600160a01b031633146106155760405162461bcd60e51b815260040161046190611854565b61061f6000610eac565b565b60008060008061062f610efc565b935061064b6106466000546001600160a01b031690565b610d52565b6106559084611889565b60065490935061066d906001600160a01b0316610d52565b6106779084611889565b60075490935061068f906001600160a01b0316610d52565b6106999084611889565b6008549093506106b1906001600160a01b0316610d52565b6106bb9084611889565b9250600083851015610719576106d185856118a1565b92508390506107146040518060400160405280601a81526020017f636865636b202d2d2d206d617267696e616c2067726561746572000000000000815250610fde565b6107a1565b61072384866118a1565b92508490508385111561076e576107146040518060400160405280601c81526020017f636865636b202d2d2d20636f6c6c656374697665206772656174657200000000815250610fde565b6107a16040518060400160405280601281526020017118da1958dac80b4b4b4818985b185b98d95960721b815250610fde565b80156107c957806107bc8469d3c21bcecceda1000000611835565b6107c691906118ce565b91505b5090919293565b6000546001600160a01b031633146107fa5760405162461bcd60e51b815260040161046190611854565b6105788282611021565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108515760405162461bcd60e51b815260040161046191906115e2565b506001600160a01b03808516600090815260016020908152604080832093871683529290522054610477908590859061088b9086906118a1565b610a8f565b600061047b338484610804565b60006103c6338484610b68565b600354600954600a54600454600090819081906108c790436118a1565b92506108d1610efc565b9150600b549050909192939495565b6000546001600160a01b0316331461090a5760405162461bcd60e51b815260040161046190611854565b6001600160a01b03811661096f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610461565b61097881610eac565b50565b600080600061098a86866110d5565b91509150816000036109af578381816109a5576109a56118b8565b049250505061047b565b8382101561014d5760006109c4878787611122565b90506000806109d485858561113d565b91509150816000036109fc578681816109ef576109ef6118b8565b049550505050505061047b565b600087610a0a60008a61116e565b1690506000610a1a84848461117a565b90506000610a36838b81610a3057610a306118b8565b046111c7565b9050610a428282611204565b9850505050505050505061047b565b600080610a5f85858561097b565b90506000610a6e868686611122565b1115610a8757610a7f816001611210565b91505061047b565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ad95760405162461bcd60e51b815260040161046191906115e2565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b245760405162461bcd60e51b815260040161046191906115e2565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b5b610efc565b6003546103da91906118a1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bb25760405162461bcd60e51b815260040161046191906115e2565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bfd5760405162461bcd60e51b815260040161046191906115e2565b506000610c0984610e7e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c555760405162461bcd60e51b815260040161046191906115e2565b50610c628483600061121c565b610c6e8383600161121c565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cc15760405162461bcd60e51b815260040161046191906115e2565b506001600160a01b03808516600090815260016020908152604080832093871683529290522054610477908590859061088b908690611889565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d455760405162461bcd60e51b815260040161046191906115e2565b506105788282600161121c565b6001600160a01b038116600090815260056020526040812060010154600454829190610d7e90436118a1565b610d8891906118a1565b600d5490915060009081906001600160a01b0316635aff34dc610db0610309620186a06118a1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2691906118f0565b6001600160a01b03871660009081526002602052604081205492945090925090610e51908484610a51565b6001600160a01b038716600090815260026020526040902054610e7491906118a1565b9695505050505050565b6000610e8982610d52565b6001600160a01b0383166000908152600260205260409020546103ca91906118a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600c5460045443610f1091906118a1565b610f1a91906118a1565b600d5490915060009081906001600160a01b0316635aff34dc610f42610309620186a06118a1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb891906118f0565b91509150610fc9600a54838361097b565b600954610fd691906118a1565b935050505090565b61097881604051602401610ff291906115e2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526115a9565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661106b5760405162461bcd60e51b815260040161046191906115e2565b50600061107783610e7e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110c35760405162461bcd60e51b815260040161046191906115e2565b506110d08383600061121c565b505050565b60008060006110e485856115b2565b905060006110f28686611204565b905080821061110857908190039250905061111b565b6001611114838361116e565b0393509150505b9250929050565b60008180611132576111326118b8565b838509949350505050565b6000808284106111535750839050818303611166565b60018503611161858561116e565b915091505b935093915050565b600061047b82846118a1565b6000806111a18361118c60008661116e565b81611199576111996118b8565b506000919050565b90508284816111b2576111b26118b8565b046111bd8683611204565b1795945050505050565b60006001815b60088110156111fd576111f3826111ee60026111e98689611204565b61116e565b611204565b91506001016111cd565b5092915050565b600061047b8284611835565b600061047b8284611889565b6001600160a01b03831660009081526002602052604081205460098054919290916112489084906118a1565b9091555050600c546004546000919061126190436118a1565b61126b91906118a1565b600d5490915060009081906001600160a01b0316635aff34dc611293610309620186a06118a1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156112e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130991906118f0565b6001600160a01b0388166000908152600560205260409020600101546004549294509092509061133990436118a1565b61134391906118a1565b600d5490935060009081906001600160a01b0316635aff34dc61136b610309620186a06118a1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa1580156113bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e191906118f0565b6001600160a01b038a16600090815260026020526040902054919350915061140a90838361097b565b611417600a54868661097b565b61142191906118a1565b600a5560045461143190436118a1565b600c819055505050505050600061144784610d52565b90508015611496576001600160a01b038416600090815260026020526040812080548392906114779084906118a1565b9250508190555080600b60008282546114909190611889565b90915550505b6004546114a390436118a1565b6001600160a01b0385166000908152600560205260409020600101558115611511576001600160a01b038416600090815260026020526040812080548592906114ed908490611889565b9250508190555082600360008282546115069190611889565b909155506115589050565b6001600160a01b038416600090815260026020526040812080548592906115399084906118a1565b92505081905550826003600082825461155291906118a1565b90915550505b6001600160a01b0384166000908152600260205260408120546009805491928392611584908490611889565b9250508190555080600a600082825461159d9190611889565b90915550505050505050565b610978816115c1565b60006000198284099392505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060208083528351808285015260005b8181101561160f578581018301518582016040015282016115f3565b81811115611621576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461164e57600080fd5b919050565b6000806040838503121561166657600080fd5b61166f83611637565b946020939093013593505050565b60008060006060848603121561169257600080fd5b61169b84611637565b92506116a960208501611637565b9150604084013590509250925092565b6000602082840312156116cb57600080fd5b61047b82611637565b600080604083850312156116e757600080fd5b6116f083611637565b91506116fe60208401611637565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561173a5761173a611707565b019392505050565b600181815b8085111561177d57816000190482111561176357611763611707565b8085161561177057918102915b93841c9390800290611747565b509250929050565b600082611794575060016103ca565b816117a1575060006103ca565b81600181146117b757600281146117c1576117dd565b60019150506103ca565b60ff8411156117d2576117d2611707565b50506001821b6103ca565b5060208310610133831016604e8410600b8410161715611800575081810a6103ca565b61180a8383611742565b806000190482111561181e5761181e611707565b029392505050565b600061047b60ff841683611785565b600081600019048311821515161561184f5761184f611707565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561189c5761189c611707565b500190565b6000828210156118b3576118b3611707565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826118eb57634e487b7160e01b600052601260045260246000fd5b500490565b6000806040838503121561190357600080fd5b50508051602090910151909290915056fea264697066735822122017d29987261ece728318120d41ce989f242a271c9ba1309397e94b81332b7ea264736f6c634300080e0033";

export class CompoundBurnN__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBurnN> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundBurnN>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundBurnN {
    return super.attach(address) as CompoundBurnN;
  }
  connect(signer: Signer): CompoundBurnN__factory {
    return super.connect(signer) as CompoundBurnN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBurnNInterface {
    return new utils.Interface(_abi) as CompoundBurnNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBurnN {
    return new Contract(address, _abi, signerOrProvider) as CompoundBurnN;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleBurnN, SimpleBurnNInterface } from "../SimpleBurnN";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestNet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnDone",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002552380380620025528339810160408190526200003491620009ad565b6200003f33620000fb565b600d80546001600160a01b0383166001600160a01b031991821617909155436004556006805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600780548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600880549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620009ee565b620000ee90600a62000b13565b6200014b565b5062000c0e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000b24565b60405180910390fd5b50620001b082826001620001b4565b5050565b6001600160a01b0383166000908152600260205260408120546009805491929091620001e290849062000b7c565b9091555050600c5460045460009190620001fd904362000b7c565b62000209919062000b7c565b600d5490915060009081906001600160a01b0316635aff34dc62000233610309620186a062000b7c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac919062000b96565b6001600160a01b03881660009081526005602052604090206001015460045492945090925090620002de904362000b7c565b620002ea919062000b7c565b600d5490935060009081906001600160a01b0316635aff34dc62000314610309620186a062000b7c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa15801562000367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038d919062000b96565b91509150620003ce600260008a6001600160a01b03166001600160a01b031681526020019081526020016000205483836200059560201b6200098e1760201c565b620003e8600a5486866200059560201b6200098e1760201c565b620003f4919062000b7c565b600a5560045462000406904362000b7c565b600c5550600093506200041e92508691505062000692565b9050801562000472576001600160a01b038416600090815260056020526040812080548392906200045190849062000bbb565b9250508190555080600b60008282546200046c919062000bbb565b90915550505b60045462000481904362000b7c565b6001600160a01b0385166000908152600560205260409020600101558115620004f5576001600160a01b03841660009081526002602052604081208054859290620004ce90849062000bbb565b925050819055508260036000828254620004e9919062000bbb565b90915550620005409050565b6001600160a01b038416600090815260026020526040812080548592906200051f90849062000b7c565b9250508190555082600360008282546200053a919062000b7c565b90915550505b6001600160a01b03841660009081526002602052604081205460098054919283926200056e90849062000bbb565b9250508190555080600a600082825462000589919062000bbb565b90915550505050505050565b60008080620005a58686620007e1565b9150915081600003620005cf57838181620005c457620005c462000bd6565b04925050506200068b565b8382101562000686576000620005e787878762000835565b9050600080620005f985858562000853565b9150915081600003620006265786818162000618576200061862000bd6565b04955050505050506200068b565b60008762000635828262000889565b169050600062000647848484620008a0565b9050600062000668838b8162000661576200066162000bd6565b04620008f7565b90506200067682826200093c565b985050505050505050506200068b565b600080fd5b9392505050565b6001600160a01b038116600090815260056020526040812060010154600454829190620006c0904362000b7c565b620006cc919062000b7c565b600d5490915060009081906001600160a01b0316635aff34dc620006f6610309620186a062000b7c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000749573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200076f919062000b96565b915091506000620007b260026000886001600160a01b03166001600160a01b031681526020019081526020016000205484846200094a60201b62000a641760201c565b6001600160a01b038716600090815260026020526040902054620007d7919062000b7c565b9695505050505050565b60008080620007f1858562000990565b905060006200080186866200093c565b9050808210620008195790819003925090506200082e565b600162000827838362000889565b0393509150505b9250929050565b6000818062000848576200084862000bd6565b838509949350505050565b6000808284106200086b575083905081830362000881565b60001985016200087c858562000889565b915091505b935093915050565b600062000897828462000b7c565b90505b92915050565b600080620008cc83620008b4838262000889565b81620008c457620008c462000bd6565b506000919050565b9050828481620008e057620008e062000bd6565b04620008ed86836200093c565b1795945050505050565b60006001815b600881101562000935576200092a826200092460026200091e83896200093c565b62000889565b6200093c565b9150600101620008fd565b5092915050565b600062000897828462000bec565b6000806200095a85858562000595565b905060006200096b86868662000835565b111562000988576200097f8160016200099f565b9150506200068b565b949350505050565b60006000198284099392505050565b600062000897828462000bbb565b600060208284031215620009c057600080fd5b81516001600160a01b03811681146200068b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000a0e5762000a0e620009d8565b019392505050565b600181815b8085111562000a5757816000190482111562000a3b5762000a3b620009d8565b8085161562000a4957918102915b93841c939080029062000a1b565b509250929050565b60008262000a70575060016200089a565b8162000a7f575060006200089a565b816001811462000a98576002811462000aa35762000ac3565b60019150506200089a565b60ff84111562000ab75762000ab7620009d8565b50506001821b6200089a565b5060208310610133831016604e8410600b841016171562000ae8575081810a6200089a565b62000af4838362000a16565b806000190482111562000b0b5762000b0b620009d8565b029392505050565b60006200089760ff84168362000a5f565b600060208083528351808285015260005b8181101562000b535785810183015185820160400152820162000b35565b8181111562000b66576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000b915762000b91620009d8565b500390565b6000806040838503121562000baa57600080fd5b505080516020909101519092909150565b6000821982111562000bd15762000bd1620009d8565b500190565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000c095762000c09620009d8565b500290565b6119348062000c1e6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a150da2a1161007c578063a150da2a146102fd578063a457c2d714610310578063a9059cbb14610323578063bdfeb1e514610336578063dd62ed3e1461036b578063f2fde38b146103a457600080fd5b806370a082311461026b578063715018a61461027e57806373957289146102865780638da5cb5b146102ae57806395d89b41146102c95780639dc29fac146102ea57600080fd5b80632ff2e9dc116101155780632ff2e9dc146101f1578063313ce567146101f957806332cb6b0c14610200578063395093511461020857806340c10f191461021b578063416ae7681461023057600080fd5b806306fdde0314610152578063095ea7b31461018b57806318160ddd146101ae57806323b872dd146101c45780632e0f2625146101d7575b600080fd5b60408051808201909152600b81526a29b4b6b83632a13ab9372760a91b60208201525b60405161018291906115cc565b60405180910390f35b61019e61019936600461163d565b6103b7565b6040519015158152602001610182565b6101b66103ce565b604051908152602001610182565b61019e6101d2366004611667565b6103de565b6101df601281565b60405160ff9091168152602001610182565b6101b6610481565b60126101df565b6101b661049b565b61019e61021636600461163d565b6104be565b61022e61022936600461163d565b6104cb565b005b61024361023e3660046116a3565b61057c565b604080519586526020860194909452928401919091526060830152608082015260a001610182565b6101b66102793660046116a3565b6105e0565b61022e6105fe565b61028e610634565b604080519485526020850193909352918301526060820152608001610182565b6000546040516001600160a01b039091168152602001610182565b60408051808201909152600581526429a2a1272760d91b6020820152610175565b61022e6102f836600461163d565b6107e3565b61019e61030b366004611667565b610817565b61019e61031e36600461163d565b6108a3565b61019e61033136600461163d565b6108b0565b61033e6108bd565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610182565b6101b66103793660046116be565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61022e6103b23660046116a3565b6108f3565b60006103c4338484610aa2565b5060015b92915050565b60006103d960035490565b905090565b60006001600160a01b038416331461046b576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104695760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b610476848484610b64565b5060015b9392505050565b61048d60126008611707565b61049890600a611810565b81565b6104a760126008611707565b6104b290600a611810565b610498906103e861181f565b600061047a338484610c7e565b6000546001600160a01b031633146104f55760405162461bcd60e51b81526004016104609061183e565b61050160126008611707565b61050c90600a611810565b610518906103e861181f565b8161052260035490565b61052c9190611873565b111561056e5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610460565b6105788282610d05565b5050565b6001600160a01b0381166000908152600260205260408120546004549091908190819081906105ab904361188b565b92506105b686610d5c565b6001600160a01b039096166000908152600560205260409020600101549496939592949293915050565b6001600160a01b0381166000908152600260205260408120546103c8565b6000546001600160a01b031633146106285760405162461bcd60e51b81526004016104609061183e565b6106326000610e88565b565b600080600080610642610ed8565b935061065e6106596000546001600160a01b031690565b610d5c565b6106689084611873565b600654909350610680906001600160a01b0316610d5c565b61068a9084611873565b6007549093506106a2906001600160a01b0316610d5c565b6106ac9084611873565b6008549093506106c4906001600160a01b0316610d5c565b6106ce9084611873565b925060008385101561072c576106e4858561188b565b92508390506107276040518060400160405280601a81526020017f636865636b202d2d2d206d617267696e616c2067726561746572000000000000815250610fba565b6107b4565b610736848661188b565b925084905083851115610781576107276040518060400160405280601c81526020017f636865636b202d2d2d20636f6c6c656374697665206772656174657200000000815250610fba565b6107b46040518060400160405280601281526020017118da1958dac80b4b4b4818985b185b98d95960721b815250610fba565b80156107dc57806107cf8469d3c21bcecceda100000061181f565b6107d991906118b8565b91505b5090919293565b6000546001600160a01b0316331461080d5760405162461bcd60e51b81526004016104609061183e565b6105788282610ffd565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108645760405162461bcd60e51b815260040161046091906115cc565b506001600160a01b03808516600090815260016020908152604080832093871683529290522054610476908590859061089e90869061188b565b610aa2565b600061047a338484610817565b60006103c4338484610b64565b600354600954600a54600454600090819081906108da904361188b565b92506108e4610ed8565b9150600b549050909192939495565b6000546001600160a01b0316331461091d5760405162461bcd60e51b81526004016104609061183e565b6001600160a01b0381166109825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610460565b61098b81610e88565b50565b600080600061099d86866110bf565b91509150816000036109c2578381816109b8576109b86118a2565b049250505061047a565b8382101561014d5760006109d787878761110c565b90506000806109e7858585611127565b9150915081600003610a0f57868181610a0257610a026118a2565b049550505050505061047a565b600087610a1d60008a611158565b1690506000610a2d848484611164565b90506000610a49838b81610a4357610a436118a2565b046111b1565b9050610a5582826111ee565b9850505050505050505061047a565b600080610a7285858561098e565b90506000610a8186868661110c565b1115610a9a57610a928160016111fa565b91505061047a565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610aec5760405162461bcd60e51b815260040161046091906115cc565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b375760405162461bcd60e51b815260040161046091906115cc565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bae5760405162461bcd60e51b815260040161046091906115cc565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf95760405162461bcd60e51b815260040161046091906115cc565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c5f5760405162461bcd60e51b815260040161046091906115cc565b50610c6c84836000611206565b610c7883836001611206565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610ccb5760405162461bcd60e51b815260040161046091906115cc565b506001600160a01b03808516600090815260016020908152604080832093871683529290522054610476908590859061089e908690611873565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d4f5760405162461bcd60e51b815260040161046091906115cc565b5061057882826001611206565b6001600160a01b038116600090815260056020526040812060010154600454829190610d88904361188b565b610d92919061188b565b600d5490915060009081906001600160a01b0316635aff34dc610dba610309620186a061188b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3091906118da565b6001600160a01b03871660009081526002602052604081205492945090925090610e5b908484610a64565b6001600160a01b038716600090815260026020526040902054610e7e919061188b565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600c5460045443610eec919061188b565b610ef6919061188b565b600d5490915060009081906001600160a01b0316635aff34dc610f1e610309620186a061188b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9491906118da565b91509150610fa5600a54838361098e565b600954610fb2919061188b565b935050505090565b61098b81604051602401610fce91906115cc565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611593565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110475760405162461bcd60e51b815260040161046091906115cc565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110ad5760405162461bcd60e51b815260040161046091906115cc565b506110ba83836000611206565b505050565b60008060006110ce858561159c565b905060006110dc86866111ee565b90508082106110f2579081900392509050611105565b60016110fe8383611158565b0393509150505b9250929050565b6000818061111c5761111c6118a2565b838509949350505050565b60008082841061113d5750839050818303611150565b6001850361114b8585611158565b915091505b935093915050565b600061047a828461188b565b60008061118b83611176600086611158565b81611183576111836118a2565b506000919050565b905082848161119c5761119c6118a2565b046111a786836111ee565b1795945050505050565b60006001815b60088110156111e7576111dd826111d860026111d386896111ee565b611158565b6111ee565b91506001016111b7565b5092915050565b600061047a828461181f565b600061047a8284611873565b6001600160a01b038316600090815260026020526040812054600980549192909161123290849061188b565b9091555050600c546004546000919061124b904361188b565b611255919061188b565b600d5490915060009081906001600160a01b0316635aff34dc61127d610309620186a061188b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156112cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f391906118da565b6001600160a01b03881660009081526005602052604090206001015460045492945090925090611323904361188b565b61132d919061188b565b600d5490935060009081906001600160a01b0316635aff34dc611355610309620186a061188b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb91906118da565b6001600160a01b038a1660009081526002602052604090205491935091506113f490838361098e565b611401600a54868661098e565b61140b919061188b565b600a5560045461141b904361188b565b600c819055505050505050600061143184610d5c565b90508015611480576001600160a01b03841660009081526005602052604081208054839290611461908490611873565b9250508190555080600b600082825461147a9190611873565b90915550505b60045461148d904361188b565b6001600160a01b03851660009081526005602052604090206001015581156114fb576001600160a01b038416600090815260026020526040812080548592906114d7908490611873565b9250508190555082600360008282546114f09190611873565b909155506115429050565b6001600160a01b0384166000908152600260205260408120805485929061152390849061188b565b92505081905550826003600082825461153c919061188b565b90915550505b6001600160a01b038416600090815260026020526040812054600980549192839261156e908490611873565b9250508190555080600a60008282546115879190611873565b90915550505050505050565b61098b816115ab565b60006000198284099392505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060208083528351808285015260005b818110156115f9578581018301518582016040015282016115dd565b8181111561160b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461163857600080fd5b919050565b6000806040838503121561165057600080fd5b61165983611621565b946020939093013593505050565b60008060006060848603121561167c57600080fd5b61168584611621565b925061169360208501611621565b9150604084013590509250925092565b6000602082840312156116b557600080fd5b61047a82611621565b600080604083850312156116d157600080fd5b6116da83611621565b91506116e860208401611621565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115611724576117246116f1565b019392505050565b600181815b8085111561176757816000190482111561174d5761174d6116f1565b8085161561175a57918102915b93841c9390800290611731565b509250929050565b60008261177e575060016103c8565b8161178b575060006103c8565b81600181146117a157600281146117ab576117c7565b60019150506103c8565b60ff8411156117bc576117bc6116f1565b50506001821b6103c8565b5060208310610133831016604e8410600b84101617156117ea575081810a6103c8565b6117f4838361172c565b8060001904821115611808576118086116f1565b029392505050565b600061047a60ff84168361176f565b6000816000190483118215151615611839576118396116f1565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611886576118866116f1565b500190565b60008282101561189d5761189d6116f1565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826118d557634e487b7160e01b600052601260045260246000fd5b500490565b600080604083850312156118ed57600080fd5b50508051602090910151909290915056fea264697066735822122008ce0326b3491c47d117f0f4d323955f9679b09b6c59239de0c02db642bb5a1c64736f6c634300080e0033";

export class SimpleBurnN__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleBurnN> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<SimpleBurnN>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleBurnN {
    return super.attach(address) as SimpleBurnN;
  }
  connect(signer: Signer): SimpleBurnN__factory {
    return super.connect(signer) as SimpleBurnN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleBurnNInterface {
    return new utils.Interface(_abi) as SimpleBurnNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleBurnN {
    return new Contract(address, _abi, signerOrProvider) as SimpleBurnN;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundBurnE, CompoundBurnEInterface } from "../CompoundBurnE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002215380380620022158339810160408190526200003491620007af565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007f0565b620000ee90600a62000915565b6200014b565b5062000a10565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000926565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200037e565b6001600160a01b038316600090815260086020908152604080832054600754600284529184205490926200020492919064e8d4a510009062000a47620004eb821b17901c565b6200021091906200097e565b905080600660008282546200022691906200097e565b90915550506001600160a01b03841660009081526002602052604081208054839290620002559084906200097e565b9250508190555080600360008282546200027091906200097e565b90915550508115620002cd576001600160a01b03841660009081526002602052604081208054859290620002a690849062000998565b925050819055508260036000828254620002c1919062000998565b90915550620003189050565b6001600160a01b03841660009081526002602052604081208054859290620002f79084906200097e565b9250508190555082600360008282546200031291906200097e565b90915550505b6200035c60075460026000876001600160a01b03166001600160a01b031681526020019081526020016000205464e8d4a51000620004eb60201b62000a471760201c565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200039091906200097e565b9050600060055482620003a491906200097e565b90508015620001b057600c5460009081906001600160a01b0316635aff34dc620003d4610309620186a06200097e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000427573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044d9190620009b3565b9150915060006200046d6003548484620004eb60201b62000a471760201c565b6003546200047c91906200097e565b9050806006600082825462000492919062000998565b92505081905550620004b664e8d4a510008484620004eb60201b62000a471760201c565b620004c79064e8d4a510006200097e565b60076000828254620004da919062000998565b909155505050600584905550505050565b600080620004fb85858562000533565b905060006200050c86868662000629565b111562000529576200052081600162000647565b9150506200052c565b90505b9392505050565b600080806200054386866200065e565b91509150816000036200056d57838181620005625762000562620009d8565b04925050506200052c565b83821015620006245760006200058587878762000629565b905060008062000597858585620006b2565b9150915081600003620005c457868181620005b657620005b6620009d8565b04955050505050506200052c565b600087620005d38282620006e8565b1690506000620005e5848484620006f6565b9050600062000606838b81620005ff57620005ff620009d8565b046200074d565b905062000614828262000792565b985050505050505050506200052c565b600080fd5b600081806200063c576200063c620009d8565b838509949350505050565b600062000655828462000998565b90505b92915050565b600080806200066e8585620007a0565b905060006200067e868662000792565b905080821062000696579081900392509050620006ab565b6001620006a48383620006e8565b0393509150505b9250929050565b600080828410620006ca5750839050818303620006e0565b6000198501620006db8585620006e8565b915091505b935093915050565b60006200065582846200097e565b60008062000722836200070a8382620006e8565b816200071a576200071a620009d8565b506000919050565b9050828481620007365762000736620009d8565b0462000743868362000792565b1795945050505050565b60006001815b60088110156200078b5762000780826200077a600262000774838962000792565b620006e8565b62000792565b915060010162000753565b5092915050565b6000620006558284620009ee565b60006000198284099392505050565b600060208284031215620007c257600080fd5b81516001600160a01b03811681146200052c57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008105762000810620007da565b019392505050565b600181815b80851115620008595781600019048211156200083d576200083d620007da565b808516156200084b57918102915b93841c93908002906200081d565b509250929050565b600082620008725750600162000658565b81620008815750600062000658565b81600181146200089a5760028114620008a557620008c5565b600191505062000658565b60ff841115620008b957620008b9620007da565b50506001821b62000658565b5060208310610133831016604e8410600b8410161715620008ea575081810a62000658565b620008f6838362000818565b80600019048211156200090d576200090d620007da565b029392505050565b60006200065560ff84168362000861565b600060208083528351808285015260005b81811015620009555785810183015185820160400152820162000937565b8181111562000968576000604083870101525b50601f01601f1916929092016040019392505050565b600082821015620009935762000993620007da565b500390565b60008219821115620009ae57620009ae620007da565b500190565b60008060408385031215620009c757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000a0b5762000a0b620007da565b500290565b6117f58062000a206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d0578063db1d0fd5146103d9578063dd62ed3e146103e1578063f2fde38b1461041a57600080fd5b8063a457c2d71461037a578063a9059cbb1461038d578063bdfeb1e5146103a057600080fd5b80638da5cb5b116100d35780638da5cb5b1461031857806395d89b41146103335780639dc29fac14610354578063a150da2a1461036757600080fd5b806370a08231146102f5578063715018a614610308578063739572891461031057600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a957806357627e93146102dc57806366666aa9146102e45780636863909e146102ed57600080fd5b806332cb6b0c14610279578063395093511461028157806340c10f191461029457600080fd5b806323b872dd116101a257806323b872dd1461023d5780632e0f2625146102505780632ff2e9dc1461026a578063313ce5671461027257600080fd5b806306fdde03146101c9578063095ea7b31461020457806318160ddd14610227575b600080fd5b60408051808201909152600d81526c436f6d706f756e644275726e4560981b60208201525b6040516101fb919061148d565b60405180910390f35b6102176102123660046114fe565b61042d565b60405190151581526020016101fb565b61022f610444565b6040519081526020016101fb565b61021761024b366004611528565b610453565b610258601281565b60405160ff90911681526020016101fb565b61022f6104f6565b6012610258565b61022f610510565b61021761028f3660046114fe565b610533565b6102a76102a23660046114fe565b610540565b005b6102bc6102b7366004611564565b6105f0565b6040805194855260208501939093529183015260608201526080016101fb565b61022f601e81565b61022f60065481565b6102a7610631565b61022f610303366004611564565b610771565b6102a761077c565b6102bc6107b2565b6000546040516001600160a01b0390911681526020016101fb565b6040805180820190915260058152644345424e4560d81b60208201526101ee565b6102a76103623660046114fe565b6108b3565b610217610375366004611528565b6108e7565b6102176103883660046114fe565b610973565b61021761039b3660046114fe565b610980565b6103a861098d565b604080519586526020860194909452928401919091526060830152608082015260a0016101fb565b61022f60075481565b61022f600c81565b61022f6103ef36600461157f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a7610428366004611564565b6109ac565b600061043a338484610a85565b5060015b92915050565b600061044e610b47565b905090565b60006001600160a01b03841633146104e0576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104de5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104eb848484610b5e565b5060015b9392505050565b610502601260086115c8565b61050d90600a6116d1565b81565b61051c601260086115c8565b61052790600a6116d1565b61050d906103e86116e0565b60006104ef338484610c6a565b6000546001600160a01b0316331461056a5760405162461bcd60e51b81526004016104d5906116ff565b610576601260086115c8565b61058190600a6116d1565b61058d906103e86116e0565b81610596610b47565b6105a09190611734565b11156105e25760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d5565b6105ec8282610cf1565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062885610d48565b90509193509193565b600060045443610641919061174c565b9050600060055482610653919061174c565b905080156105ec57600c5460009081906001600160a01b0316635aff34dc610680610309620186a061174c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f69190611763565b9150915060006107096003548484610a47565b600354610716919061174c565b9050806006600082825461072a9190611734565b90915550610740905064e8d4a510008484610a47565b61074f9064e8d4a5100061174c565b600760008282546107609190611734565b909155505050600584905550505050565b600061043e82610eb3565b6000546001600160a01b031633146107a65760405162461bcd60e51b81526004016104d5906116ff565b6107b06000610ee1565b565b6000806000806006546107c3610f31565b6107cd9190611734565b93506107e96107e46000546001600160a01b031690565b610d48565b6107f39084611734565b60095490935061080b906001600160a01b0316610d48565b6108159084611734565b600a5490935061082d906001600160a01b0316610d48565b6108379084611734565b600b5490935061084f906001600160a01b0316610d48565b6108599084611734565b92506000838510156108795761086f858561174c565b9250839050610889565b610883848661174c565b92508490505b80156108ac578061089f8464e8d4a510006116e0565b6108a9919061179d565b91505b5090919293565b6000546001600160a01b031633146108dd5760405162461bcd60e51b81526004016104d5906116ff565b6105ec828261101c565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109345760405162461bcd60e51b81526004016104d5919061148d565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104eb908590859061096e90869061174c565b610a85565b60006104ef3384846108e7565b600061043a338484610b5e565b60035460055460075460065460006109a3610f31565b90509091929394565b6000546001600160a01b031633146109d65760405162461bcd60e51b81526004016104d5906116ff565b6001600160a01b038116610a3b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d5565b610a4481610ee1565b50565b600080610a558585856110d0565b90506000610a648686866111a6565b1115610a7d57610a758160016111c1565b9150506104ef565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610acf5760405162461bcd60e51b81526004016104d5919061148d565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b1a5760405162461bcd60e51b81526004016104d5919061148d565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b51610f31565b60035461044e919061174c565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ba85760405162461bcd60e51b81526004016104d5919061148d565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf35760405162461bcd60e51b81526004016104d5919061148d565b506000610bff84610eb3565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c4b5760405162461bcd60e51b81526004016104d5919061148d565b50610c58848360006111cd565b610c64838360016111cd565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cb75760405162461bcd60e51b81526004016104d5919061148d565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104eb908590859061096e908690611734565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d3b5760405162461bcd60e51b81526004016104d5919061148d565b506105ec828260016111cd565b6001600160a01b0381166000908152600860209081526040808320546007546002909352908320548392610d819164e8d4a51000610a47565b610d8b919061174c565b9050600060045443610d9d919061174c565b9050600060055482610daf919061174c565b600c5490915060009081906001600160a01b0316635aff34dc610dd7610309620186a061174c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d9190611763565b6001600160a01b03891660009081526002602052604081205492945090925090610e78908484610a47565b6001600160a01b038916600090815260026020526040902054610e9b919061174c565b9050610ea78187611734565b98975050505050505050565b6000610ebe82610d48565b6001600160a01b03831660009081526002602052604090205461043e919061174c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610f42919061174c565b9050600060055482610f54919061174c565b600c5490915060009081906001600160a01b0316635aff34dc610f7c610309620186a061174c565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff29190611763565b9150915060006110056003548484610a47565b600354611012919061174c565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110665760405162461bcd60e51b81526004016104d5919061148d565b50600061107283610eb3565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110be5760405162461bcd60e51b81526004016104d5919061148d565b506110cb838360006111cd565b505050565b60008060006110df868661135e565b9150915081600003611104578381816110fa576110fa611787565b04925050506104ef565b838210156101c45760006111198787876111a6565b90506000806111298585856113ab565b91509150816000036111515786818161114457611144611787565b04955050505050506104ef565b60008761115f60008a6113dc565b169050600061116f8484846113e8565b9050600061118b838b8161118557611185611787565b04611435565b90506111978282611472565b985050505050505050506104ef565b600081806111b6576111b6611787565b838509949350505050565b60006104ef8284611734565b6111d5610631565b6001600160a01b038316600090815260086020908152604080832054600754600290935290832054909161120e9164e8d4a51000610a47565b611218919061174c565b9050806006600082825461122c919061174c565b90915550506001600160a01b0384166000908152600260205260408120805483929061125990849061174c565b925050819055508060036000828254611272919061174c565b909155505081156112c9576001600160a01b038416600090815260026020526040812080548592906112a5908490611734565b9250508190555082600360008282546112be9190611734565b909155506113109050565b6001600160a01b038416600090815260026020526040812080548592906112f190849061174c565b92505081905550826003600082825461130a919061174c565b90915550505b6007546001600160a01b03851660009081526002602052604090205461133c919064e8d4a51000610a47565b6001600160a01b03909416600090815260086020526040902093909355505050565b600080600061136d858561147e565b9050600061137b8686611472565b90508082106113915790819003925090506113a4565b600161139d83836113dc565b0393509150505b9250929050565b6000808284106113c157508390508183036113d4565b600185036113cf85856113dc565b915091505b935093915050565b60006104ef828461174c565b60008061140f836113fa6000866113dc565b8161140757611407611787565b506000919050565b905082848161142057611420611787565b0461142b8683611472565b1795945050505050565b60006001815b600881101561146b576114618261145c60026114578689611472565b6113dc565b611472565b915060010161143b565b5092915050565b60006104ef82846116e0565b60006000198284099392505050565b600060208083528351808285015260005b818110156114ba5785810183015185820160400152820161149e565b818111156114cc576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114f957600080fd5b919050565b6000806040838503121561151157600080fd5b61151a836114e2565b946020939093013593505050565b60008060006060848603121561153d57600080fd5b611546846114e2565b9250611554602085016114e2565b9150604084013590509250925092565b60006020828403121561157657600080fd5b6104ef826114e2565b6000806040838503121561159257600080fd5b61159b836114e2565b91506115a9602084016114e2565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115e5576115e56115b2565b019392505050565b600181815b8085111561162857816000190482111561160e5761160e6115b2565b8085161561161b57918102915b93841c93908002906115f2565b509250929050565b60008261163f5750600161043e565b8161164c5750600061043e565b8160018114611662576002811461166c57611688565b600191505061043e565b60ff84111561167d5761167d6115b2565b50506001821b61043e565b5060208310610133831016604e8410600b84101617156116ab575081810a61043e565b6116b583836115ed565b80600019048211156116c9576116c96115b2565b029392505050565b60006104ef60ff841683611630565b60008160001904831182151516156116fa576116fa6115b2565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611747576117476115b2565b500190565b60008282101561175e5761175e6115b2565b500390565b6000806040838503121561177657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117ba57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122035cf0c69410611fb2443828f72f617f48d5900fcc2127d5b913a4f623bce646364736f6c634300080e0033";

export class CompoundBurnE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBurnE> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundBurnE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundBurnE {
    return super.attach(address) as CompoundBurnE;
  }
  connect(signer: Signer): CompoundBurnE__factory {
    return super.connect(signer) as CompoundBurnE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBurnEInterface {
    return new utils.Interface(_abi) as CompoundBurnEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBurnE {
    return new Contract(address, _abi, signerOrProvider) as CompoundBurnE;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundBurnE, CompoundBurnEInterface } from "../CompoundBurnE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002213380380620022138339810160408190526200003491620007af565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007f0565b620000ee90600a62000915565b6200014b565b5062000a10565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000926565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200037e565b6001600160a01b038316600090815260086020908152604080832054600754600284529184205490926200020492919064e8d4a510009062000a45620004eb821b17901c565b6200021091906200097e565b905080600660008282546200022691906200097e565b90915550506001600160a01b03841660009081526002602052604081208054839290620002559084906200097e565b9250508190555080600360008282546200027091906200097e565b90915550508115620002cd576001600160a01b03841660009081526002602052604081208054859290620002a690849062000998565b925050819055508260036000828254620002c1919062000998565b90915550620003189050565b6001600160a01b03841660009081526002602052604081208054859290620002f79084906200097e565b9250508190555082600360008282546200031291906200097e565b90915550505b6200035c60075460026000876001600160a01b03166001600160a01b031681526020019081526020016000205464e8d4a51000620004eb60201b62000a451760201c565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200039091906200097e565b9050600060055482620003a491906200097e565b90508015620001b057600c5460009081906001600160a01b0316635aff34dc620003d4610309620186a06200097e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000427573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044d9190620009b3565b9150915060006200046d6003548484620004eb60201b62000a451760201c565b6003546200047c91906200097e565b9050806006600082825462000492919062000998565b92505081905550620004b664e8d4a510008484620004eb60201b62000a451760201c565b620004c79064e8d4a510006200097e565b60076000828254620004da919062000998565b909155505050600584905550505050565b600080620004fb85858562000533565b905060006200050c86868662000629565b111562000529576200052081600162000647565b9150506200052c565b90505b9392505050565b600080806200054386866200065e565b91509150816000036200056d57838181620005625762000562620009d8565b04925050506200052c565b83821015620006245760006200058587878762000629565b905060008062000597858585620006b2565b9150915081600003620005c457868181620005b657620005b6620009d8565b04955050505050506200052c565b600087620005d38282620006e8565b1690506000620005e5848484620006f6565b9050600062000606838b81620005ff57620005ff620009d8565b046200074d565b905062000614828262000792565b985050505050505050506200052c565b600080fd5b600081806200063c576200063c620009d8565b838509949350505050565b600062000655828462000998565b90505b92915050565b600080806200066e8585620007a0565b905060006200067e868662000792565b905080821062000696579081900392509050620006ab565b6001620006a48383620006e8565b0393509150505b9250929050565b600080828410620006ca5750839050818303620006e0565b6000198501620006db8585620006e8565b915091505b935093915050565b60006200065582846200097e565b60008062000722836200070a8382620006e8565b816200071a576200071a620009d8565b506000919050565b9050828481620007365762000736620009d8565b0462000743868362000792565b1795945050505050565b60006001815b60088110156200078b5762000780826200077a600262000774838962000792565b620006e8565b62000792565b915060010162000753565b5092915050565b6000620006558284620009ee565b60006000198284099392505050565b600060208284031215620007c257600080fd5b81516001600160a01b03811681146200052c57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008105762000810620007da565b019392505050565b600181815b80851115620008595781600019048211156200083d576200083d620007da565b808516156200084b57918102915b93841c93908002906200081d565b509250929050565b600082620008725750600162000658565b81620008815750600062000658565b81600181146200089a5760028114620008a557620008c5565b600191505062000658565b60ff841115620008b957620008b9620007da565b50506001821b62000658565b5060208310610133831016604e8410600b8410161715620008ea575081810a62000658565b620008f6838362000818565b80600019048211156200090d576200090d620007da565b029392505050565b60006200065560ff84168362000861565b600060208083528351808285015260005b81811015620009555785810183015185820160400152820162000937565b8181111562000968576000604083870101525b50601f01601f1916929092016040019392505050565b600082821015620009935762000993620007da565b500390565b60008219821115620009ae57620009ae620007da565b500190565b60008060408385031215620009c757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000a0b5762000a0b620007da565b500290565b6117f38062000a206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d0578063db1d0fd5146103d9578063dd62ed3e146103e1578063f2fde38b1461041a57600080fd5b8063a457c2d71461037a578063a9059cbb1461038d578063bdfeb1e5146103a057600080fd5b80638da5cb5b116100d35780638da5cb5b1461031857806395d89b41146103335780639dc29fac14610354578063a150da2a1461036757600080fd5b806370a08231146102f5578063715018a614610308578063739572891461031057600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a957806357627e93146102dc57806366666aa9146102e45780636863909e146102ed57600080fd5b806332cb6b0c14610279578063395093511461028157806340c10f191461029457600080fd5b806323b872dd116101a257806323b872dd1461023d5780632e0f2625146102505780632ff2e9dc1461026a578063313ce5671461027257600080fd5b806306fdde03146101c9578063095ea7b31461020457806318160ddd14610227575b600080fd5b60408051808201909152600d81526c436f6d706f756e644275726e4560981b60208201525b6040516101fb919061148b565b60405180910390f35b6102176102123660046114fc565b61042d565b60405190151581526020016101fb565b61022f610444565b6040519081526020016101fb565b61021761024b366004611526565b610453565b610258601281565b60405160ff90911681526020016101fb565b61022f6104f6565b6012610258565b61022f610510565b61021761028f3660046114fc565b610532565b6102a76102a23660046114fc565b61053f565b005b6102bc6102b7366004611562565b6105ee565b6040805194855260208501939093529183015260608201526080016101fb565b61022f601e81565b61022f60065481565b6102a761062f565b61022f610303366004611562565b61076f565b6102a761077a565b6102bc6107b0565b6000546040516001600160a01b0390911681526020016101fb565b6040805180820190915260058152644345424e4560d81b60208201526101ee565b6102a76103623660046114fc565b6108b1565b610217610375366004611526565b6108e5565b6102176103883660046114fc565b610971565b61021761039b3660046114fc565b61097e565b6103a861098b565b604080519586526020860194909452928401919091526060830152608082015260a0016101fb565b61022f60075481565b61022f600c81565b61022f6103ef36600461157d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a7610428366004611562565b6109aa565b600061043a338484610a83565b5060015b92915050565b600061044e610b45565b905090565b60006001600160a01b03841633146104e0576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104de5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104eb848484610b5c565b5060015b9392505050565b610502601260086115c6565b61050d90600a6116cf565b81565b61051c601260086115c6565b61052790600a6116cf565b61050d90600a6116de565b60006104ef338484610c68565b6000546001600160a01b031633146105695760405162461bcd60e51b81526004016104d5906116fd565b610575601260086115c6565b61058090600a6116cf565b61058b90600a6116de565b81610594610b45565b61059e9190611732565b11156105e05760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d5565b6105ea8282610cef565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062685610d46565b90509193509193565b60006004544361063f919061174a565b9050600060055482610651919061174a565b905080156105ea57600c5460009081906001600160a01b0316635aff34dc61067e610309620186a061174a565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f49190611761565b9150915060006107076003548484610a45565b600354610714919061174a565b905080600660008282546107289190611732565b9091555061073e905064e8d4a510008484610a45565b61074d9064e8d4a5100061174a565b6007600082825461075e9190611732565b909155505050600584905550505050565b600061043e82610eb1565b6000546001600160a01b031633146107a45760405162461bcd60e51b81526004016104d5906116fd565b6107ae6000610edf565b565b6000806000806006546107c1610f2f565b6107cb9190611732565b93506107e76107e26000546001600160a01b031690565b610d46565b6107f19084611732565b600954909350610809906001600160a01b0316610d46565b6108139084611732565b600a5490935061082b906001600160a01b0316610d46565b6108359084611732565b600b5490935061084d906001600160a01b0316610d46565b6108579084611732565b92506000838510156108775761086d858561174a565b9250839050610887565b610881848661174a565b92508490505b80156108aa578061089d8464e8d4a510006116de565b6108a7919061179b565b91505b5090919293565b6000546001600160a01b031633146108db5760405162461bcd60e51b81526004016104d5906116fd565b6105ea828261101a565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109325760405162461bcd60e51b81526004016104d5919061148b565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104eb908590859061096c90869061174a565b610a83565b60006104ef3384846108e5565b600061043a338484610b5c565b60035460055460075460065460006109a1610f2f565b90509091929394565b6000546001600160a01b031633146109d45760405162461bcd60e51b81526004016104d5906116fd565b6001600160a01b038116610a395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d5565b610a4281610edf565b50565b600080610a538585856110ce565b90506000610a628686866111a4565b1115610a7b57610a738160016111bf565b9150506104ef565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610acd5760405162461bcd60e51b81526004016104d5919061148b565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b185760405162461bcd60e51b81526004016104d5919061148b565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b4f610f2f565b60035461044e919061174a565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ba65760405162461bcd60e51b81526004016104d5919061148b565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf15760405162461bcd60e51b81526004016104d5919061148b565b506000610bfd84610eb1565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c495760405162461bcd60e51b81526004016104d5919061148b565b50610c56848360006111cb565b610c62838360016111cb565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cb55760405162461bcd60e51b81526004016104d5919061148b565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104eb908590859061096c908690611732565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d395760405162461bcd60e51b81526004016104d5919061148b565b506105ea828260016111cb565b6001600160a01b0381166000908152600860209081526040808320546007546002909352908320548392610d7f9164e8d4a51000610a45565b610d89919061174a565b9050600060045443610d9b919061174a565b9050600060055482610dad919061174a565b600c5490915060009081906001600160a01b0316635aff34dc610dd5610309620186a061174a565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611761565b6001600160a01b03891660009081526002602052604081205492945090925090610e76908484610a45565b6001600160a01b038916600090815260026020526040902054610e99919061174a565b9050610ea58187611732565b98975050505050505050565b6000610ebc82610d46565b6001600160a01b03831660009081526002602052604090205461043e919061174a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610f40919061174a565b9050600060055482610f52919061174a565b600c5490915060009081906001600160a01b0316635aff34dc610f7a610309620186a061174a565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff09190611761565b9150915060006110036003548484610a45565b600354611010919061174a565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110645760405162461bcd60e51b81526004016104d5919061148b565b50600061107083610eb1565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110bc5760405162461bcd60e51b81526004016104d5919061148b565b506110c9838360006111cb565b505050565b60008060006110dd868661135c565b9150915081600003611102578381816110f8576110f8611785565b04925050506104ef565b838210156101c45760006111178787876111a4565b90506000806111278585856113a9565b915091508160000361114f5786818161114257611142611785565b04955050505050506104ef565b60008761115d60008a6113da565b169050600061116d8484846113e6565b90506000611189838b8161118357611183611785565b04611433565b90506111958282611470565b985050505050505050506104ef565b600081806111b4576111b4611785565b838509949350505050565b60006104ef8284611732565b6111d361062f565b6001600160a01b038316600090815260086020908152604080832054600754600290935290832054909161120c9164e8d4a51000610a45565b611216919061174a565b9050806006600082825461122a919061174a565b90915550506001600160a01b0384166000908152600260205260408120805483929061125790849061174a565b925050819055508060036000828254611270919061174a565b909155505081156112c7576001600160a01b038416600090815260026020526040812080548592906112a3908490611732565b9250508190555082600360008282546112bc9190611732565b9091555061130e9050565b6001600160a01b038416600090815260026020526040812080548592906112ef90849061174a565b925050819055508260036000828254611308919061174a565b90915550505b6007546001600160a01b03851660009081526002602052604090205461133a919064e8d4a51000610a45565b6001600160a01b03909416600090815260086020526040902093909355505050565b600080600061136b858561147c565b905060006113798686611470565b905080821061138f5790819003925090506113a2565b600161139b83836113da565b0393509150505b9250929050565b6000808284106113bf57508390508183036113d2565b600185036113cd85856113da565b915091505b935093915050565b60006104ef828461174a565b60008061140d836113f86000866113da565b8161140557611405611785565b506000919050565b905082848161141e5761141e611785565b046114298683611470565b1795945050505050565b60006001815b60088110156114695761145f8261145a60026114558689611470565b6113da565b611470565b9150600101611439565b5092915050565b60006104ef82846116de565b60006000198284099392505050565b600060208083528351808285015260005b818110156114b85785810183015185820160400152820161149c565b818111156114ca576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114f757600080fd5b919050565b6000806040838503121561150f57600080fd5b611518836114e0565b946020939093013593505050565b60008060006060848603121561153b57600080fd5b611544846114e0565b9250611552602085016114e0565b9150604084013590509250925092565b60006020828403121561157457600080fd5b6104ef826114e0565b6000806040838503121561159057600080fd5b611599836114e0565b91506115a7602084016114e0565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115e3576115e36115b0565b019392505050565b600181815b8085111561162657816000190482111561160c5761160c6115b0565b8085161561161957918102915b93841c93908002906115f0565b509250929050565b60008261163d5750600161043e565b8161164a5750600061043e565b8160018114611660576002811461166a57611686565b600191505061043e565b60ff84111561167b5761167b6115b0565b50506001821b61043e565b5060208310610133831016604e8410600b84101617156116a9575081810a61043e565b6116b383836115eb565b80600019048211156116c7576116c76115b0565b029392505050565b60006104ef60ff84168361162e565b60008160001904831182151516156116f8576116f86115b0565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611745576117456115b0565b500190565b60008282101561175c5761175c6115b0565b500390565b6000806040838503121561177457600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117b857634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122030642092d432f4481b3350f3c43934c3641a91d4934e64088418faedf8d5724364736f6c634300080e0033";

export class CompoundBurnE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBurnE> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundBurnE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundBurnE {
    return super.attach(address) as CompoundBurnE;
  }
  connect(signer: Signer): CompoundBurnE__factory {
    return super.connect(signer) as CompoundBurnE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBurnEInterface {
    return new utils.Interface(_abi) as CompoundBurnEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBurnE {
    return new Contract(address, _abi, signerOrProvider) as CompoundBurnE;
  }
}

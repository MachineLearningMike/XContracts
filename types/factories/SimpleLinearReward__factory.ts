/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleLinearReward,
  SimpleLinearRewardInterface,
} from "../SimpleLinearReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019c3380380620019c38339810160408190526200003491620003fe565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600662000446565b620000ee90600a6200056d565b6200014b565b5062000650565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200057e565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f891620005d6565b620002049190620005f8565b62000210919062000612565b90508060066000828254620002269190620005f8565b90915550506001600160a01b038416600090815260086020526040812060010180548392906200025890849062000635565b90915550508115620002b5576001600160a01b038416600090815260026020526040812080548592906200028e90849062000635565b925050819055508260036000828254620002a9919062000635565b90915550620003009050565b6001600160a01b03841660009081526002602052604081208054859290620002df908490620005f8565b925050819055508260036000828254620002fa9190620005f8565b90915550505b6001600160a01b038416600090815260026020526040902054600754620003289190620005d6565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200035c9190620005f8565b9050600060055482620003709190620005f8565b90508015620001b057600354600090620003958369021e19e0c9bab2400000620005d6565b620003a19190620005d6565b90508060066000828254620003b7919062000635565b9091555050600354620003d08264e8d4a51000620005d6565b620003dc919062000612565b60076000828254620003ef919062000635565b90915550505060058290555050565b6000602082840312156200041157600080fd5b81516001600160a01b03811681146200042957600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000466576200046662000430565b019392505050565b600181815b80851115620004af57816000190482111562000493576200049362000430565b80851615620004a157918102915b93841c939080029062000473565b509250929050565b600082620004c85750600162000567565b81620004d75750600062000567565b8160018114620004f05760028114620004fb576200051b565b600191505062000567565b60ff8411156200050f576200050f62000430565b50506001821b62000567565b5060208310610133831016604e8410600b841016171562000540575081810a62000567565b6200054c83836200046e565b806000190482111562000563576200056362000430565b0290505b92915050565b60006200042960ff841683620004b7565b600060208083528351808285015260005b81811015620005ad578581018301518582016040015282016200058f565b81811115620005c0576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005f357620005f362000430565b500290565b6000828210156200060d576200060d62000430565b500390565b6000826200063057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156200064b576200064b62000430565b500190565b61136380620006606000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d4578063db1d0fd5146103dd578063dd62ed3e146103ee578063f2fde38b1461042757600080fd5b8063a457c2d71461037e578063a9059cbb14610391578063bdfeb1e5146103a457600080fd5b80638da5cb5b116100d35780638da5cb5b1461031d57806395d89b41146103385780639dc29fac14610358578063a150da2a1461036b57600080fd5b806370a08231146102fa578063715018a61461030d578063739572891461031557600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ae57806357627e93146102e157806366666aa9146102e95780636863909e146102f257600080fd5b806332cb6b0c1461027e578063395093511461028657806340c10f191461029957600080fd5b806323b872dd116101a257806323b872dd146102425780632e0f2625146102555780632ff2e9dc1461026f578063313ce5671461027757600080fd5b806306fdde03146101c9578063095ea7b31461020957806318160ddd1461022c575b600080fd5b60408051808201909152601281527114da5b5c1b19531a5b99585c94995dd85c9960721b60208201525b6040516102009190611035565b60405180910390f35b61021c6102173660046110a6565b61043a565b6040519015158152602001610200565b610234610451565b604051908152602001610200565b61021c6102503660046110d0565b610461565b61025d601281565b60405160ff9091168152602001610200565b610234610503565b601261025d565b61023461051d565b61021c6102943660046110a6565b610540565b6102ac6102a73660046110a6565b610554565b005b6102c16102bc36600461110c565b610605565b604080519485526020850193909352918301526060820152608001610200565b610234601e81565b61023460065481565b6102ac610646565b61023461030836600461110c565b6106e9565b6102ac610707565b6102c161073d565b6000546040516001600160a01b039091168152602001610200565b604080518082019091526004815263534c525760e01b60208201526101f3565b6102ac6103663660046110a6565b610842565b61021c6103793660046110d0565b610876565b61021c61038c3660046110a6565b610902565b61021c61039f3660046110a6565b61090f565b6103ac61091c565b604080519586526020860194909452928401919091526060830152608082015260a001610200565b61023460075481565b61023469021e19e0c9bab240000081565b6102346103fc366004611127565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ac61043536600461110c565b61093b565b60006104473384846109d6565b5060015b92915050565b600061045c60035490565b905090565b60006001600160a01b03841633146104ee576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104ec5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104f9848484610a98565b5060019392505050565b61050f60126006611170565b61051a90600a611279565b81565b61052960126006611170565b61053490600a611279565b61051a906103e8611288565b600061054d338484610bb2565b9392505050565b6000546001600160a01b0316331461057e5760405162461bcd60e51b81526004016104e3906112a7565b61058a60126006611170565b61059590600a611279565b6105a1906103e8611288565b816105ab60035490565b6105b591906112dc565b11156105f75760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104e3565b6106018282610c39565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061063d85610c90565b90509193509193565b60006004544361065691906112f4565b905060006005548261066891906112f4565b905080156106015760035460009061068a8369021e19e0c9bab2400000611288565b6106949190611288565b905080600660008282546106a891906112dc565b90915550506003546106bf8264e8d4a51000611288565b6106c9919061130b565b600760008282546106da91906112dc565b90915550505060058290555050565b6001600160a01b03811660009081526002602052604081205461044b565b6000546001600160a01b031633146107315760405162461bcd60e51b81526004016104e3906112a7565b61073b6000610d62565b565b60008060008060065461074e610db2565b61075891906112dc565b935061077461076f6000546001600160a01b031690565b610c90565b61077e90846112dc565b600954909350610796906001600160a01b0316610c90565b6107a090846112dc565b600a549093506107b8906001600160a01b0316610c90565b6107c290846112dc565b600b549093506107da906001600160a01b0316610c90565b6107e490846112dc565b9250828410156107ff576107f884846112f4565b915061080c565b61080983856112f4565b91505b83838110156108185750825b801561083b578061082e8464e8d4a51000611288565b610838919061130b565b91505b5090919293565b6000546001600160a01b0316331461086c5760405162461bcd60e51b81526004016104e3906112a7565b6106018282610df5565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108c35760405162461bcd60e51b81526004016104e39190611035565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104f990859085906108fd9086906112f4565b6109d6565b600061054d338484610876565b6000610447338484610a98565b6003546005546007546006546000610932610db2565b90509091929394565b6000546001600160a01b031633146109655760405162461bcd60e51b81526004016104e3906112a7565b6001600160a01b0381166109ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e3565b6109d381610d62565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a205760405162461bcd60e51b81526004016104e39190611035565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a6b5760405162461bcd60e51b81526004016104e39190611035565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ae25760405162461bcd60e51b81526004016104e39190611035565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b2d5760405162461bcd60e51b81526004016104e39190611035565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b935760405162461bcd60e51b81526004016104e39190611035565b50610ba084836000610eb7565b610bac83836001610eb7565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bff5760405162461bcd60e51b81526004016104e39190611035565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104f990859085906108fd9086906112dc565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c835760405162461bcd60e51b81526004016104e39190611035565b5061060182826001610eb7565b6001600160a01b0381166000908152600860209081526040808320546002909252822054600754839264e8d4a51000929091610ccc9190611288565b610cd691906112f4565b610ce0919061130b565b9050600060045443610cf291906112f4565b9050600060055482610d0491906112f4565b6003546001600160a01b03871660009081526002602052604081205492935091610d388469021e19e0c9bab2400000611288565b610d429190611288565b610d4c919061130b565b9050610d5881856112dc565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610dc391906112f4565b9050600060055482610dd591906112f4565b90506000610ded8269021e19e0c9bab2400000611288565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e3f5760405162461bcd60e51b81526004016104e39190611035565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610ea55760405162461bcd60e51b81526004016104e39190611035565b50610eb283836000610eb7565b505050565b610ebf610646565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ef791611288565b610f0191906112f4565b610f0b919061130b565b90508060066000828254610f1f91906112f4565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f4f9084906112dc565b90915550508115610fa6576001600160a01b03841660009081526002602052604081208054859290610f829084906112dc565b925050819055508260036000828254610f9b91906112dc565b90915550610fed9050565b6001600160a01b03841660009081526002602052604081208054859290610fce9084906112f4565b925050819055508260036000828254610fe791906112f4565b90915550505b6001600160a01b0384166000908152600260205260409020546007546110139190611288565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b8181101561106257858101830151858201604001528201611046565b81811115611074576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146110a157600080fd5b919050565b600080604083850312156110b957600080fd5b6110c28361108a565b946020939093013593505050565b6000806000606084860312156110e557600080fd5b6110ee8461108a565b92506110fc6020850161108a565b9150604084013590509250925092565b60006020828403121561111e57600080fd5b61054d8261108a565b6000806040838503121561113a57600080fd5b6111438361108a565b91506111516020840161108a565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561118d5761118d61115a565b019392505050565b600181815b808511156111d05781600019048211156111b6576111b661115a565b808516156111c357918102915b93841c939080029061119a565b509250929050565b6000826111e75750600161044b565b816111f45750600061044b565b816001811461120a576002811461121457611230565b600191505061044b565b60ff8411156112255761122561115a565b50506001821b61044b565b5060208310610133831016604e8410600b8410161715611253575081810a61044b565b61125d8383611195565b80600019048211156112715761127161115a565b029392505050565b600061054d60ff8416836111d8565b60008160001904831182151516156112a2576112a261115a565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112ef576112ef61115a565b500190565b6000828210156113065761130661115a565b500390565b60008261132857634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122025f60750e64883d263c4f30fee35d742240c84c49a9b404543000fa861d11e2b64736f6c634300080e0033";

export class SimpleLinearReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleLinearReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleLinearReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleLinearReward {
    return super.attach(address) as SimpleLinearReward;
  }
  connect(signer: Signer): SimpleLinearReward__factory {
    return super.connect(signer) as SimpleLinearReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleLinearRewardInterface {
    return new utils.Interface(_abi) as SimpleLinearRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleLinearReward {
    return new Contract(address, _abi, signerOrProvider) as SimpleLinearReward;
  }
}

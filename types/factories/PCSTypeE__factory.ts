/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PCSTypeE, PCSTypeEInterface } from "../PCSTypeE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200225f3803806200225f8339810160408190526200003491620007a5565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007e6565b620000ee90600a6200090b565b6200014b565b5062000a29565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200091c565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034e565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f89162000974565b62000204919062000996565b620002109190620009c6565b90506200022660065482620004bc60201b60201c565b6006556001600160a01b0384166000908152600860205260408120600101805483929062000256908490620009e9565b90915550508115620002b3576001600160a01b038416600090815260026020526040812080548592906200028c908490620009e9565b925050819055508260036000828254620002a79190620009e9565b90915550620003049050565b6001600160a01b038416600090815260026020526040902054620002d89084620004bc565b6001600160a01b038516600090815260026020526040902055600354620003009084620004bc565b6003555b6001600160a01b0384166000908152600260205260409020546007546200032c919062000974565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006004544362000360919062000996565b905060006005548262000374919062000996565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003a9610309620186a0620009e9565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015620003fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000422919062000a04565b915091506000600354620004456003548585620004e560201b62000a5f1760201c565b62000451919062000996565b90508060066000828254620004679190620009e9565b9250508190555064e8d4a510006200049164e8d4a510008585620005e260201b62000b351760201c565b6200049d919062000996565b60076000828254620004b09190620009e9565b90915550505050505050565b600081831115620004db57620004d3828462000996565b9050620004df565b5060005b92915050565b60008080620004f5868662000628565b91509150816000036200051f57838181620005145762000514620009b0565b0492505050620005db565b83821015620005d6576000620005378787876200067c565b9050600080620005498585856200069a565b91509150816000036200057657868181620005685762000568620009b0565b0495505050505050620005db565b600087620005858282620006d0565b169050600062000597848484620006de565b90506000620005b8838b81620005b157620005b1620009b0565b0462000735565b9050620005c682826200077a565b98505050505050505050620005db565b600080fd5b9392505050565b600080620005f2858585620004e5565b90506000620006038686866200067c565b111562000620576200061781600162000788565b915050620005db565b949350505050565b6000808062000638858562000796565b905060006200064886866200077a565b90508082106200066057908190039250905062000675565b60016200066e8383620006d0565b0393509150505b9250929050565b600081806200068f576200068f620009b0565b838509949350505050565b600080828410620006b25750839050818303620006c8565b6000198501620006c38585620006d0565b915091505b935093915050565b6000620005db828462000996565b6000806200070a83620006f28382620006d0565b81620007025762000702620009b0565b506000919050565b90508284816200071e576200071e620009b0565b046200072b86836200077a565b1795945050505050565b60006001815b6008811015620007735762000768826200076260026200075c83896200077a565b620006d0565b6200077a565b91506001016200073b565b5092915050565b6000620005db828462000974565b6000620005db8284620009e9565b60006000198284099392505050565b600060208284031215620007b857600080fd5b81516001600160a01b0381168114620005db57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008065762000806620007d0565b019392505050565b600181815b808511156200084f578160001904821115620008335762000833620007d0565b808516156200084157918102915b93841c939080029062000813565b509250929050565b6000826200086857506001620004df565b816200087757506000620004df565b81600181146200089057600281146200089b57620008bb565b6001915050620004df565b60ff841115620008af57620008af620007d0565b50506001821b620004df565b5060208310610133831016604e8410600b8410161715620008e0575081810a620004df565b620008ec83836200080e565b8060001904821115620009035762000903620007d0565b029392505050565b6000620005db60ff84168362000857565b600060208083528351808285015260005b818110156200094b578581018301518582016040015282016200092d565b818111156200095e576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009915762000991620007d0565b500290565b600082821015620009ab57620009ab620007d0565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009e457634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620009ff57620009ff620007d0565b500190565b6000806040838503121562000a1857600080fd5b505080516020909101519092909150565b6118268062000a396000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103ca578063db1d0fd5146103d3578063dd62ed3e146103db578063f2fde38b1461041457600080fd5b8063a457c2d714610374578063a9059cbb14610387578063bdfeb1e51461039a57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031357806395d89b411461032e5780639dc29fac1461034e578063a150da2a1461036157600080fd5b806370a08231146102f0578063715018a614610303578063739572891461030b57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a457806357627e93146102d757806366666aa9146102df5780636863909e146102e857600080fd5b806332cb6b0c14610274578063395093511461027c57806340c10f191461028f57600080fd5b806323b872dd116101a257806323b872dd146102385780632e0f26251461024b5780632ff2e9dc14610265578063313ce5671461026d57600080fd5b806306fdde03146101c9578063095ea7b3146101ff57806318160ddd14610222575b600080fd5b604080518082019091526008815267504353547970654560c01b60208201525b6040516101f691906114be565b60405180910390f35b61021261020d36600461152f565b610427565b60405190151581526020016101f6565b61022a61043e565b6040519081526020016101f6565b610212610246366004611559565b61044e565b610253601281565b60405160ff90911681526020016101f6565b61022a6104f1565b6012610253565b61022a61050b565b61021261028a36600461152f565b61052d565b6102a261029d36600461152f565b61053a565b005b6102b76102b2366004611595565b6105ea565b6040805194855260208501939093529183015260608201526080016101f6565b61022a601e81565b61022a60065481565b6102a261062b565b61022a6102fe366004611595565b610767565b6102a2610785565b6102b76107bb565b6000546040516001600160a01b0390911681526020016101f6565b60408051808201909152600481526354505f4560e01b60208201526101e9565b6102a261035c36600461152f565b6108cb565b61021261036f366004611559565b6108ff565b61021261038236600461152f565b61098b565b61021261039536600461152f565b610998565b6103a26109a5565b604080519586526020860194909452928401919091526060830152608082015260a0016101f6565b61022a60075481565b61022a600c81565b61022a6103e93660046115b0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a2610422366004611595565b6109c4565b6000610434338484610b73565b5060015b92915050565b600061044960035490565b905090565b60006001600160a01b03841633146104db576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d95760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e6848484610c35565b5060015b9392505050565b6104fd601260066115f9565b61050890600a611702565b81565b610517601260066115f9565b61052290600a611702565b61050890600a611711565b60006104ea338484610d4f565b6000546001600160a01b031633146105645760405162461bcd60e51b81526004016104d090611730565b610570601260066115f9565b61057b90600a611702565b61058690600a611711565b8161059060035490565b61059a9190611765565b11156105dc5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d0565b6105e68282610dd6565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062285610e2d565b90509193509193565b60006004544361063b919061177d565b905060006005548261064d919061177d565b905080156105e6576005829055600c5460009081906001600160a01b0316635aff34dc61067f610309620186a0611765565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f59190611794565b91509150600060035461070b6003548585610a5f565b610715919061177d565b905080600660008282546107299190611765565b9091555064e8d4a510009050610740818585610b35565b61074a919061177d565b6007600082825461075b9190611765565b90915550505050505050565b6001600160a01b038116600090815260026020526040812054610438565b6000546001600160a01b031633146107af5760405162461bcd60e51b81526004016104d090611730565b6107b96000610fcb565b565b6000806000806006546107cc61101b565b6107d69190611765565b935060006107f46107ef6000546001600160a01b031690565b610e2d565b90506108008185611765565b600954909450610818906001600160a01b0316610e2d565b90506108248185611765565b600a5490945061083c906001600160a01b0316610e2d565b90506108488185611765565b600b54909450610860906001600160a01b0316610e2d565b905061086c8185611765565b93508385101561088757610880858561177d565b9250610894565b610891848661177d565b92505b84848110156108a05750835b80156108c357806108b68564e8d4a51000611711565b6108c091906117ce565b92505b505090919293565b6000546001600160a01b031633146108f55760405162461bcd60e51b81526004016104d090611730565b6105e68282611106565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661094c5760405162461bcd60e51b81526004016104d091906114be565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e6908590859061098690869061177d565b610b73565b60006104ea3384846108ff565b6000610434338484610c35565b60035460055460075460065460006109bb61101b565b90509091929394565b6000546001600160a01b031633146109ee5760405162461bcd60e51b81526004016104d090611730565b6001600160a01b038116610a535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d0565b610a5c81610fcb565b50565b6000806000610a6e86866111c8565b9150915081600003610a9357838181610a8957610a896117b8565b04925050506104ea565b838210156101c4576000610aa8878787611215565b9050600080610ab8858585611230565b9150915081600003610ae057868181610ad357610ad36117b8565b04955050505050506104ea565b600087610aee60008a611261565b1690506000610afe84848461126d565b90506000610b1a838b81610b1457610b146117b8565b046112ba565b9050610b2682826112f7565b985050505050505050506104ea565b600080610b43858585610a5f565b90506000610b52868686611215565b1115610b6b57610b63816001611303565b9150506104ea565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bbd5760405162461bcd60e51b81526004016104d091906114be565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c085760405162461bcd60e51b81526004016104d091906114be565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c7f5760405162461bcd60e51b81526004016104d091906114be565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cca5760405162461bcd60e51b81526004016104d091906114be565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d305760405162461bcd60e51b81526004016104d091906114be565b50610d3d8483600061130f565b610d498383600161130f565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d9c5760405162461bcd60e51b81526004016104d091906114be565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e69085908590610986908690611765565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e205760405162461bcd60e51b81526004016104d091906114be565b506105e68282600161130f565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e6f57506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ea791611711565b610eb1919061177d565b610ebb91906117ce565b9050600060045443610ecd919061177d565b9050600060055482610edf919061177d565b600c5490915060009081906001600160a01b0316635aff34dc610f07610309620186a0611765565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7d9190611794565b6001600160a01b038a1660009081526002602052604081205492945090925090610fa8818585610a5f565b610fb2919061177d565b9050610fbe8187611765565b9998505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806004544361102c919061177d565b905060006005548261103e919061177d565b600c5490915060009081906001600160a01b0316635aff34dc611066610309620186a0611765565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc9190611794565b9150915060006003546110f26003548585610b35565b6110fc919061177d565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166111505760405162461bcd60e51b81526004016104d091906114be565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111b65760405162461bcd60e51b81526004016104d091906114be565b506111c38383600061130f565b505050565b60008060006111d7858561148b565b905060006111e586866112f7565b90508082106111fb57908190039250905061120e565b60016112078383611261565b0393509150505b9250929050565b60008180611225576112256117b8565b838509949350505050565b6000808284106112465750839050818303611259565b600185036112548585611261565b915091505b935093915050565b60006104ea828461177d565b6000806112948361127f600086611261565b8161128c5761128c6117b8565b506000919050565b90508284816112a5576112a56117b8565b046112b086836112f7565b1795945050505050565b60006001815b60088110156112f0576112e6826112e160026112dc86896112f7565b611261565b6112f7565b91506001016112c0565b5092915050565b60006104ea8284611711565b60006104ea8284611765565b61131761062b565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a51000929161134f91611711565b611359919061177d565b61136391906117ce565b90506113716006548261149a565b6006556001600160a01b0384166000908152600860205260408120600101805483929061139f908490611765565b909155505081156113f6576001600160a01b038416600090815260026020526040812080548592906113d2908490611765565b9250508190555082600360008282546113eb9190611765565b909155506114439050565b6001600160a01b038416600090815260026020526040902054611419908461149a565b6001600160a01b03851660009081526002602052604090205560035461143f908461149a565b6003555b6001600160a01b0384166000908152600260205260409020546007546114699190611711565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b6000818311156114b5576114ae828461177d565b9050610438565b50600092915050565b600060208083528351808285015260005b818110156114eb578581018301518582016040015282016114cf565b818111156114fd576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461152a57600080fd5b919050565b6000806040838503121561154257600080fd5b61154b83611513565b946020939093013593505050565b60008060006060848603121561156e57600080fd5b61157784611513565b925061158560208501611513565b9150604084013590509250925092565b6000602082840312156115a757600080fd5b6104ea82611513565b600080604083850312156115c357600080fd5b6115cc83611513565b91506115da60208401611513565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115611616576116166115e3565b019392505050565b600181815b8085111561165957816000190482111561163f5761163f6115e3565b8085161561164c57918102915b93841c9390800290611623565b509250929050565b60008261167057506001610438565b8161167d57506000610438565b8160018114611693576002811461169d576116b9565b6001915050610438565b60ff8411156116ae576116ae6115e3565b50506001821b610438565b5060208310610133831016604e8410600b84101617156116dc575081810a610438565b6116e6838361161e565b80600019048211156116fa576116fa6115e3565b029392505050565b60006104ea60ff841683611661565b600081600019048311821515161561172b5761172b6115e3565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611778576117786115e3565b500190565b60008282101561178f5761178f6115e3565b500390565b600080604083850312156117a757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117eb57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d982f424a7e888b263c9120253434be54777cc83e437976762c6641f4c1bf73864736f6c634300080e0033";

export class PCSTypeE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PCSTypeE> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<PCSTypeE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): PCSTypeE {
    return super.attach(address) as PCSTypeE;
  }
  connect(signer: Signer): PCSTypeE__factory {
    return super.connect(signer) as PCSTypeE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PCSTypeEInterface {
    return new utils.Interface(_abi) as PCSTypeEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PCSTypeE {
    return new Contract(address, _abi, signerOrProvider) as PCSTypeE;
  }
}

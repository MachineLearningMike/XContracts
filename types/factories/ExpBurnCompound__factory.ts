/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundExpReward,
  CompoundExpRewardInterface,
} from "../CompoundExpReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022c4380380620022c48339810160408190526200003491620007bc565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007fd565b620000ee90600a62000922565b6200014b565b5062000a40565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000933565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000366565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f8916200098b565b620002049190620009ad565b620002109190620009dd565b90506200022660065482620004d360201b60201c565b6006556001600160a01b0384166000908152600260205260408120805483929062000253908490620009ad565b9250508190555080600360008282546200026e9190620009ad565b90915550508115620002cb576001600160a01b03841660009081526002602052604081208054859290620002a490849062000a00565b925050819055508260036000828254620002bf919062000a00565b909155506200031c9050565b6001600160a01b038416600090815260026020526040902054620002f09084620004d3565b6001600160a01b038516600090815260026020526040902055600354620003189084620004d3565b6003555b6001600160a01b0384166000908152600260205260409020546007546200034491906200098b565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060045443620003789190620009ad565b90506000600554826200038c9190620009ad565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003c1610309620186a0620009ad565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801562000414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043a919062000a1b565b9150915060006200045a6003548484620004fc60201b62000a551760201c565b600354620004699190620009ad565b905080600660008282546200047f919062000a00565b92505081905550620004a364e8d4a510008484620005f960201b62000b2b1760201c565b620004b49064e8d4a51000620009ad565b60076000828254620004c7919062000a00565b90915550505050505050565b600081831115620004f257620004ea8284620009ad565b9050620004f6565b5060005b92915050565b600080806200050c86866200063f565b915091508160000362000536578381816200052b576200052b620009c7565b0492505050620005f2565b83821015620005ed5760006200054e87878762000693565b905060008062000560858585620006b1565b91509150816000036200058d578681816200057f576200057f620009c7565b0495505050505050620005f2565b6000876200059c8282620006e7565b1690506000620005ae848484620006f5565b90506000620005cf838b81620005c857620005c8620009c7565b046200074c565b9050620005dd828262000791565b98505050505050505050620005f2565b600080fd5b9392505050565b60008062000609858585620004fc565b905060006200061a86868662000693565b111562000637576200062e8160016200079f565b915050620005f2565b949350505050565b600080806200064f8585620007ad565b905060006200065f868662000791565b9050808210620006775790819003925090506200068c565b6001620006858383620006e7565b0393509150505b9250929050565b60008180620006a657620006a6620009c7565b838509949350505050565b600080828410620006c95750839050818303620006df565b6000198501620006da8585620006e7565b915091505b935093915050565b6000620005f28284620009ad565b6000806200072183620007098382620006e7565b81620007195762000719620009c7565b506000919050565b9050828481620007355762000735620009c7565b0462000742868362000791565b1795945050505050565b60006001815b60088110156200078a576200077f8262000779600262000773838962000791565b620006e7565b62000791565b915060010162000752565b5092915050565b6000620005f282846200098b565b6000620005f2828462000a00565b60006000198284099392505050565b600060208284031215620007cf57600080fd5b81516001600160a01b0381168114620005f257600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200081d576200081d620007e7565b019392505050565b600181815b80851115620008665781600019048211156200084a576200084a620007e7565b808516156200085857918102915b93841c93908002906200082a565b509250929050565b6000826200087f57506001620004f6565b816200088e57506000620004f6565b8160018114620008a75760028114620008b257620008d2565b6001915050620004f6565b60ff841115620008c657620008c6620007e7565b50506001821b620004f6565b5060208310610133831016604e8410600b8410161715620008f7575081810a620004f6565b62000903838362000825565b80600019048211156200091a576200091a620007e7565b029392505050565b6000620005f260ff8416836200086e565b600060208083528351808285015260005b81811015620009625785810183015185820160400152820162000944565b8181111562000975576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009a857620009a8620007e7565b500290565b600082821015620009c257620009c2620007e7565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009fb57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000a165762000a16620007e7565b500190565b6000806040838503121562000a2f57600080fd5b505080516020909101519092909150565b6118748062000a506000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d1578063db1d0fd5146103da578063dd62ed3e146103e2578063f2fde38b1461041b57600080fd5b8063a457c2d71461037b578063a9059cbb1461038e578063bdfeb1e5146103a157600080fd5b80638da5cb5b116100d35780638da5cb5b1461031a57806395d89b41146103355780639dc29fac14610355578063a150da2a1461036857600080fd5b806370a08231146102f7578063715018a61461030a578063739572891461031257600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ab57806357627e93146102de57806366666aa9146102e65780636863909e146102ef57600080fd5b806332cb6b0c1461027b578063395093511461028357806340c10f191461029657600080fd5b806323b872dd116101a257806323b872dd1461023f5780632e0f2625146102525780632ff2e9dc1461026c578063313ce5671461027457600080fd5b806306fdde03146101c9578063095ea7b31461020657806318160ddd14610229575b600080fd5b60408051808201909152600f81526e115e1c109d5c9b90dbdb5c1bdd5b99608a1b60208201525b6040516101fd919061150c565b60405180910390f35b61021961021436600461157d565b61042e565b60405190151581526020016101fd565b610231610445565b6040519081526020016101fd565b61021961024d3660046115a7565b610454565b61025a601281565b60405160ff90911681526020016101fd565b6102316104f7565b601261025a565b610231610511565b61021961029136600461157d565b610533565b6102a96102a436600461157d565b610540565b005b6102be6102b93660046115e3565b6105ef565b6040805194855260208501939093529183015260608201526080016101fd565b610231601e81565b61023160065481565b6102a9610630565b6102316103053660046115e3565b610770565b6102a961077b565b6102be6107b1565b6000546040516001600160a01b0390911681526020016101fd565b6040805180820190915260048152630a8a0be960e31b60208201526101f0565b6102a961036336600461157d565b6108c1565b6102196103763660046115a7565b6108f5565b61021961038936600461157d565b610981565b61021961039c36600461157d565b61098e565b6103a961099b565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b61023160075481565b610231600c81565b6102316103f03660046115fe565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a96104293660046115e3565b6109ba565b600061043b338484610b69565b5060015b92915050565b600061044f610c2b565b905090565b60006001600160a01b03841633146104e1576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104df5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ec848484610c42565b5060015b9392505050565b61050360126006611647565b61050e90600a611750565b81565b61051d60126006611647565b61052890600a611750565b61050e90600a61175f565b60006104f0338484610d4e565b6000546001600160a01b0316331461056a5760405162461bcd60e51b81526004016104d69061177e565b61057660126006611647565b61058190600a611750565b61058c90600a61175f565b81610595610c2b565b61059f91906117b3565b11156105e15760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d6565b6105eb8282610dd5565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062785610e2c565b90509193509193565b60006004544361064091906117cb565b905060006005548261065291906117cb565b905080156105eb576005829055600c5460009081906001600160a01b0316635aff34dc610684610309620186a06117cb565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa91906117e2565b91509150600061070d6003548484610a55565b60035461071a91906117cb565b9050806006600082825461072e91906117b3565b90915550610744905064e8d4a510008484610b2b565b6107539064e8d4a510006117cb565b6007600082825461076491906117b3565b90915550505050505050565b600061043f82610fe3565b6000546001600160a01b031633146107a55760405162461bcd60e51b81526004016104d69061177e565b6107af6000611011565b565b6000806000806006546107c2611061565b6107cc91906117b3565b935060006107ea6107e56000546001600160a01b031690565b610e2c565b90506107f681856117b3565b60095490945061080e906001600160a01b0316610e2c565b905061081a81856117b3565b600a54909450610832906001600160a01b0316610e2c565b905061083e81856117b3565b600b54909450610856906001600160a01b0316610e2c565b905061086281856117b3565b93508385101561087d5761087685856117cb565b925061088a565b61088784866117cb565b92505b84848110156108965750835b80156108b957806108ac8564e8d4a5100061175f565b6108b6919061181c565b92505b505090919293565b6000546001600160a01b031633146108eb5760405162461bcd60e51b81526004016104d69061177e565b6105eb828261114c565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109425760405162461bcd60e51b81526004016104d6919061150c565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ec908590859061097c9086906117cb565b610b69565b60006104f03384846108f5565b600061043b338484610c42565b60035460055460075460065460006109b1611061565b90509091929394565b6000546001600160a01b031633146109e45760405162461bcd60e51b81526004016104d69061177e565b6001600160a01b038116610a495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d6565b610a5281611011565b50565b6000806000610a648686611200565b9150915081600003610a8957838181610a7f57610a7f611806565b04925050506104f0565b838210156101c4576000610a9e87878761124d565b9050600080610aae858585611268565b9150915081600003610ad657868181610ac957610ac9611806565b04955050505050506104f0565b600087610ae460008a611299565b1690506000610af48484846112a5565b90506000610b10838b81610b0a57610b0a611806565b046112f2565b9050610b1c828261132f565b985050505050505050506104f0565b600080610b39858585610a55565b90506000610b4886868661124d565b1115610b6157610b5981600161133b565b9150506104f0565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bb35760405162461bcd60e51b81526004016104d6919061150c565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bfe5760405162461bcd60e51b81526004016104d6919061150c565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c35611061565b60035461044f91906117cb565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c8c5760405162461bcd60e51b81526004016104d6919061150c565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cd75760405162461bcd60e51b81526004016104d6919061150c565b506000610ce384610fe3565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d2f5760405162461bcd60e51b81526004016104d6919061150c565b50610d3c84836000611347565b610d4883836001611347565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d9b5760405162461bcd60e51b81526004016104d6919061150c565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ec908590859061097c9086906117b3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e1f5760405162461bcd60e51b81526004016104d6919061150c565b506105eb82826001611347565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e6e57506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ea69161175f565b610eb091906117cb565b610eba919061181c565b9050600060045443610ecc91906117cb565b9050600060055482610ede91906117cb565b600c5490915060009081906001600160a01b0316635aff34dc610f06610309620186a06117cb565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7c91906117e2565b6001600160a01b038a1660009081526002602052604081205492945090925090610fa7908484610a55565b6001600160a01b038a16600090815260026020526040902054610fca91906117cb565b9050610fd681876117b3565b9998505050505050505050565b6000610fee82610e2c565b6001600160a01b03831660009081526002602052604090205461043f91906117cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806004544361107291906117cb565b905060006005548261108491906117cb565b600c5490915060009081906001600160a01b0316635aff34dc6110ac610309620186a06117cb565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112291906117e2565b9150915060006111356003548484610b2b565b60035461114291906117cb565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166111965760405162461bcd60e51b81526004016104d6919061150c565b5060006111a283610fe3565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111ee5760405162461bcd60e51b81526004016104d6919061150c565b506111fb83836000611347565b505050565b600080600061120f85856114d9565b9050600061121d868661132f565b9050808210611233579081900392509050611246565b600161123f8383611299565b0393509150505b9250929050565b6000818061125d5761125d611806565b838509949350505050565b60008082841061127e5750839050818303611291565b6001850361128c8585611299565b915091505b935093915050565b60006104f082846117cb565b6000806112cc836112b7600086611299565b816112c4576112c4611806565b506000919050565b90508284816112dd576112dd611806565b046112e8868361132f565b1795945050505050565b60006001815b60088110156113285761131e826113196002611314868961132f565b611299565b61132f565b91506001016112f8565b5092915050565b60006104f0828461175f565b60006104f082846117b3565b61134f610630565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100092916113879161175f565b61139191906117cb565b61139b919061181c565b90506113a9600654826114e8565b6006556001600160a01b038416600090815260026020526040812080548392906113d49084906117cb565b9250508190555080600360008282546113ed91906117cb565b90915550508115611444576001600160a01b038416600090815260026020526040812080548592906114209084906117b3565b92505081905550826003600082825461143991906117b3565b909155506114919050565b6001600160a01b03841660009081526002602052604090205461146790846114e8565b6001600160a01b03851660009081526002602052604090205560035461148d90846114e8565b6003555b6001600160a01b0384166000908152600260205260409020546007546114b7919061175f565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b600081831115611503576114fc82846117cb565b905061043f565b50600092915050565b600060208083528351808285015260005b818110156115395785810183015185820160400152820161151d565b8181111561154b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461157857600080fd5b919050565b6000806040838503121561159057600080fd5b61159983611561565b946020939093013593505050565b6000806000606084860312156115bc57600080fd5b6115c584611561565b92506115d360208501611561565b9150604084013590509250925092565b6000602082840312156115f557600080fd5b6104f082611561565b6000806040838503121561161157600080fd5b61161a83611561565b915061162860208401611561565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561166457611664611631565b019392505050565b600181815b808511156116a757816000190482111561168d5761168d611631565b8085161561169a57918102915b93841c9390800290611671565b509250929050565b6000826116be5750600161043f565b816116cb5750600061043f565b81600181146116e157600281146116eb57611707565b600191505061043f565b60ff8411156116fc576116fc611631565b50506001821b61043f565b5060208310610133831016604e8410600b841016171561172a575081810a61043f565b611734838361166c565b806000190482111561174857611748611631565b029392505050565b60006104f060ff8416836116af565b600081600019048311821515161561177957611779611631565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156117c6576117c6611631565b500190565b6000828210156117dd576117dd611631565b500390565b600080604083850312156117f557600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261183957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122059b9e186f96f3d36cfb45d369c0c795e2948ee234814e164b74d82a5e0b9a38864736f6c634300080e0033";

export class CompoundExpReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundExpReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpReward {
    return super.attach(address) as CompoundExpReward;
  }
  connect(signer: Signer): CompoundExpReward__factory {
    return super.connect(signer) as CompoundExpReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpRewardInterface {
    return new utils.Interface(_abi) as CompoundExpRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpReward {
    return new Contract(address, _abi, signerOrProvider) as CompoundExpReward;
  }
}

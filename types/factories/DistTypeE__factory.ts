/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DistTypeE, DistTypeEInterface } from "../DistTypeE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002274380380620022748339810160408190526200003491620007a5565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007e6565b620000ee90600a6200090b565b6200014b565b5062000a29565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200091c565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034e565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f89162000974565b62000204919062000996565b620002109190620009c6565b90506200022660065482620004bc60201b60201c565b6006556001600160a01b0384166000908152600860205260408120600101805483929062000256908490620009e9565b90915550508115620002b3576001600160a01b038416600090815260026020526040812080548592906200028c908490620009e9565b925050819055508260036000828254620002a79190620009e9565b90915550620003049050565b6001600160a01b038416600090815260026020526040902054620002d89084620004bc565b6001600160a01b038516600090815260026020526040902055600354620003009084620004bc565b6003555b6001600160a01b0384166000908152600260205260409020546007546200032c919062000974565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006004544362000360919062000996565b905060006005548262000374919062000996565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003a9610309620186a0620009e9565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015620003fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000422919062000a04565b915091506000600354620004456003548585620004e560201b62000a4b1760201c565b62000451919062000996565b90508060066000828254620004679190620009e9565b9250508190555064e8d4a510006200049164e8d4a510008585620005e260201b62000b211760201c565b6200049d919062000996565b60076000828254620004b09190620009e9565b90915550505050505050565b600081831115620004db57620004d3828462000996565b9050620004df565b5060005b92915050565b60008080620004f5868662000628565b91509150816000036200051f57838181620005145762000514620009b0565b0492505050620005db565b83821015620005d6576000620005378787876200067c565b9050600080620005498585856200069a565b91509150816000036200057657868181620005685762000568620009b0565b0495505050505050620005db565b600087620005858282620006d0565b169050600062000597848484620006de565b90506000620005b8838b81620005b157620005b1620009b0565b0462000735565b9050620005c682826200077a565b98505050505050505050620005db565b600080fd5b9392505050565b600080620005f2858585620004e5565b90506000620006038686866200067c565b111562000620576200061781600162000788565b915050620005db565b949350505050565b6000808062000638858562000796565b905060006200064886866200077a565b90508082106200066057908190039250905062000675565b60016200066e8383620006d0565b0393509150505b9250929050565b600081806200068f576200068f620009b0565b838509949350505050565b600080828410620006b25750839050818303620006c8565b6000198501620006c38585620006d0565b915091505b935093915050565b6000620005db828462000996565b6000806200070a83620006f28382620006d0565b81620007025762000702620009b0565b506000919050565b90508284816200071e576200071e620009b0565b046200072b86836200077a565b1795945050505050565b60006001815b6008811015620007735762000768826200076260026200075c83896200077a565b620006d0565b6200077a565b91506001016200073b565b5092915050565b6000620005db828462000974565b6000620005db8284620009e9565b60006000198284099392505050565b600060208284031215620007b857600080fd5b81516001600160a01b0381168114620005db57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008065762000806620007d0565b019392505050565b600181815b808511156200084f578160001904821115620008335762000833620007d0565b808516156200084157918102915b93841c939080029062000813565b509250929050565b6000826200086857506001620004df565b816200087757506000620004df565b81600181146200089057600281146200089b57620008bb565b6001915050620004df565b60ff841115620008af57620008af620007d0565b50506001821b620004df565b5060208310610133831016604e8410600b8410161715620008e0575081810a620004df565b620008ec83836200080e565b8060001904821115620009035762000903620007d0565b029392505050565b6000620005db60ff84168362000857565b600060208083528351808285015260005b818110156200094b578581018301518582016040015282016200092d565b818111156200095e576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009915762000991620007d0565b500290565b600082821015620009ab57620009ab620007d0565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009e457634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620009ff57620009ff620007d0565b500190565b6000806040838503121562000a1857600080fd5b505080516020909101519092909150565b61183b8062000a396000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103cb578063db1d0fd5146103d4578063dd62ed3e146103dc578063f2fde38b1461041557600080fd5b8063a457c2d714610375578063a9059cbb14610388578063bdfeb1e51461039b57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031457806395d89b411461032f5780639dc29fac1461034f578063a150da2a1461036257600080fd5b806370a08231146102f1578063715018a614610304578063739572891461030c57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a557806357627e93146102d857806366666aa9146102e05780636863909e146102e957600080fd5b806332cb6b0c14610275578063395093511461027d57806340c10f191461029057600080fd5b806323b872dd116101a257806323b872dd146102395780632e0f26251461024c5780632ff2e9dc14610266578063313ce5671461026e57600080fd5b806306fdde03146101c9578063095ea7b31461020057806318160ddd14610223575b600080fd5b60408051808201909152600981526844697374547970654560b81b60208201525b6040516101f791906114d3565b60405180910390f35b61021361020e366004611544565b610428565b60405190151581526020016101f7565b61022b61043f565b6040519081526020016101f7565b61021361024736600461156e565b61044e565b610254601281565b60405160ff90911681526020016101f7565b61022b6104f1565b6012610254565b61022b61050b565b61021361028b366004611544565b61052d565b6102a361029e366004611544565b61053a565b005b6102b86102b33660046115aa565b6105e9565b6040805194855260208501939093529183015260608201526080016101f7565b61022b601e81565b61022b60065481565b6102a361062a565b61022b6102ff3660046115aa565b610766565b6102a3610771565b6102b86107a7565b6000546040516001600160a01b0390911681526020016101f7565b60408051808201909152600481526354595f4560e01b60208201526101ea565b6102a361035d366004611544565b6108b7565b61021361037036600461156e565b6108eb565b610213610383366004611544565b610977565b610213610396366004611544565b610984565b6103a3610991565b604080519586526020860194909452928401919091526060830152608082015260a0016101f7565b61022b60075481565b61022b600c81565b61022b6103ea3660046115c5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a36104233660046115aa565b6109b0565b6000610435338484610b5f565b5060015b92915050565b6000610449610c21565b905090565b60006001600160a01b03841633146104db576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d95760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e6848484610c38565b5060015b9392505050565b6104fd6012600661160e565b61050890600a611717565b81565b6105176012600661160e565b61052290600a611717565b61050890600a611726565b60006104ea338484610d44565b6000546001600160a01b031633146105645760405162461bcd60e51b81526004016104d090611745565b6105706012600661160e565b61057b90600a611717565b61058690600a611726565b8161058f610c21565b610599919061177a565b11156105db5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d0565b6105e58282610dcb565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062185610e22565b90509193509193565b60006004544361063a9190611792565b905060006005548261064c9190611792565b905080156105e5576005829055600c5460009081906001600160a01b0316635aff34dc61067e610309620186a061177a565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f491906117a9565b91509150600060035461070a6003548585610a4b565b6107149190611792565b90508060066000828254610728919061177a565b9091555064e8d4a51000905061073f818585610b21565b6107499190611792565b6007600082825461075a919061177a565b90915550505050505050565b600061043982610fc0565b6000546001600160a01b0316331461079b5760405162461bcd60e51b81526004016104d090611745565b6107a56000610fee565b565b6000806000806006546107b861103e565b6107c2919061177a565b935060006107e06107db6000546001600160a01b031690565b610e22565b90506107ec818561177a565b600954909450610804906001600160a01b0316610e22565b9050610810818561177a565b600a54909450610828906001600160a01b0316610e22565b9050610834818561177a565b600b5490945061084c906001600160a01b0316610e22565b9050610858818561177a565b9350838510156108735761086c8585611792565b9250610880565b61087d8486611792565b92505b848481101561088c5750835b80156108af57806108a28564e8d4a51000611726565b6108ac91906117e3565b92505b505090919293565b6000546001600160a01b031633146108e15760405162461bcd60e51b81526004016104d090611745565b6105e58282611129565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109385760405162461bcd60e51b81526004016104d091906114d3565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e69085908590610972908690611792565b610b5f565b60006104ea3384846108eb565b6000610435338484610c38565b60035460055460075460065460006109a761103e565b90509091929394565b6000546001600160a01b031633146109da5760405162461bcd60e51b81526004016104d090611745565b6001600160a01b038116610a3f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d0565b610a4881610fee565b50565b6000806000610a5a86866111dd565b9150915081600003610a7f57838181610a7557610a756117cd565b04925050506104ea565b838210156101c4576000610a9487878761122a565b9050600080610aa4858585611245565b9150915081600003610acc57868181610abf57610abf6117cd565b04955050505050506104ea565b600087610ada60008a611276565b1690506000610aea848484611282565b90506000610b06838b81610b0057610b006117cd565b046112cf565b9050610b12828261130c565b985050505050505050506104ea565b600080610b2f858585610a4b565b90506000610b3e86868661122a565b1115610b5757610b4f816001611318565b9150506104ea565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ba95760405162461bcd60e51b81526004016104d091906114d3565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf45760405162461bcd60e51b81526004016104d091906114d3565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c2b61103e565b600354610449919061177a565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c825760405162461bcd60e51b81526004016104d091906114d3565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610ccd5760405162461bcd60e51b81526004016104d091906114d3565b506000610cd984610fc0565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d255760405162461bcd60e51b81526004016104d091906114d3565b50610d3284836000611324565b610d3e83836001611324565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d915760405162461bcd60e51b81526004016104d091906114d3565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e6908590859061097290869061177a565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e155760405162461bcd60e51b81526004016104d091906114d3565b506105e582826001611324565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e6457506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610e9c91611726565b610ea69190611792565b610eb091906117e3565b9050600060045443610ec29190611792565b9050600060055482610ed49190611792565b600c5490915060009081906001600160a01b0316635aff34dc610efc610309620186a061177a565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7291906117a9565b6001600160a01b038a1660009081526002602052604081205492945090925090610f9d818585610a4b565b610fa79190611792565b9050610fb3818761177a565b9998505050505050505050565b6000610fcb82610e22565b6001600160a01b038316600090815260026020526040902054610439919061177a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806004544361104f9190611792565b90506000600554826110619190611792565b600c5490915060009081906001600160a01b0316635aff34dc611089610309620186a061177a565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ff91906117a9565b9150915060006003546111156003548585610b21565b61111f9190611792565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166111735760405162461bcd60e51b81526004016104d091906114d3565b50600061117f83610fc0565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111cb5760405162461bcd60e51b81526004016104d091906114d3565b506111d883836000611324565b505050565b60008060006111ec85856114a0565b905060006111fa868661130c565b9050808210611210579081900392509050611223565b600161121c8383611276565b0393509150505b9250929050565b6000818061123a5761123a6117cd565b838509949350505050565b60008082841061125b575083905081830361126e565b600185036112698585611276565b915091505b935093915050565b60006104ea8284611792565b6000806112a983611294600086611276565b816112a1576112a16117cd565b506000919050565b90508284816112ba576112ba6117cd565b046112c5868361130c565b1795945050505050565b60006001815b6008811015611305576112fb826112f660026112f1868961130c565b611276565b61130c565b91506001016112d5565b5092915050565b60006104ea8284611726565b60006104ea828461177a565b61132c61062a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a51000929161136491611726565b61136e9190611792565b61137891906117e3565b9050611386600654826114af565b6006556001600160a01b038416600090815260086020526040812060010180548392906113b490849061177a565b9091555050811561140b576001600160a01b038416600090815260026020526040812080548592906113e790849061177a565b925050819055508260036000828254611400919061177a565b909155506114589050565b6001600160a01b03841660009081526002602052604090205461142e90846114af565b6001600160a01b03851660009081526002602052604090205560035461145490846114af565b6003555b6001600160a01b03841660009081526002602052604090205460075461147e9190611726565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b6000818311156114ca576114c38284611792565b9050610439565b50600092915050565b600060208083528351808285015260005b81811015611500578581018301518582016040015282016114e4565b81811115611512576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461153f57600080fd5b919050565b6000806040838503121561155757600080fd5b61156083611528565b946020939093013593505050565b60008060006060848603121561158357600080fd5b61158c84611528565b925061159a60208501611528565b9150604084013590509250925092565b6000602082840312156115bc57600080fd5b6104ea82611528565b600080604083850312156115d857600080fd5b6115e183611528565b91506115ef60208401611528565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561162b5761162b6115f8565b019392505050565b600181815b8085111561166e578160001904821115611654576116546115f8565b8085161561166157918102915b93841c9390800290611638565b509250929050565b60008261168557506001610439565b8161169257506000610439565b81600181146116a857600281146116b2576116ce565b6001915050610439565b60ff8411156116c3576116c36115f8565b50506001821b610439565b5060208310610133831016604e8410600b84101617156116f1575081810a610439565b6116fb8383611633565b806000190482111561170f5761170f6115f8565b029392505050565b60006104ea60ff841683611676565b6000816000190483118215151615611740576117406115f8565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561178d5761178d6115f8565b500190565b6000828210156117a4576117a46115f8565b500390565b600080604083850312156117bc57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261180057634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f77dba1e2348959aa20f8e3cd65675cb76144a37cdb8d378c357d3be720a33e764736f6c634300080e0033";

export class DistTypeE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DistTypeE> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<DistTypeE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): DistTypeE {
    return super.attach(address) as DistTypeE;
  }
  connect(signer: Signer): DistTypeE__factory {
    return super.connect(signer) as DistTypeE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistTypeEInterface {
    return new utils.Interface(_abi) as DistTypeEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DistTypeE {
    return new Contract(address, _abi, signerOrProvider) as DistTypeE;
  }
}

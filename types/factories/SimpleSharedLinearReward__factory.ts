/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleSharedLinearReward,
  SimpleSharedLinearRewardInterface,
} from "../SimpleSharedLinearReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019c9380380620019c98339810160408190526200003491620003ff565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600862000447565b620000ee90600a6200056e565b6200014b565b5062000651565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200057f565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200035b565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091620001f791620005d7565b620002039190620005f9565b6200020f91906200061c565b905080600660008282546200022591906200061c565b90915550506001600160a01b038416600090815260086020526040812060010180548392906200025790849062000636565b90915550508115620002b4576001600160a01b038416600090815260026020526040812080548592906200028d90849062000636565b925050819055508260036000828254620002a8919062000636565b90915550620002ff9050565b6001600160a01b03841660009081526002602052604081208054859290620002de9084906200061c565b925050819055508260036000828254620002f991906200061c565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a51000916200032d91620005d7565b620003399190620005f9565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200036d91906200061c565b90506000600554826200038191906200061c565b90508015620001b0576000620003a28269021e19e0c9bab2400000620005d7565b90508060066000828254620003b8919062000636565b9091555050600354620003d18264e8d4a51000620005d7565b620003dd9190620005f9565b60076000828254620003f0919062000636565b90915550505060058290555050565b6000602082840312156200041257600080fd5b81516001600160a01b03811681146200042a57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000467576200046762000431565b019392505050565b600181815b80851115620004b057816000190482111562000494576200049462000431565b80851615620004a257918102915b93841c939080029062000474565b509250929050565b600082620004c95750600162000568565b81620004d85750600062000568565b8160018114620004f15760028114620004fc576200051c565b600191505062000568565b60ff84111562000510576200051062000431565b50506001821b62000568565b5060208310610133831016604e8410600b841016171562000541575081810a62000568565b6200054d83836200046f565b806000190482111562000564576200056462000431565b0290505b92915050565b60006200042a60ff841683620004b8565b600060208083528351808285015260005b81811015620005ae5785810183015185820160400152820162000590565b81811115620005c1576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005f457620005f462000431565b500290565b6000826200061757634e487b7160e01b600052601260045260246000fd5b500490565b60008282101562000631576200063162000431565b500390565b600082198211156200064c576200064c62000431565b500190565b61136880620006616000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103df578063db1d0fd5146103e8578063dd62ed3e146103f9578063f2fde38b1461043257600080fd5b8063a457c2d714610389578063a9059cbb1461039c578063bdfeb1e5146103af57600080fd5b80638da5cb5b116100d35780638da5cb5b1461032857806395d89b41146103435780639dc29fac14610363578063a150da2a1461037657600080fd5b806370a0823114610305578063715018a614610318578063739572891461032057600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102b957806357627e93146102ec57806366666aa9146102f45780636863909e146102fd57600080fd5b806332cb6b0c14610289578063395093511461029157806340c10f19146102a457600080fd5b806323b872dd116101a257806323b872dd1461024d5780632e0f2625146102605780632ff2e9dc1461027a578063313ce5671461028257600080fd5b806306fdde03146101c9578063095ea7b31461021457806318160ddd14610237575b600080fd5b60408051808201909152601881527f53696d706c655368617265644c696e656172526577617264000000000000000060208201525b60405161020b919061103a565b60405180910390f35b6102276102223660046110ab565b610445565b604051901515815260200161020b565b61023f61045c565b60405190815260200161020b565b61022761025b3660046110d5565b61046c565b610268601281565b60405160ff909116815260200161020b565b61023f61050e565b6012610268565b61023f610528565b61022761029f3660046110ab565b61054a565b6102b76102b23660046110ab565b61055e565b005b6102cc6102c7366004611111565b61060e565b60408051948552602085019390935291830152606082015260800161020b565b61023f600a81565b61023f60065481565b6102b761064f565b61023f610313366004611111565b6106e4565b6102b7610702565b6102cc610738565b6000546040516001600160a01b03909116815260200161020b565b6040805180820190915260048152635346525760e01b60208201526101fe565b6102b76103713660046110ab565b610839565b6102276103843660046110d5565b61086d565b6102276103973660046110ab565b6108f9565b6102276103aa3660046110ab565b610906565b6103b7610913565b604080519586526020860194909452928401919091526060830152608082015260a00161020b565b61023f60075481565b61023f69021e19e0c9bab240000081565b61023f61040736600461112c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b7610440366004611111565b610932565b60006104523384846109cd565b5060015b92915050565b600061046760035490565b905090565b60006001600160a01b03841633146104f9576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104f75760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b610504848484610a8f565b5060019392505050565b61051a60126008611175565b61052590600a61127e565b81565b61053460126008611175565b61053f90600a61127e565b61052590600a61128d565b6000610557338484610ba9565b9392505050565b6000546001600160a01b031633146105885760405162461bcd60e51b81526004016104ee906112ac565b61059460126008611175565b61059f90600a61127e565b6105aa90600a61128d565b816105b460035490565b6105be91906112e1565b11156106005760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104ee565b61060a8282610c30565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061064685610c87565b90509193509193565b60006004544361065f91906112f9565b905060006005548261067191906112f9565b9050801561060a57600061068f8269021e19e0c9bab240000061128d565b905080600660008282546106a391906112e1565b90915550506003546106ba8264e8d4a5100061128d565b6106c49190611310565b600760008282546106d591906112e1565b90915550505060058290555050565b6001600160a01b038116600090815260026020526040812054610456565b6000546001600160a01b0316331461072c5760405162461bcd60e51b81526004016104ee906112ac565b6107366000610d58565b565b600080600080600654610749610da8565b61075391906112e1565b935061076f61076a6000546001600160a01b031690565b610c87565b61077990846112e1565b600954909350610791906001600160a01b0316610c87565b61079b90846112e1565b600a549093506107b3906001600160a01b0316610c87565b6107bd90846112e1565b600b549093506107d5906001600160a01b0316610c87565b6107df90846112e1565b92506000838510156107ff576107f585856112f9565b925083905061080f565b61080984866112f9565b92508490505b801561083257806108258464e8d4a5100061128d565b61082f9190611310565b91505b5090919293565b6000546001600160a01b031633146108635760405162461bcd60e51b81526004016104ee906112ac565b61060a8282610deb565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108ba5760405162461bcd60e51b81526004016104ee919061103a565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461050490859085906108f49086906112f9565b6109cd565b600061055733848461086d565b6000610452338484610a8f565b6003546005546007546006546000610929610da8565b90509091929394565b6000546001600160a01b0316331461095c5760405162461bcd60e51b81526004016104ee906112ac565b6001600160a01b0381166109c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ee565b6109ca81610d58565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a175760405162461bcd60e51b81526004016104ee919061103a565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a625760405162461bcd60e51b81526004016104ee919061103a565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ad95760405162461bcd60e51b81526004016104ee919061103a565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b245760405162461bcd60e51b81526004016104ee919061103a565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b8a5760405162461bcd60e51b81526004016104ee919061103a565b50610b9784836000610ead565b610ba383836001610ead565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bf65760405162461bcd60e51b81526004016104ee919061103a565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461050490859085906108f49086906112e1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c7a5760405162461bcd60e51b81526004016104ee919061103a565b5061060a82826001610ead565b6001600160a01b038116600090815260086020908152604080832054600290925282205460075483929164e8d4a5100091610cc2919061128d565b610ccc9190611310565b610cd691906112f9565b9050600060045443610ce891906112f9565b9050600060055482610cfa91906112f9565b6003546001600160a01b03871660009081526002602052604081205492935091610d2e8469021e19e0c9bab240000061128d565b610d38919061128d565b610d429190611310565b9050610d4e81856112e1565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610db991906112f9565b9050600060055482610dcb91906112f9565b90506000610de38269021e19e0c9bab240000061128d565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e355760405162461bcd60e51b81526004016104ee919061103a565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610e9b5760405162461bcd60e51b81526004016104ee919061103a565b50610ea883836000610ead565b505050565b610eb561064f565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091610eec9161128d565b610ef69190611310565b610f0091906112f9565b90508060066000828254610f1491906112f9565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f449084906112e1565b90915550508115610f9b576001600160a01b03841660009081526002602052604081208054859290610f779084906112e1565b925050819055508260036000828254610f9091906112e1565b90915550610fe29050565b6001600160a01b03841660009081526002602052604081208054859290610fc39084906112f9565b925050819055508260036000828254610fdc91906112f9565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a510009161100e9161128d565b6110189190611310565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b818110156110675785810183015185820160400152820161104b565b81811115611079576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146110a657600080fd5b919050565b600080604083850312156110be57600080fd5b6110c78361108f565b946020939093013593505050565b6000806000606084860312156110ea57600080fd5b6110f38461108f565b92506111016020850161108f565b9150604084013590509250925092565b60006020828403121561112357600080fd5b6105578261108f565b6000806040838503121561113f57600080fd5b6111488361108f565b91506111566020840161108f565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156111925761119261115f565b019392505050565b600181815b808511156111d55781600019048211156111bb576111bb61115f565b808516156111c857918102915b93841c939080029061119f565b509250929050565b6000826111ec57506001610456565b816111f957506000610456565b816001811461120f576002811461121957611235565b6001915050610456565b60ff84111561122a5761122a61115f565b50506001821b610456565b5060208310610133831016604e8410600b8410161715611258575081810a610456565b611262838361119a565b80600019048211156112765761127661115f565b029392505050565b600061055760ff8416836111dd565b60008160001904831182151516156112a7576112a761115f565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112f4576112f461115f565b500190565b60008282101561130b5761130b61115f565b500390565b60008261132d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f6d646372b3121dd0a21c0734549f58323b5630154c049bcb545dfed7d3de2e064736f6c634300080e0033";

export class SimpleSharedLinearReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleSharedLinearReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleSharedLinearReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleSharedLinearReward {
    return super.attach(address) as SimpleSharedLinearReward;
  }
  connect(signer: Signer): SimpleSharedLinearReward__factory {
    return super.connect(signer) as SimpleSharedLinearReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleSharedLinearRewardInterface {
    return new utils.Interface(_abi) as SimpleSharedLinearRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleSharedLinearReward {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleSharedLinearReward;
  }
}

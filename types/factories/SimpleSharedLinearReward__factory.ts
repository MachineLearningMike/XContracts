/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleSharedLinearReward,
  SimpleSharedLinearRewardInterface,
} from "../SimpleSharedLinearReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019cb380380620019cb8339810160408190526200003491620003ff565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600862000447565b620000ee90600a6200056e565b6200014b565b5062000651565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200057f565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200035b565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091620001f791620005d7565b620002039190620005f9565b6200020f91906200061c565b905080600660008282546200022591906200061c565b90915550506001600160a01b038416600090815260086020526040812060010180548392906200025790849062000636565b90915550508115620002b4576001600160a01b038416600090815260026020526040812080548592906200028d90849062000636565b925050819055508260036000828254620002a8919062000636565b90915550620002ff9050565b6001600160a01b03841660009081526002602052604081208054859290620002de9084906200061c565b925050819055508260036000828254620002f991906200061c565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a51000916200032d91620005d7565b620003399190620005f9565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200036d91906200061c565b90506000600554826200038191906200061c565b90508015620001b0576000620003a28269021e19e0c9bab2400000620005d7565b90508060066000828254620003b8919062000636565b9091555050600354620003d18264e8d4a51000620005d7565b620003dd9190620005f9565b60076000828254620003f0919062000636565b90915550505060058290555050565b6000602082840312156200041257600080fd5b81516001600160a01b03811681146200042a57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000467576200046762000431565b019392505050565b600181815b80851115620004b057816000190482111562000494576200049462000431565b80851615620004a257918102915b93841c939080029062000474565b509250929050565b600082620004c95750600162000568565b81620004d85750600062000568565b8160018114620004f15760028114620004fc576200051c565b600191505062000568565b60ff84111562000510576200051062000431565b50506001821b62000568565b5060208310610133831016604e8410600b841016171562000541575081810a62000568565b6200054d83836200046f565b806000190482111562000564576200056462000431565b0290505b92915050565b60006200042a60ff841683620004b8565b600060208083528351808285015260005b81811015620005ae5785810183015185820160400152820162000590565b81811115620005c1576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005f457620005f462000431565b500290565b6000826200061757634e487b7160e01b600052601260045260246000fd5b500490565b60008282101562000631576200063162000431565b500390565b600082198211156200064c576200064c62000431565b500190565b61136a80620006616000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103df578063db1d0fd5146103e8578063dd62ed3e146103f9578063f2fde38b1461043257600080fd5b8063a457c2d714610389578063a9059cbb1461039c578063bdfeb1e5146103af57600080fd5b80638da5cb5b116100d35780638da5cb5b1461032857806395d89b41146103435780639dc29fac14610363578063a150da2a1461037657600080fd5b806370a0823114610305578063715018a614610318578063739572891461032057600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102b957806357627e93146102ec57806366666aa9146102f45780636863909e146102fd57600080fd5b806332cb6b0c14610289578063395093511461029157806340c10f19146102a457600080fd5b806323b872dd116101a257806323b872dd1461024d5780632e0f2625146102605780632ff2e9dc1461027a578063313ce5671461028257600080fd5b806306fdde03146101c9578063095ea7b31461021457806318160ddd14610237575b600080fd5b60408051808201909152601881527f53696d706c655368617265644c696e656172526577617264000000000000000060208201525b60405161020b919061103c565b60405180910390f35b6102276102223660046110ad565b610445565b604051901515815260200161020b565b61023f61045c565b60405190815260200161020b565b61022761025b3660046110d7565b61046c565b610268601281565b60405160ff909116815260200161020b565b61023f61050e565b6012610268565b61023f610528565b61022761029f3660046110ad565b61054b565b6102b76102b23660046110ad565b61055f565b005b6102cc6102c7366004611113565b610610565b60408051948552602085019390935291830152606082015260800161020b565b61023f600a81565b61023f60065481565b6102b7610651565b61023f610313366004611113565b6106e6565b6102b7610704565b6102cc61073a565b6000546040516001600160a01b03909116815260200161020b565b6040805180820190915260048152635346525760e01b60208201526101fe565b6102b76103713660046110ad565b61083b565b6102276103843660046110d7565b61086f565b6102276103973660046110ad565b6108fb565b6102276103aa3660046110ad565b610908565b6103b7610915565b604080519586526020860194909452928401919091526060830152608082015260a00161020b565b61023f60075481565b61023f69021e19e0c9bab240000081565b61023f61040736600461112e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b7610440366004611113565b610934565b60006104523384846109cf565b5060015b92915050565b600061046760035490565b905090565b60006001600160a01b03841633146104f9576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104f75760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b610504848484610a91565b5060019392505050565b61051a60126008611177565b61052590600a611280565b81565b61053460126008611177565b61053f90600a611280565b610525906103e861128f565b6000610558338484610bab565b9392505050565b6000546001600160a01b031633146105895760405162461bcd60e51b81526004016104ee906112ae565b61059560126008611177565b6105a090600a611280565b6105ac906103e861128f565b816105b660035490565b6105c091906112e3565b11156106025760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104ee565b61060c8282610c32565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061064885610c89565b90509193509193565b60006004544361066191906112fb565b905060006005548261067391906112fb565b9050801561060c5760006106918269021e19e0c9bab240000061128f565b905080600660008282546106a591906112e3565b90915550506003546106bc8264e8d4a5100061128f565b6106c69190611312565b600760008282546106d791906112e3565b90915550505060058290555050565b6001600160a01b038116600090815260026020526040812054610456565b6000546001600160a01b0316331461072e5760405162461bcd60e51b81526004016104ee906112ae565b6107386000610d5a565b565b60008060008060065461074b610daa565b61075591906112e3565b935061077161076c6000546001600160a01b031690565b610c89565b61077b90846112e3565b600954909350610793906001600160a01b0316610c89565b61079d90846112e3565b600a549093506107b5906001600160a01b0316610c89565b6107bf90846112e3565b600b549093506107d7906001600160a01b0316610c89565b6107e190846112e3565b9250600083851015610801576107f785856112fb565b9250839050610811565b61080b84866112fb565b92508490505b801561083457806108278464e8d4a5100061128f565b6108319190611312565b91505b5090919293565b6000546001600160a01b031633146108655760405162461bcd60e51b81526004016104ee906112ae565b61060c8282610ded565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108bc5760405162461bcd60e51b81526004016104ee919061103c565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461050490859085906108f69086906112fb565b6109cf565b600061055833848461086f565b6000610452338484610a91565b600354600554600754600654600061092b610daa565b90509091929394565b6000546001600160a01b0316331461095e5760405162461bcd60e51b81526004016104ee906112ae565b6001600160a01b0381166109c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ee565b6109cc81610d5a565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a195760405162461bcd60e51b81526004016104ee919061103c565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a645760405162461bcd60e51b81526004016104ee919061103c565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610adb5760405162461bcd60e51b81526004016104ee919061103c565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b265760405162461bcd60e51b81526004016104ee919061103c565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b8c5760405162461bcd60e51b81526004016104ee919061103c565b50610b9984836000610eaf565b610ba583836001610eaf565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bf85760405162461bcd60e51b81526004016104ee919061103c565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461050490859085906108f69086906112e3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c7c5760405162461bcd60e51b81526004016104ee919061103c565b5061060c82826001610eaf565b6001600160a01b038116600090815260086020908152604080832054600290925282205460075483929164e8d4a5100091610cc4919061128f565b610cce9190611312565b610cd891906112fb565b9050600060045443610cea91906112fb565b9050600060055482610cfc91906112fb565b6003546001600160a01b03871660009081526002602052604081205492935091610d308469021e19e0c9bab240000061128f565b610d3a919061128f565b610d449190611312565b9050610d5081856112e3565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610dbb91906112fb565b9050600060055482610dcd91906112fb565b90506000610de58269021e19e0c9bab240000061128f565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e375760405162461bcd60e51b81526004016104ee919061103c565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610e9d5760405162461bcd60e51b81526004016104ee919061103c565b50610eaa83836000610eaf565b505050565b610eb7610651565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091610eee9161128f565b610ef89190611312565b610f0291906112fb565b90508060066000828254610f1691906112fb565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f469084906112e3565b90915550508115610f9d576001600160a01b03841660009081526002602052604081208054859290610f799084906112e3565b925050819055508260036000828254610f9291906112e3565b90915550610fe49050565b6001600160a01b03841660009081526002602052604081208054859290610fc59084906112fb565b925050819055508260036000828254610fde91906112fb565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a51000916110109161128f565b61101a9190611312565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b818110156110695785810183015185820160400152820161104d565b8181111561107b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146110a857600080fd5b919050565b600080604083850312156110c057600080fd5b6110c983611091565b946020939093013593505050565b6000806000606084860312156110ec57600080fd5b6110f584611091565b925061110360208501611091565b9150604084013590509250925092565b60006020828403121561112557600080fd5b61055882611091565b6000806040838503121561114157600080fd5b61114a83611091565b915061115860208401611091565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561119457611194611161565b019392505050565b600181815b808511156111d75781600019048211156111bd576111bd611161565b808516156111ca57918102915b93841c93908002906111a1565b509250929050565b6000826111ee57506001610456565b816111fb57506000610456565b8160018114611211576002811461121b57611237565b6001915050610456565b60ff84111561122c5761122c611161565b50506001821b610456565b5060208310610133831016604e8410600b841016171561125a575081810a610456565b611264838361119c565b806000190482111561127857611278611161565b029392505050565b600061055860ff8416836111df565b60008160001904831182151516156112a9576112a9611161565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112f6576112f6611161565b500190565b60008282101561130d5761130d611161565b500390565b60008261132f57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212202e4f51e2c2006340be27cbb1ea7d849f4c24e91d741ba39296a3b3834423b17f64736f6c634300080e0033";

export class SimpleSharedLinearReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleSharedLinearReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleSharedLinearReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleSharedLinearReward {
    return super.attach(address) as SimpleSharedLinearReward;
  }
  connect(signer: Signer): SimpleSharedLinearReward__factory {
    return super.connect(signer) as SimpleSharedLinearReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleSharedLinearRewardInterface {
    return new utils.Interface(_abi) as SimpleSharedLinearRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleSharedLinearReward {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleSharedLinearReward;
  }
}

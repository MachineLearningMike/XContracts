/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleFixedReward,
  SimpleFixedRewardInterface,
} from "../SimpleFixedReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019a4380380620019a48339810160408190526200003491620003ee565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600662000436565b620000ee90600a6200055d565b6200014b565b5062000640565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200056e565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f891620005c6565b620002049190620005e8565b62000210919062000602565b90508060066000828254620002269190620005e8565b90915550506001600160a01b038416600090815260086020526040812060010180548392906200025890849062000625565b90915550508115620002b5576001600160a01b038416600090815260026020526040812080548592906200028e90849062000625565b925050819055508260036000828254620002a9919062000625565b90915550620003009050565b6001600160a01b03841660009081526002602052604081208054859290620002df908490620005e8565b925050819055508260036000828254620002fa9190620005e8565b90915550505b6001600160a01b038416600090815260026020526040902054600754620003289190620005c6565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200035c9190620005e8565b9050600060055482620003709190620005e8565b90508015620001b0576000620003918269021e19e0c9bab2400000620005c6565b90508060066000828254620003a7919062000625565b9091555050600354620003c08264e8d4a51000620005c6565b620003cc919062000602565b60076000828254620003df919062000625565b90915550505060058290555050565b6000602082840312156200040157600080fd5b81516001600160a01b03811681146200041957600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000456576200045662000420565b019392505050565b600181815b808511156200049f57816000190482111562000483576200048362000420565b808516156200049157918102915b93841c939080029062000463565b509250929050565b600082620004b85750600162000557565b81620004c75750600062000557565b8160018114620004e05760028114620004eb576200050b565b600191505062000557565b60ff841115620004ff57620004ff62000420565b50506001821b62000557565b5060208310610133831016604e8410600b841016171562000530575081810a62000557565b6200053c83836200045e565b806000190482111562000553576200055362000420565b0290505b92915050565b60006200041960ff841683620004a7565b600060208083528351808285015260005b818110156200059d578581018301518582016040015282016200057f565b81811115620005b0576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005e357620005e362000420565b500290565b600082821015620005fd57620005fd62000420565b500390565b6000826200062057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156200063b576200063b62000420565b500190565b61135480620006506000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d3578063db1d0fd5146103dc578063dd62ed3e146103ed578063f2fde38b1461042657600080fd5b8063a457c2d71461037d578063a9059cbb14610390578063bdfeb1e5146103a357600080fd5b80638da5cb5b116100d35780638da5cb5b1461031c57806395d89b41146103375780639dc29fac14610357578063a150da2a1461036a57600080fd5b806370a08231146102f9578063715018a61461030c578063739572891461031457600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ad57806357627e93146102e057806366666aa9146102e85780636863909e146102f157600080fd5b806332cb6b0c1461027d578063395093511461028557806340c10f191461029857600080fd5b806323b872dd116101a257806323b872dd146102415780632e0f2625146102545780632ff2e9dc1461026e578063313ce5671461027657600080fd5b806306fdde03146101c9578063095ea7b31461020857806318160ddd1461022b575b600080fd5b60408051808201909152601181527014da5b5c1b19519a5e195914995dd85c99607a1b60208201525b6040516101ff9190611026565b60405180910390f35b61021b610216366004611097565b610439565b60405190151581526020016101ff565b610233610450565b6040519081526020016101ff565b61021b61024f3660046110c1565b610460565b61025c601281565b60405160ff90911681526020016101ff565b610233610502565b601261025c565b61023361051c565b61021b610293366004611097565b61053f565b6102ab6102a6366004611097565b610553565b005b6102c06102bb3660046110fd565b610604565b6040805194855260208501939093529183015260608201526080016101ff565b610233601e81565b61023360065481565b6102ab610645565b6102336103073660046110fd565b6106da565b6102ab6106f8565b6102c061072e565b6000546040516001600160a01b0390911681526020016101ff565b6040805180820190915260048152635346525760e01b60208201526101f2565b6102ab610365366004611097565b610833565b61021b6103783660046110c1565b610867565b61021b61038b366004611097565b6108f3565b61021b61039e366004611097565b610900565b6103ab61090d565b604080519586526020860194909452928401919091526060830152608082015260a0016101ff565b61023360075481565b61023369021e19e0c9bab240000081565b6102336103fb366004611118565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ab6104343660046110fd565b61092c565b60006104463384846109c7565b5060015b92915050565b600061045b60035490565b905090565b60006001600160a01b03841633146104ed576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104eb5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104f8848484610a89565b5060019392505050565b61050e60126006611161565b61051990600a61126a565b81565b61052860126006611161565b61053390600a61126a565b610519906103e8611279565b600061054c338484610ba3565b9392505050565b6000546001600160a01b0316331461057d5760405162461bcd60e51b81526004016104e290611298565b61058960126006611161565b61059490600a61126a565b6105a0906103e8611279565b816105aa60035490565b6105b491906112cd565b11156105f65760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104e2565b6106008282610c2a565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061063c85610c81565b90509193509193565b60006004544361065591906112e5565b905060006005548261066791906112e5565b905080156106005760006106858269021e19e0c9bab2400000611279565b9050806006600082825461069991906112cd565b90915550506003546106b08264e8d4a51000611279565b6106ba91906112fc565b600760008282546106cb91906112cd565b90915550505060058290555050565b6001600160a01b03811660009081526002602052604081205461044a565b6000546001600160a01b031633146107225760405162461bcd60e51b81526004016104e290611298565b61072c6000610d53565b565b60008060008060065461073f610da3565b61074991906112cd565b93506107656107606000546001600160a01b031690565b610c81565b61076f90846112cd565b600954909350610787906001600160a01b0316610c81565b61079190846112cd565b600a549093506107a9906001600160a01b0316610c81565b6107b390846112cd565b600b549093506107cb906001600160a01b0316610c81565b6107d590846112cd565b9250828410156107f0576107e984846112e5565b91506107fd565b6107fa83856112e5565b91505b83838110156108095750825b801561082c578061081f8464e8d4a51000611279565b61082991906112fc565b91505b5090919293565b6000546001600160a01b0316331461085d5760405162461bcd60e51b81526004016104e290611298565b6106008282610de6565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108b45760405162461bcd60e51b81526004016104e29190611026565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104f890859085906108ee9086906112e5565b6109c7565b600061054c338484610867565b6000610446338484610a89565b6003546005546007546006546000610923610da3565b90509091929394565b6000546001600160a01b031633146109565760405162461bcd60e51b81526004016104e290611298565b6001600160a01b0381166109bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e2565b6109c481610d53565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a115760405162461bcd60e51b81526004016104e29190611026565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a5c5760405162461bcd60e51b81526004016104e29190611026565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ad35760405162461bcd60e51b81526004016104e29190611026565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b1e5760405162461bcd60e51b81526004016104e29190611026565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b845760405162461bcd60e51b81526004016104e29190611026565b50610b9184836000610ea8565b610b9d83836001610ea8565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bf05760405162461bcd60e51b81526004016104e29190611026565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104f890859085906108ee9086906112cd565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c745760405162461bcd60e51b81526004016104e29190611026565b5061060082826001610ea8565b6001600160a01b0381166000908152600860209081526040808320546002909252822054600754839264e8d4a51000929091610cbd9190611279565b610cc791906112e5565b610cd191906112fc565b9050600060045443610ce391906112e5565b9050600060055482610cf591906112e5565b6003546001600160a01b03871660009081526002602052604081205492935091610d298469021e19e0c9bab2400000611279565b610d339190611279565b610d3d91906112fc565b9050610d4981856112cd565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610db491906112e5565b9050600060055482610dc691906112e5565b90506000610dde8269021e19e0c9bab2400000611279565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e305760405162461bcd60e51b81526004016104e29190611026565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610e965760405162461bcd60e51b81526004016104e29190611026565b50610ea383836000610ea8565b505050565b610eb0610645565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ee891611279565b610ef291906112e5565b610efc91906112fc565b90508060066000828254610f1091906112e5565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f409084906112cd565b90915550508115610f97576001600160a01b03841660009081526002602052604081208054859290610f739084906112cd565b925050819055508260036000828254610f8c91906112cd565b90915550610fde9050565b6001600160a01b03841660009081526002602052604081208054859290610fbf9084906112e5565b925050819055508260036000828254610fd891906112e5565b90915550505b6001600160a01b0384166000908152600260205260409020546007546110049190611279565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b8181101561105357858101830151858201604001528201611037565b81811115611065576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461109257600080fd5b919050565b600080604083850312156110aa57600080fd5b6110b38361107b565b946020939093013593505050565b6000806000606084860312156110d657600080fd5b6110df8461107b565b92506110ed6020850161107b565b9150604084013590509250925092565b60006020828403121561110f57600080fd5b61054c8261107b565b6000806040838503121561112b57600080fd5b6111348361107b565b91506111426020840161107b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561117e5761117e61114b565b019392505050565b600181815b808511156111c15781600019048211156111a7576111a761114b565b808516156111b457918102915b93841c939080029061118b565b509250929050565b6000826111d85750600161044a565b816111e55750600061044a565b81600181146111fb576002811461120557611221565b600191505061044a565b60ff8411156112165761121661114b565b50506001821b61044a565b5060208310610133831016604e8410600b8410161715611244575081810a61044a565b61124e8383611186565b80600019048211156112625761126261114b565b029392505050565b600061054c60ff8416836111c9565b60008160001904831182151516156112935761129361114b565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112e0576112e061114b565b500190565b6000828210156112f7576112f761114b565b500390565b60008261131957634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a8755a7df62f062e3cd01e9e510b6310c2156766c69ef4ee3a8497a7d4981ac664736f6c634300080e0033";

export class SimpleFixedReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleFixedReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleFixedReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleFixedReward {
    return super.attach(address) as SimpleFixedReward;
  }
  connect(signer: Signer): SimpleFixedReward__factory {
    return super.connect(signer) as SimpleFixedReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleFixedRewardInterface {
    return new utils.Interface(_abi) as SimpleFixedRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleFixedReward {
    return new Contract(address, _abi, signerOrProvider) as SimpleFixedReward;
  }
}

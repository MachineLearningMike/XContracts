/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundInterestN,
  CompoundInterestNInterface,
} from "../CompoundInterestN";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestNet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnDone",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200239438038062002394833981016040819052620000349162000989565b6200003f33620000fb565b600d80546001600160a01b0383166001600160a01b031991821617909155436004556006805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600780548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600880549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620009ca565b620000ee90600a62000aef565b6200014b565b5062000bea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000b00565b60405180910390fd5b50620001b082826001620001b4565b5050565b6001600160a01b0383166000908152600260205260408120546009805491929091620001e290849062000b58565b9091555050600c5460045460009190620001fd904362000b58565b62000209919062000b58565b600d5490915060009081906001600160a01b0316635aff34dc62000233610309620186a062000b72565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac919062000b8d565b6001600160a01b03881660009081526005602052604090206001015460045492945090925090620002de904362000b58565b620002ea919062000b58565b600d5490935060009081906001600160a01b0316635aff34dc62000314610309620186a062000b72565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa15801562000367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038d919062000b8d565b91509150620003ce600260008a6001600160a01b03166001600160a01b031681526020019081526020016000205483836200059560201b620008511760201c565b620003e8600a5486866200059560201b620008511760201c565b620003f4919062000b58565b600a5560045462000406904362000b58565b600c5550600093506200041e925086915050620005dd565b9050801562000472576001600160a01b038416600090815260026020526040812080548392906200045190849062000b72565b9250508190555080600b60008282546200046c919062000b72565b90915550505b60045462000481904362000b58565b6001600160a01b0385166000908152600560205260409020600101558115620004f5576001600160a01b03841660009081526002602052604081208054859290620004ce90849062000b72565b925050819055508260036000828254620004e9919062000b72565b90915550620005409050565b6001600160a01b038416600090815260026020526040812080548592906200051f90849062000b58565b9250508190555082600360008282546200053a919062000b58565b90915550505b6001600160a01b03841660009081526002602052604081205460098054919283926200056e90849062000b72565b9250508190555080600a600082825462000589919062000b72565b90915550505050505050565b600080620005a58585856200070d565b90506000620005b686868662000803565b1115620005d357620005ca81600162000821565b915050620005d6565b90505b9392505050565b6001600160a01b0381166000908152600560205260408120600101546004548291906200060b904362000b58565b62000617919062000b58565b600d5490915060009081906001600160a01b0316635aff34dc62000641610309620186a062000b72565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000694573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006ba919062000b8d565b6001600160a01b03871660009081526002602090815260408220549395509193509190620006f7908290869086906200088f6200070d821b17901c565b62000703919062000b58565b9695505050505050565b600080806200071d868662000838565b915091508160000362000747578381816200073c576200073c62000bb2565b0492505050620005d6565b83821015620007fe5760006200075f87878762000803565b9050600080620007718585856200088c565b91509150816000036200079e5786818162000790576200079062000bb2565b0495505050505050620005d6565b600087620007ad8282620008c2565b1690506000620007bf848484620008d0565b90506000620007e0838b81620007d957620007d962000bb2565b0462000927565b9050620007ee82826200096c565b98505050505050505050620005d6565b600080fd5b6000818062000816576200081662000bb2565b838509949350505050565b60006200082f828462000b72565b90505b92915050565b600080806200084885856200097a565b905060006200085886866200096c565b90508082106200087057908190039250905062000885565b60016200087e8383620008c2565b0393509150505b9250929050565b600080828410620008a45750839050818303620008ba565b6000198501620008b58585620008c2565b915091505b935093915050565b60006200082f828462000b58565b600080620008fc83620008e48382620008c2565b81620008f457620008f462000bb2565b506000919050565b905082848162000910576200091062000bb2565b046200091d86836200096c565b1795945050505050565b60006001815b600881101562000965576200095a826200095460026200094e83896200096c565b620008c2565b6200096c565b91506001016200092d565b5092915050565b60006200082f828462000bc8565b60006000198284099392505050565b6000602082840312156200099c57600080fd5b81516001600160a01b0381168114620005d657600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620009ea57620009ea620009b4565b019392505050565b600181815b8085111562000a3357816000190482111562000a175762000a17620009b4565b8085161562000a2557918102915b93841c9390800290620009f7565b509250929050565b60008262000a4c5750600162000832565b8162000a5b5750600062000832565b816001811462000a74576002811462000a7f5762000a9f565b600191505062000832565b60ff84111562000a935762000a93620009b4565b50506001821b62000832565b5060208310610133831016604e8410600b841016171562000ac4575081810a62000832565b62000ad08383620009f2565b806000190482111562000ae75762000ae7620009b4565b029392505050565b60006200082f60ff84168362000a3b565b600060208083528351808285015260005b8181101562000b2f5785810183015185820160400152820162000b11565b8181111562000b42576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000b6d5762000b6d620009b4565b500390565b6000821982111562000b885762000b88620009b4565b500190565b6000806040838503121562000ba157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000be55762000be5620009b4565b500290565b61179a8062000bfa6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a150da2a1161007c578063a150da2a14610303578063a457c2d714610316578063a9059cbb14610329578063bdfeb1e51461033c578063dd62ed3e14610371578063f2fde38b146103aa57600080fd5b806370a0823114610271578063715018a614610284578063739572891461028c5780638da5cb5b146102b457806395d89b41146102cf5780639dc29fac146102f057600080fd5b80632ff2e9dc116101155780632ff2e9dc146101f7578063313ce567146101ff57806332cb6b0c14610206578063395093511461020e57806340c10f1914610221578063416ae7681461023657600080fd5b806306fdde0314610152578063095ea7b31461019157806318160ddd146101b457806323b872dd146101ca5780632e0f2625146101dd575b600080fd5b60408051808201909152601181527021b7b6b837bab73224b73a32b932b9ba2760791b60208201525b6040516101889190611432565b60405180910390f35b6101a461019f3660046114a3565b6103bd565b6040519015158152602001610188565b6101bc6103d4565b604051908152602001610188565b6101a46101d83660046114cd565b6103e3565b6101e5601281565b60405160ff9091168152602001610188565b6101bc610486565b60126101e5565b6101bc6104a0565b6101a461021c3660046114a3565b6104c3565b61023461022f3660046114a3565b6104d0565b005b610249610244366004611509565b610508565b604080519586526020860194909452928401919091526060830152608082015260a001610188565b6101bc61027f366004611509565b61056c565b610234610577565b6102946105ad565b604080519485526020850193909352918301526060820152608001610188565b6000546040516001600160a01b039091168152602001610188565b60408051808201909152600581526421a2a92ba760d91b602082015261017b565b6102346102fe3660046114a3565b6106a6565b6101a46103113660046114cd565b6106da565b6101a46103243660046114a3565b610766565b6101a46103373660046114a3565b610773565b610344610780565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610188565b6101bc61037f366004611524565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102346103b8366004611509565b6107b6565b60006103ca338484610965565b5060015b92915050565b60006103de610a27565b905090565b60006001600160a01b0384163314610470576001600160a01b03841660009081526001602090815260408083203384529091529020548281101561046e5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b61047b848484610a3e565b5060015b9392505050565b6104926012600861156d565b61049d90600a611676565b81565b6104ac6012600861156d565b6104b790600a611676565b61049d906103e8611685565b600061047f338484610b4a565b6000546001600160a01b031633146104fa5760405162461bcd60e51b8152600401610465906116a4565b6105048282610bd1565b5050565b6001600160a01b03811660009081526002602052604081205460045490919081908190819061053790436116d9565b925061054286610c28565b6001600160a01b039096166000908152600560205260409020600101549496939592949293915050565b60006103ce82610d3b565b6000546001600160a01b031633146105a15760405162461bcd60e51b8152600401610465906116a4565b6105ab6000610d69565b565b6000806000806105bb610db9565b93506105d76105d26000546001600160a01b031690565b610c28565b6105e190846116f0565b6006549093506105f9906001600160a01b0316610c28565b61060390846116f0565b60075490935061061b906001600160a01b0316610c28565b61062590846116f0565b60085490935061063d906001600160a01b0316610c28565b61064790846116f0565b92506000838510156106675761065d85856116d9565b9250839050610677565b61067184866116d9565b92508490505b801561069f57806106928469d3c21bcecceda1000000611685565b61069c919061171e565b91505b5090919293565b6000546001600160a01b031633146106d05760405162461bcd60e51b8152600401610465906116a4565b6105048282610e9b565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166107275760405162461bcd60e51b81526004016104659190611432565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047b90859085906107619086906116d9565b610965565b600061047f3384846106da565b60006103ca338484610a3e565b600354600954600a546004546000908190819061079d90436116d9565b92506107a7610db9565b9150600b549050909192939495565b6000546001600160a01b031633146107e05760405162461bcd60e51b8152600401610465906116a4565b6001600160a01b0381166108455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610465565b61084e81610d69565b50565b60008061085f85858561088f565b9050600061086e868686610f4f565b11156108875761087f816001610f6a565b91505061047f565b949350505050565b600080600061089e8686610f76565b91509150816000036108c3578381816108b9576108b9611708565b049250505061047f565b8382101561014d5760006108d8878787610f4f565b90506000806108e8858585610fc3565b91509150816000036109105786818161090357610903611708565b049550505050505061047f565b60008761091e60008a610ff4565b169050600061092e848484611000565b9050600061094a838b8161094457610944611708565b0461104d565b9050610956828261108a565b9850505050505050505061047f565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0384166109af5760405162461bcd60e51b81526004016104659190611432565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166109fa5760405162461bcd60e51b81526004016104659190611432565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610a31610db9565b6003546103de91906116f0565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a885760405162461bcd60e51b81526004016104659190611432565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610ad35760405162461bcd60e51b81526004016104659190611432565b506000610adf84610d3b565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b2b5760405162461bcd60e51b81526004016104659190611432565b50610b3884836000611096565b610b4483836001611096565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610b975760405162461bcd60e51b81526004016104659190611432565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047b90859085906107619086906116f0565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c1b5760405162461bcd60e51b81526004016104659190611432565b5061050482826001611096565b6001600160a01b038116600090815260056020526040812060010154600454829190610c5490436116d9565b610c5e91906116d9565b600d5490915060009081906001600160a01b0316635aff34dc610c86610309620186a06116f0565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfc9190611740565b6001600160a01b03871660009081526002602052604081205492945090925090610d2781858561088f565b610d3191906116d9565b9695505050505050565b6000610d4682610c28565b6001600160a01b0383166000908152600260205260409020546103ce91906116f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600c5460045443610dcd91906116d9565b610dd791906116d9565b600d5490915060009081906001600160a01b0316635aff34dc610dff610309620186a06116f0565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190611740565b91509150600954610e89600a54848461088f565b610e9391906116d9565b935050505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610ee55760405162461bcd60e51b81526004016104659190611432565b506000610ef183610d3b565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610f3d5760405162461bcd60e51b81526004016104659190611432565b50610f4a83836000611096565b505050565b60008180610f5f57610f5f611708565b838509949350505050565b600061047f82846116f0565b6000806000610f858585611423565b90506000610f93868661108a565b9050808210610fa9579081900392509050610fbc565b6001610fb58383610ff4565b0393509150505b9250929050565b600080828410610fd95750839050818303610fec565b60018503610fe78585610ff4565b915091505b935093915050565b600061047f82846116d9565b60008061102783611012600086610ff4565b8161101f5761101f611708565b506000919050565b905082848161103857611038611708565b04611043868361108a565b1795945050505050565b60006001815b60088110156110835761107982611074600261106f868961108a565b610ff4565b61108a565b9150600101611053565b5092915050565b600061047f8284611685565b6001600160a01b03831660009081526002602052604081205460098054919290916110c29084906116d9565b9091555050600c54600454600091906110db90436116d9565b6110e591906116d9565b600d5490915060009081906001600160a01b0316635aff34dc61110d610309620186a06116f0565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801561115f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111839190611740565b6001600160a01b038816600090815260056020526040902060010154600454929450909250906111b390436116d9565b6111bd91906116d9565b600d5490935060009081906001600160a01b0316635aff34dc6111e5610309620186a06116f0565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125b9190611740565b6001600160a01b038a166000908152600260205260409020549193509150611284908383610851565b611291600a548686610851565b61129b91906116d9565b600a556004546112ab90436116d9565b600c81905550505050505060006112c184610c28565b90508015611310576001600160a01b038416600090815260026020526040812080548392906112f19084906116f0565b9250508190555080600b600082825461130a91906116f0565b90915550505b60045461131d90436116d9565b6001600160a01b038516600090815260056020526040902060010155811561138b576001600160a01b038416600090815260026020526040812080548592906113679084906116f0565b92505081905550826003600082825461138091906116f0565b909155506113d29050565b6001600160a01b038416600090815260026020526040812080548592906113b39084906116d9565b9250508190555082600360008282546113cc91906116d9565b90915550505b6001600160a01b03841660009081526002602052604081205460098054919283926113fe9084906116f0565b9250508190555080600a600082825461141791906116f0565b90915550505050505050565b60006000198284099392505050565b600060208083528351808285015260005b8181101561145f57858101830151858201604001528201611443565b81811115611471576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461149e57600080fd5b919050565b600080604083850312156114b657600080fd5b6114bf83611487565b946020939093013593505050565b6000806000606084860312156114e257600080fd5b6114eb84611487565b92506114f960208501611487565b9150604084013590509250925092565b60006020828403121561151b57600080fd5b61047f82611487565b6000806040838503121561153757600080fd5b61154083611487565b915061154e60208401611487565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561158a5761158a611557565b019392505050565b600181815b808511156115cd5781600019048211156115b3576115b3611557565b808516156115c057918102915b93841c9390800290611597565b509250929050565b6000826115e4575060016103ce565b816115f1575060006103ce565b816001811461160757600281146116115761162d565b60019150506103ce565b60ff84111561162257611622611557565b50506001821b6103ce565b5060208310610133831016604e8410600b8410161715611650575081810a6103ce565b61165a8383611592565b806000190482111561166e5761166e611557565b029392505050565b600061047f60ff8416836115d5565b600081600019048311821515161561169f5761169f611557565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000828210156116eb576116eb611557565b500390565b6000821982111561170357611703611557565b500190565b634e487b7160e01b600052601260045260246000fd5b60008261173b57634e487b7160e01b600052601260045260246000fd5b500490565b6000806040838503121561175357600080fd5b50508051602090910151909290915056fea2646970667358221220f15df68f6e227d2a00b86861189d524168f023d923249d948af97bf1c82d952664736f6c634300080e0033";

export class CompoundInterestN__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundInterestN> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundInterestN>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundInterestN {
    return super.attach(address) as CompoundInterestN;
  }
  connect(signer: Signer): CompoundInterestN__factory {
    return super.connect(signer) as CompoundInterestN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterestNInterface {
    return new utils.Interface(_abi) as CompoundInterestNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundInterestN {
    return new Contract(address, _abi, signerOrProvider) as CompoundInterestN;
  }
}

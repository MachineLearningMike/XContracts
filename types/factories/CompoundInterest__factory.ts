/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundInterest,
  CompoundInterestInterface,
} from "../CompoundInterest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002319380380620023198339810160408190526200003491620008dd565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e1601260086200091e565b620000ee90600a62000a43565b6200014b565b5062000b3e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000a54565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000328565b6000620001cb8462000461565b905080156200025157620001ed600654826200059960201b62000a181760201c565b806006600082825462000201919062000aac565b90915550506001600160a01b038416600090815260026020526040812080548392906200023090849062000ac6565b9250508190555080600360008282546200024b919062000ac6565b90915550505b8115620002a9576001600160a01b038416600090815260026020526040812080548592906200028290849062000ac6565b9250508190555082600360008282546200029d919062000ac6565b90915550620002f49050565b6001600160a01b03841660009081526002602052604081208054859290620002d390849062000aac565b925050819055508260036000828254620002ee919062000aac565b90915550505b60045462000303904362000aac565b6001600160a01b03909416600090815260086020526040902060020193909355505050565b6000600454436200033a919062000aac565b90506000600554826200034e919062000aac565b90508015620001b05760006006546003546200036b919062000aac565b600c5490915060009081906001600160a01b0316635aff34dc62000395610309620186a062000ac6565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101879052600a60648201526084016040805180830381865afa158015620003e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040e919062000ae1565b915091506000836200042d858585620005e660201b62000a5f1760201c565b62000439919062000aac565b905080600660008282546200044f919062000ac6565b90915550505060058590555050505050565b6001600160a01b0381166000908152600860205260408120600201546004548291829162000490904362000aac565b6200049c919062000aac565b905080156200059257600c5460009081906001600160a01b0316635aff34dc620004cc610309620186a062000ac6565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156200051f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000545919062000ae1565b6001600160a01b038816600090815260026020908152604090912054929450909250620005819082908590859062000a5f620005e6821b17901c565b6200058d919062000aac565b935050505b5092915050565b6040516024810183905260448101829052620001b09060640160408051601f198184030181529190526020810180516001600160e01b03908116637b3338ad60e11b179091526200062e16565b600080620005f685858562000647565b90506000620006078686866200073d565b111562000624576200061b8160016200075b565b91505062000627565b90505b9392505050565b62000644816200077260201b62000a9d1760201c565b50565b6000808062000657868662000793565b9150915081600003620006815783818162000676576200067662000b06565b049250505062000627565b8382101562000738576000620006998787876200073d565b9050600080620006ab858585620007e7565b9150915081600003620006d857868181620006ca57620006ca62000b06565b049550505050505062000627565b600087620006e782826200081d565b1690506000620006f98484846200082b565b905060006200071a838b8162000713576200071362000b06565b0462000882565b9050620007288282620008c0565b9850505050505050505062000627565b600080fd5b6000818062000750576200075062000b06565b838509949350505050565b600062000769828462000ac6565b90505b92915050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60008080620007a38585620008ce565b90506000620007b38686620008c0565b9050808210620007cb579081900392509050620007e0565b6001620007d983836200081d565b0393509150505b9250929050565b600080828410620007ff575083905081830362000815565b60001985016200081085856200081d565b915091505b935093915050565b600062000769828462000aac565b60008062000857836200083f83826200081d565b816200084f576200084f62000b06565b506000919050565b90508284816200086b576200086b62000b06565b04620008788683620008c0565b1795945050505050565b60006001815b60088110156200059257620008b582620008af6002620008a98389620008c0565b6200081d565b620008c0565b915060010162000888565b600062000769828462000b1c565b60006000198284099392505050565b600060208284031215620008f057600080fd5b81516001600160a01b03811681146200062757600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200093e576200093e62000908565b019392505050565b600181815b80851115620009875781600019048211156200096b576200096b62000908565b808516156200097957918102915b93841c93908002906200094b565b509250929050565b600082620009a0575060016200076c565b81620009af575060006200076c565b8160018114620009c85760028114620009d357620009f3565b60019150506200076c565b60ff841115620009e757620009e762000908565b50506001821b6200076c565b5060208310610133831016604e8410600b841016171562000a18575081810a6200076c565b62000a24838362000946565b806000190482111562000a3b5762000a3b62000908565b029392505050565b60006200076960ff8416836200098f565b600060208083528351808285015260005b8181101562000a835785810183015185820160400152820162000a65565b8181111562000a96576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000ac15762000ac162000908565b500390565b6000821982111562000adc5762000adc62000908565b500190565b6000806040838503121562000af557600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000b395762000b3962000908565b500290565b6117cb8062000b4e6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d2578063db1d0fd5146103db578063dd62ed3e146103e3578063f2fde38b1461041c57600080fd5b8063a457c2d71461037c578063a9059cbb1461038f578063bdfeb1e5146103a257600080fd5b80638da5cb5b116100d35780638da5cb5b1461031b57806395d89b41146103365780639dc29fac14610356578063a150da2a1461036957600080fd5b806370a08231146102f8578063715018a61461030b578063739572891461031357600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ac57806357627e93146102df57806366666aa9146102e75780636863909e146102f057600080fd5b806332cb6b0c1461027c578063395093511461028457806340c10f191461029757600080fd5b806323b872dd116101a257806323b872dd146102405780632e0f2625146102535780632ff2e9dc1461026d578063313ce5671461027557600080fd5b806306fdde03146101c9578063095ea7b31461020757806318160ddd1461022a575b600080fd5b60408051808201909152601081526f10dbdb5c1bdd5b99125b9d195c995cdd60821b60208201525b6040516101fe919061144d565b60405180910390f35b61021a6102153660046114be565b61042f565b60405190151581526020016101fe565b610232610446565b6040519081526020016101fe565b61021a61024e3660046114e8565b610455565b61025b601281565b60405160ff90911681526020016101fe565b6102326104f8565b601261025b565b610232610512565b61021a6102923660046114be565b610535565b6102aa6102a53660046114be565b610542565b005b6102bf6102ba366004611524565b6105f2565b6040805194855260208501939093529183015260608201526080016101fe565b610232601e81565b61023260065481565b6102aa610633565b610232610306366004611524565b61074f565b6102aa61075a565b6102bf610790565b6000546040516001600160a01b0390911681526020016101fe565b6040805180820190915260048152634345525760e01b60208201526101f1565b6102aa6103643660046114be565b610884565b61021a6103773660046114e8565b6108b8565b61021a61038a3660046114be565b610944565b61021a61039d3660046114be565b610951565b6103aa61095e565b604080519586526020860194909452928401919091526060830152608082015260a0016101fe565b61023260075481565b610232600c81565b6102326103f136600461153f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102aa61042a366004611524565b61097d565b600061043c338484610abe565b5060015b92915050565b6000610450610b80565b905090565b60006001600160a01b03841633146104e2576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e05760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ed848484610b97565b5060015b9392505050565b61050460126008611588565b61050f90600a611691565b81565b61051e60126008611588565b61052990600a611691565b61050f906103e86116a0565b60006104f1338484610ca3565b6000546001600160a01b0316331461056c5760405162461bcd60e51b81526004016104d7906116bf565b61057860126008611588565b61058390600a611691565b61058f906103e86116a0565b81610598610b80565b6105a291906116f4565b11156105e45760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d7565b6105ee8282610d2a565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062a85610d81565b90509193509193565b600060045443610643919061170c565b9050600060055482610655919061170c565b905080156105ee57600060065460035461066f919061170c565b600c5490915060009081906001600160a01b0316635aff34dc610697610309620186a06116f4565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101879052600a60648201526084016040805180830381865afa1580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190611723565b9150915060008361071f858585610a5f565b610729919061170c565b9050806006600082825461073d91906116f4565b90915550505060058590555050505050565b600061044082610e9a565b6000546001600160a01b031633146107845760405162461bcd60e51b81526004016104d7906116bf565b61078e6000610ec8565b565b60008060008061079e610f18565b93506107ba6107b56000546001600160a01b031690565b610d81565b6107c490846116f4565b6009549093506107dc906001600160a01b0316610d81565b6107e690846116f4565b600a549093506107fe906001600160a01b0316610d81565b61080890846116f4565b600b54909350610820906001600160a01b0316610d81565b61082a90846116f4565b925060008385101561084a57610840858561170c565b925083905061085a565b610854848661170c565b92508490505b801561087d57806108708464e8d4a510006116a0565b61087a919061175d565b91505b5090919293565b6000546001600160a01b031633146108ae5760405162461bcd60e51b81526004016104d7906116bf565b6105ee8282611013565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109055760405162461bcd60e51b81526004016104d7919061144d565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ed908590859061093f90869061170c565b610abe565b60006104f13384846108b8565b600061043c338484610b97565b6003546005546007546006546000610974610f18565b90509091929394565b6000546001600160a01b031633146109a75760405162461bcd60e51b81526004016104d7906116bf565b6001600160a01b038116610a0c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d7565b610a1581610ec8565b50565b60405160248101839052604481018290526105ee9060640160408051601f198184030181529190526020810180516001600160e01b0316637b3338ad60e11b1790526110c7565b600080610a6d8585856110d0565b90506000610a7c8686866111a6565b1115610a9557610a8d8160016111c1565b9150506104f1565b949350505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b085760405162461bcd60e51b81526004016104d7919061144d565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b535760405162461bcd60e51b81526004016104d7919061144d565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b8a610f18565b60035461045091906116f4565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610be15760405162461bcd60e51b81526004016104d7919061144d565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c2c5760405162461bcd60e51b81526004016104d7919061144d565b506000610c3884610e9a565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c845760405162461bcd60e51b81526004016104d7919061144d565b50610c91848360006111cd565b610c9d838360016111cd565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cf05760405162461bcd60e51b81526004016104d7919061144d565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ed908590859061093f9086906116f4565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d745760405162461bcd60e51b81526004016104d7919061144d565b506105ee828260016111cd565b6001600160a01b03811660009081526008602052604081206002015460045482918291610dae904361170c565b610db8919061170c565b90508015610e9357600c5460009081906001600160a01b0316635aff34dc610de5610309620186a06116f4565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b9190611723565b6001600160a01b0388166000908152600260205260409020549193509150610e84818484610a5f565b610e8e919061170c565b935050505b5092915050565b6000610ea582610d81565b6001600160a01b03831660009081526002602052604090205461044091906116f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600060055460045443610f2e919061170c565b610f38919061170c565b90508015610ffe57600c5460009081906001600160a01b0316635aff34dc610f65610309620186a06116f4565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190611723565b91509150600354610fef6003548484610a5f565b610ff9919061170c565b935050505b8160065461100c91906116f4565b9250505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661105d5760405162461bcd60e51b81526004016104d7919061144d565b50600061106983610e9a565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110b55760405162461bcd60e51b81526004016104d7919061144d565b506110c2838360006111cd565b505050565b610a1581610a9d565b60008060006110df868661131d565b9150915081600003611104578381816110fa576110fa611747565b04925050506104f1565b838210156101c45760006111198787876111a6565b905060008061112985858561136a565b91509150816000036111515786818161114457611144611747565b04955050505050506104f1565b60008761115f60008a61139b565b169050600061116f8484846113a7565b9050600061118b838b8161118557611185611747565b046113f4565b9050611197828261142a565b985050505050505050506104f1565b600081806111b6576111b6611747565b838509949350505050565b60006104f182846116f4565b6111d5610633565b60006111e084610d81565b90508015611252576111f460065482610a18565b8060066000828254611206919061170c565b90915550506001600160a01b038416600090815260026020526040812080548392906112339084906116f4565b92505081905550806003600082825461124c91906116f4565b90915550505b81156112a4576001600160a01b038416600090815260026020526040812080548592906112809084906116f4565b92505081905550826003600082825461129991906116f4565b909155506112eb9050565b6001600160a01b038416600090815260026020526040812080548592906112cc90849061170c565b9250508190555082600360008282546112e5919061170c565b90915550505b6004546112f8904361170c565b6001600160a01b03909416600090815260086020526040902060020193909355505050565b600080600061132c8585611436565b9050600061133a868661142a565b9050808210611350579081900392509050611363565b600161135c838361139b565b0393509150505b9250929050565b6000808284106113805750839050818303611393565b6001850361138e858561139b565b915091505b935093915050565b60006104f1828461170c565b6000806113ce836113b960008661139b565b816113c6576113c6611747565b506000919050565b90508284816113df576113df611747565b046113ea868361142a565b1795945050505050565b60006001815b6008811015610e93576114208261141b6002611416868961142a565b61139b565b61142a565b91506001016113fa565b60006104f182846116a0565b60006000198284099392505050565b61078e61177f565b600060208083528351808285015260005b8181101561147a5785810183015185820160400152820161145e565b8181111561148c576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114b957600080fd5b919050565b600080604083850312156114d157600080fd5b6114da836114a2565b946020939093013593505050565b6000806000606084860312156114fd57600080fd5b611506846114a2565b9250611514602085016114a2565b9150604084013590509250925092565b60006020828403121561153657600080fd5b6104f1826114a2565b6000806040838503121561155257600080fd5b61155b836114a2565b9150611569602084016114a2565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115a5576115a5611572565b019392505050565b600181815b808511156115e85781600019048211156115ce576115ce611572565b808516156115db57918102915b93841c93908002906115b2565b509250929050565b6000826115ff57506001610440565b8161160c57506000610440565b8160018114611622576002811461162c57611648565b6001915050610440565b60ff84111561163d5761163d611572565b50506001821b610440565b5060208310610133831016604e8410600b841016171561166b575081810a610440565b61167583836115ad565b806000190482111561168957611689611572565b029392505050565b60006104f160ff8416836115f0565b60008160001904831182151516156116ba576116ba611572565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561170757611707611572565b500190565b60008282101561171e5761171e611572565b500390565b6000806040838503121561173657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261177a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052605160045260246000fdfea2646970667358221220fd2fce9cd9bb57c61dde529a197b847b819a91a6bc446f2afa9fd99df7c12daf64736f6c634300080e0033";

export class CompoundInterest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundInterest> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundInterest>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundInterest {
    return super.attach(address) as CompoundInterest;
  }
  connect(signer: Signer): CompoundInterest__factory {
    return super.connect(signer) as CompoundInterest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterestInterface {
    return new utils.Interface(_abi) as CompoundInterestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundInterest {
    return new Contract(address, _abi, signerOrProvider) as CompoundInterest;
  }
}

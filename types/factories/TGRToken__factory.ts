/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TGRToken, TGRTokenInterface } from "../TGRToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Begin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ListStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ChangePairStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "DeenlistToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ActionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "accountant",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
    ],
    name: "SetFeeRates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountant",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
    ],
    name: "SetFeeStores",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "node",
        type: "address",
      },
    ],
    name: "SetNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "begin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "enum ListStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "changePairStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ActionType",
        name: "",
        type: "uint8",
      },
    ],
    name: "feeRates",
    outputs: [
      {
        internalType: "uint32",
        name: "accountant",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeStores",
    outputs: [
      {
        internalType: "address",
        name: "accountant",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSession",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lp_reward",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pairFor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "enum ListStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "accountant",
            type: "uint32",
          },
        ],
        internalType: "struct FeeRates",
        name: "rates",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "fromAllowance",
        type: "bool",
      },
    ],
    name: "payFeeTgrLogic",
    outputs: [
      {
        internalType: "uint256",
        name: "feesPaid",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "prevNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_lp_reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_user_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_vote_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ActionType",
        name: "actionType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "blockReentry",
        type: "bool",
      },
    ],
    name: "registerAction",
    outputs: [
      {
        components: [
          {
            internalType: "enum ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "session",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastSession",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isUserAction",
            type: "bool",
          },
        ],
        internalType: "struct ActionParams",
        name: "actionParams",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "session",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ActionType",
        name: "",
        type: "uint8",
      },
    ],
    name: "sessionsLastSeenBySType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ActionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "accountant",
            type: "uint32",
          },
        ],
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accountant",
            type: "address",
          },
        ],
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeStores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tgrBusd",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tgrFtm",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tgrHtz",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferDirectSafe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unregisterAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "user_burn",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vote_burn",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_prevNode",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nextNode",
        type: "address",
      },
    ],
    name: "wire",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "$88bebae22a3ad6e62b56c303176513ecf8$__90634f18125b90611725908690600d908790600401613576565b60006040518083038186803b15801561173d57600080fd5b505af4158015611751573d6000803e3d6000fd5b505050505b60006001600160a01b0382161561176d578161176f565b305b6001546040516391fd0db760e01b81529192506001600160a01b0316906391fd0db7906117a49087908790869060040161359e565b600060405180830381600087803b1580156117be57600080fd5b505af11580156117d2573d6000803e3d6000fd5b5050505050505050565b7fb4040436d4754da72f29d5b97fe68448f30d44ac0e08b33545cbf6f28b7641d9838360405161180d9291906135cd565b60405180910390a1505050565b60005461010090046001600160a01b031633148061183757503330145b806118655750600e54630100000090046001600160a01b03166001600160a01b0316336001600160a01b0316145b6118815760405162461bcd60e51b8152600401610b0c9061354c565b6001600160a01b038116301461194c5760405163085b199160e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__906310b63322906118cd90869086906002906004016135ee565b60006040518083038186803b1580156118e557600080fd5b505af41580156118f9573d6000803e3d6000fd5b506000925050506001600160a01b038216156119155781611917565b305b6001546040516349443ceb60e11b81529192506001600160a01b03169063928879d6906117a490879087908690600401613618565b7fb45c42dda0a5ab1d1078e0afeda2976363eff9496a93644e726862f1f06186b8838360405161180d929190613643565b600e546001600160a01b0363010000009091041633146119af5760405162461bcd60e51b8152600401610b0c90613378565b610ccb82826128c9565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516611a065760405162461bcd60e51b8152600401610b0c9190612f0e565b506001600160a01b038085166000908152601b6020908152604080832093871683529290522054610c029085908590610bf0908690613361565b6000610c193384846119b9565b6000610b42338484612677565b60005461010090046001600160a01b0316331480611a7757503330145b80611aa55750600e54630100000090046001600160a01b03166001600160a01b0316336001600160a01b0316145b611ac15760405162461bcd60e51b8152600401610b0c9061354c565b6001600160a01b0381163014611ea957600e5460ff1615611e1f576040518060600160405280856001600160a01b03168152602001846001600160a01b03168152602001836003811115611b1757611b17613051565b90526001600160a01b038087166000908152600a6020908152604091829020845181549085166001600160a01b0319918216178255918501516001820180549190951692811683178555928501519093909290916001600160a81b031990911617600160a01b836003811115611b8f57611b8f613051565b021790555050506001600160a01b038085166000818152600b60208181526040808420898716855282528084208054878d166001600160a01b03199182168117909255938352818520958552949091529182902080549091169092179091556002549051633fe59dbb60e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__92637fcb3b7692611c4192899289921690730dcd1bf9a1b36ce34237eeafef220932846bcd8290600401613668565b602060405180830381865af4158015611c5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c829190613693565b15611ca357600780546001600160a01b0319166001600160a01b0387161790555b600254604051633fe59dbb60e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__91637fcb3b7691611cff91889188916001600160a01b031690735fc8d32690cc91d4c39d9d3abcbd16989f87570790600401613668565b602060405180830381865af4158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d409190613693565b15611d6157600880546001600160a01b0319166001600160a01b0387161790555b600254604051633fe59dbb60e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__91637fcb3b7691611dbd91889188916001600160a01b03169073b7f8bc63bbcad18155201308c8f3540b07f84f5e90600401613668565b602060405180830381865af4158015611dda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dfe9190613693565b15611e1f57600980546001600160a01b0319166001600160a01b0387161790555b60006001600160a01b03821615611e365781611e38565b305b60015460405163cd193c4360e01b81529192506001600160a01b03169063cd193c4390611e7190899089908990899088906004016136b0565b600060405180830381600087803b158015611e8b57600080fd5b505af1158015611e9f573d6000803e3d6000fd5b50505050506111a8565b7f7af36d96fdc569564b9fadb22716716fe33463cb7fc8dca4fbd79d40448acdf285858585604051611ede94939291906136f2565b60405180910390a15050505050565b60055433906001600160a01b0316811480611f1557506004546001600160a01b038281169116145b80611f3957506001600160a01b038181166000908152600a60205260409020541615155b604051806040016040528060098152602001682337b93134b23232b760b91b81525090611f795760405162461bcd60e51b8152600401610b0c9190612f0e565b506001600160a01b0384166000908152601d6020526040902054821115611fb6576001600160a01b0384166000908152601d602052604090205491505b8115611fc757611fc78484846129d3565b50505050565b60005461010090046001600160a01b0316331480611fea57503330145b806120185750600e54630100000090046001600160a01b03166001600160a01b0316336001600160a01b0316145b6120345760405162461bcd60e51b8152600401610b0c9061354c565b6001600160a01b038116301461215157600e54610100900460ff16156120c857604051633d8d54b760e11b8152600c600482015282516001600160a01b0316602482015273__$88bebae22a3ad6e62b56c303176513ecf8$";

type TGRTokenConstructorParams =
  | [linkLibraryAddresses: TGRTokenLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TGRTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TGRToken__factory extends ContractFactory {
  constructor(...args: TGRTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, TGRToken__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TGRTokenLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$88bebae22a3ad6e62b56c303176513ecf8\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/WireLibrary.sol:WireLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TGRToken> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<TGRToken>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): TGRToken {
    return super.attach(address) as TGRToken;
  }
  connect(signer: Signer): TGRToken__factory {
    return super.connect(signer) as TGRToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TGRTokenInterface {
    return new utils.Interface(_abi) as TGRTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TGRToken {
    return new Contract(address, _abi, signerOrProvider) as TGRToken;
  }
}

export interface TGRTokenLibraryAddresses {
  ["contracts/libraries/WireLibrary.sol:WireLibrary"]: string;
}

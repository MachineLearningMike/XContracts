/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NovelF, NovelFInterface } from "../NovelF";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019a7380380620019a78339810160408190526200003491620003f5565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e1601260066200043d565b620000ee90600a62000564565b6200014b565b5062000647565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000575565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f891620005cd565b620002049190620005ef565b62000210919062000609565b90508060066000828254620002269190620005ef565b90915550506001600160a01b03841660009081526008602052604081206001018054839290620002589084906200062c565b90915550508115620002b5576001600160a01b038416600090815260026020526040812080548592906200028e9084906200062c565b925050819055508260036000828254620002a991906200062c565b90915550620003009050565b6001600160a01b03841660009081526002602052604081208054859290620002df908490620005ef565b925050819055508260036000828254620002fa9190620005ef565b90915550505b6001600160a01b038416600090815260026020526040902054600754620003289190620005cd565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200035c9190620005ef565b9050600060055482620003709190620005ef565b90508015620001b05760058290556003546000906200039183600c620005cd565b6200039d9190620005cd565b90508060066000828254620003b391906200062c565b9091555050600354620003cc8264e8d4a51000620005cd565b620003d8919062000609565b60076000828254620003eb91906200062c565b9091555050505050565b6000602082840312156200040857600080fd5b81516001600160a01b03811681146200042057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200045d576200045d62000427565b019392505050565b600181815b80851115620004a65781600019048211156200048a576200048a62000427565b808516156200049857918102915b93841c93908002906200046a565b509250929050565b600082620004bf575060016200055e565b81620004ce575060006200055e565b8160018114620004e75760028114620004f25762000512565b60019150506200055e565b60ff84111562000506576200050662000427565b50506001821b6200055e565b5060208310610133831016604e8410600b841016171562000537575081810a6200055e565b62000543838362000465565b80600019048211156200055a576200055a62000427565b0290505b92915050565b60006200042060ff841683620004ae565b600060208083528351808285015260005b81811015620005a45785810183015185820160400152820162000586565b81811115620005b7576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005ea57620005ea62000427565b500290565b60008282101562000604576200060462000427565b500390565b6000826200062757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000642576200064262000427565b500190565b61135080620006576000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103c8578063db1d0fd5146103d1578063dd62ed3e146103d9578063f2fde38b1461041257600080fd5b8063a457c2d714610372578063a9059cbb14610385578063bdfeb1e51461039857600080fd5b80638da5cb5b116100d35780638da5cb5b1461031157806395d89b411461032c5780639dc29fac1461034c578063a150da2a1461035f57600080fd5b806370a08231146102ee578063715018a614610301578063739572891461030957600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a257806357627e93146102d557806366666aa9146102dd5780636863909e146102e657600080fd5b806332cb6b0c14610272578063395093511461027a57806340c10f191461028d57600080fd5b806323b872dd116101a257806323b872dd146102365780632e0f2625146102495780632ff2e9dc14610263578063313ce5671461026b57600080fd5b806306fdde03146101c9578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6040805180820190915260068152652737bb32b62360d11b60208201525b6040516101f49190611022565b60405180910390f35b61021061020b366004611093565b610425565b60405190151581526020016101f4565b61022861043c565b6040519081526020016101f4565b6102106102443660046110bd565b61044b565b610251601281565b60405160ff90911681526020016101f4565b6102286104ed565b6012610251565b610228610507565b610210610288366004611093565b610529565b6102a061029b366004611093565b61053d565b005b6102b56102b03660046110f9565b6105ec565b6040805194855260208501939093529183015260608201526080016101f4565b610228601e81565b61022860065481565b6102a061062d565b6102286102fc3660046110f9565b6106c7565b6102a06106d2565b6102b5610708565b6000546040516001600160a01b0390911681526020016101f4565b6040805180820190915260048152632727afa360e11b60208201526101e7565b6102a061035a366004611093565b610818565b61021061036d3660046110bd565b61084c565b610210610380366004611093565b6108d8565b610210610393366004611093565b6108e5565b6103a06108f2565b604080519586526020860194909452928401919091526060830152608082015260a0016101f4565b61022860075481565b610228600c81565b6102286103e7366004611114565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a06104203660046110f9565b610911565b60006104323384846109ac565b5060015b92915050565b6000610446610a6e565b905090565b60006001600160a01b03841633146104d8576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d65760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e3848484610a85565b5060019392505050565b6104f96012600661115d565b61050490600a611266565b81565b6105136012600661115d565b61051e90600a611266565b61050490600a611275565b6000610536338484610b91565b9392505050565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016104cd90611294565b6105736012600661115d565b61057e90600a611266565b61058990600a611275565b81610592610a6e565b61059c91906112c9565b11156105de5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104cd565b6105e88282610c18565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062485610c6f565b90509193509193565b60006004544361063d91906112e1565b905060006005548261064f91906112e1565b905080156105e857600582905560035460009061066d83600c611275565b6106779190611275565b9050806006600082825461068b91906112c9565b90915550506003546106a28264e8d4a51000611275565b6106ac91906112f8565b600760008282546106bd91906112c9565b9091555050505050565b600061043682610d38565b6000546001600160a01b031633146106fc5760405162461bcd60e51b81526004016104cd90611294565b6107066000610d66565b565b600080600080600654610719610db6565b61072391906112c9565b9350600061074161073c6000546001600160a01b031690565b610c6f565b905061074d81856112c9565b600954909450610765906001600160a01b0316610c6f565b905061077181856112c9565b600a54909450610789906001600160a01b0316610c6f565b905061079581856112c9565b600b549094506107ad906001600160a01b0316610c6f565b90506107b981856112c9565b9350838510156107d4576107cd85856112e1565b92506107e1565b6107de84866112e1565b92505b84848110156107ed5750835b801561081057806108038564e8d4a51000611275565b61080d91906112f8565b92505b505090919293565b6000546001600160a01b031633146108425760405162461bcd60e51b81526004016104cd90611294565b6105e88282610df0565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108995760405162461bcd60e51b81526004016104cd9190611022565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e390859085906108d39086906112e1565b6109ac565b600061053633848461084c565b6000610432338484610a85565b6003546005546007546006546000610908610db6565b90509091929394565b6000546001600160a01b0316331461093b5760405162461bcd60e51b81526004016104cd90611294565b6001600160a01b0381166109a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cd565b6109a981610d66565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0384166109f65760405162461bcd60e51b81526004016104cd9190611022565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a415760405162461bcd60e51b81526004016104cd9190611022565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610a78610db6565b60035461044691906112c9565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610acf5760405162461bcd60e51b81526004016104cd9190611022565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b1a5760405162461bcd60e51b81526004016104cd9190611022565b506000610b2684610d38565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b725760405162461bcd60e51b81526004016104cd9190611022565b50610b7f84836000610ea4565b610b8b83836001610ea4565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bde5760405162461bcd60e51b81526004016104cd9190611022565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e390859085906108d39086906112c9565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c625760405162461bcd60e51b81526004016104cd9190611022565b506105e882826001610ea4565b6001600160a01b0381166000908152600860209081526040808320546002909252822054600754839264e8d4a51000929091610cab9190611275565b610cb591906112e1565b610cbf91906112f8565b9050600060045443610cd191906112e1565b9050600060055482610ce391906112e1565b6003546001600160a01b03871660009081526002602052604081205492935091610d0e84600c611275565b610d189190611275565b610d2291906112f8565b9050610d2e81856112c9565b9695505050505050565b6000610d4382610c6f565b6001600160a01b03831660009081526002602052604090205461043691906112c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610dc791906112e1565b9050600060055482610dd991906112e1565b90506000610de882600c611275565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e3a5760405162461bcd60e51b81526004016104cd9190611022565b506000610e4683610d38565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610e925760405162461bcd60e51b81526004016104cd9190611022565b50610e9f83836000610ea4565b505050565b610eac61062d565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ee491611275565b610eee91906112e1565b610ef891906112f8565b90508060066000828254610f0c91906112e1565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f3c9084906112c9565b90915550508115610f93576001600160a01b03841660009081526002602052604081208054859290610f6f9084906112c9565b925050819055508260036000828254610f8891906112c9565b90915550610fda9050565b6001600160a01b03841660009081526002602052604081208054859290610fbb9084906112e1565b925050819055508260036000828254610fd491906112e1565b90915550505b6001600160a01b0384166000908152600260205260409020546007546110009190611275565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b8181101561104f57858101830151858201604001528201611033565b81811115611061576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461108e57600080fd5b919050565b600080604083850312156110a657600080fd5b6110af83611077565b946020939093013593505050565b6000806000606084860312156110d257600080fd5b6110db84611077565b92506110e960208501611077565b9150604084013590509250925092565b60006020828403121561110b57600080fd5b61053682611077565b6000806040838503121561112757600080fd5b61113083611077565b915061113e60208401611077565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561117a5761117a611147565b019392505050565b600181815b808511156111bd5781600019048211156111a3576111a3611147565b808516156111b057918102915b93841c9390800290611187565b509250929050565b6000826111d457506001610436565b816111e157506000610436565b81600181146111f757600281146112015761121d565b6001915050610436565b60ff84111561121257611212611147565b50506001821b610436565b5060208310610133831016604e8410600b8410161715611240575081810a610436565b61124a8383611182565b806000190482111561125e5761125e611147565b029392505050565b600061053660ff8416836111c5565b600081600019048311821515161561128f5761128f611147565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112dc576112dc611147565b500190565b6000828210156112f3576112f3611147565b500390565b60008261131557634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206efdbb402f61743c72534ec9fd1ecb206ca5e56d4091bea0e20c457d3e924a2564736f6c634300080e0033";

export class NovelF__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NovelF> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<NovelF>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): NovelF {
    return super.attach(address) as NovelF;
  }
  connect(signer: Signer): NovelF__factory {
    return super.connect(signer) as NovelF__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NovelFInterface {
    return new utils.Interface(_abi) as NovelFInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NovelF {
    return new Contract(address, _abi, signerOrProvider) as NovelF;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundInterestE,
  CompoundInterestEInterface,
} from "../CompoundInterestE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002225380380620022258339810160408190526200003491620007ab565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007ec565b620000ee90600a62000911565b6200014b565b5062000a2f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000922565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200037e565b6001600160a01b038316600090815260086020908152604080832054600754600284529184205490926200020492919064e8d4a510009062000a51620004e7821b17901c565b6200021091906200097a565b905080600660008282546200022691906200097a565b90915550506001600160a01b038416600090815260026020526040812080548392906200025590849062000994565b92505081905550806003600082825462000270919062000994565b90915550508115620002cd576001600160a01b03841660009081526002602052604081208054859290620002a690849062000994565b925050819055508260036000828254620002c1919062000994565b90915550620003189050565b6001600160a01b03841660009081526002602052604081208054859290620002f79084906200097a565b9250508190555082600360008282546200031291906200097a565b90915550505b6200035c60075460026000876001600160a01b03166001600160a01b031681526020019081526020016000205464e8d4a51000620004e760201b62000a511760201c565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200039091906200097a565b9050600060055482620003a491906200097a565b90508015620001b057600c5460009081906001600160a01b0316635aff34dc620003d4610309620186a062000994565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000427573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044d9190620009af565b9150915060006003546200047060035485856200052f60201b62000a8f1760201c565b6200047c91906200097a565b9050806006600082825462000492919062000994565b9091555064e8d4a51000905082620004ab8583620009d4565b620004b7919062000a0c565b620004c391906200097a565b60076000828254620004d6919062000994565b909155505050600584905550505050565b600080620004f78585856200052f565b905060006200050886868662000625565b111562000525576200051c81600162000643565b91505062000528565b90505b9392505050565b600080806200053f86866200065a565b915091508160000362000569578381816200055e576200055e620009f6565b049250505062000528565b83821015620006205760006200058187878762000625565b905060008062000593858585620006ae565b9150915081600003620005c057868181620005b257620005b2620009f6565b049550505050505062000528565b600087620005cf8282620006e4565b1690506000620005e1848484620006f2565b9050600062000602838b81620005fb57620005fb620009f6565b0462000749565b90506200061082826200078e565b9850505050505050505062000528565b600080fd5b60008180620006385762000638620009f6565b838509949350505050565b600062000651828462000994565b90505b92915050565b600080806200066a85856200079c565b905060006200067a86866200078e565b905080821062000692579081900392509050620006a7565b6001620006a08383620006e4565b0393509150505b9250929050565b600080828410620006c65750839050818303620006dc565b6000198501620006d78585620006e4565b915091505b935093915050565b60006200065182846200097a565b6000806200071e83620007068382620006e4565b81620007165762000716620009f6565b506000919050565b9050828481620007325762000732620009f6565b046200073f86836200078e565b1795945050505050565b60006001815b600881101562000787576200077c826200077660026200077083896200078e565b620006e4565b6200078e565b91506001016200074f565b5092915050565b6000620006518284620009d4565b60006000198284099392505050565b600060208284031215620007be57600080fd5b81516001600160a01b03811681146200052857600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200080c576200080c620007d6565b019392505050565b600181815b8085111562000855578160001904821115620008395762000839620007d6565b808516156200084757918102915b93841c939080029062000819565b509250929050565b6000826200086e5750600162000654565b816200087d5750600062000654565b8160018114620008965760028114620008a157620008c1565b600191505062000654565b60ff841115620008b557620008b5620007d6565b50506001821b62000654565b5060208310610133831016604e8410600b8410161715620008e6575081810a62000654565b620008f2838362000814565b8060001904821115620009095762000909620007d6565b029392505050565b60006200065160ff8416836200085d565b600060208083528351808285015260005b81811015620009515785810183015185820160400152820162000933565b8181111562000964576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156200098f576200098f620007d6565b500390565b60008219821115620009aa57620009aa620007d6565b500190565b60008060408385031215620009c357600080fd5b505080516020909101519092909150565b6000816000190483118215151615620009f157620009f1620007d6565b500290565b634e487b7160e01b600052601260045260246000fd5b60008262000a2a57634e487b7160e01b600052601260045260246000fd5b500490565b6117e68062000a3f6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d4578063db1d0fd5146103dd578063dd62ed3e146103e5578063f2fde38b1461041e57600080fd5b8063a457c2d71461037e578063a9059cbb14610391578063bdfeb1e5146103a457600080fd5b80638da5cb5b116100d35780638da5cb5b1461031c57806395d89b41146103375780639dc29fac14610358578063a150da2a1461036b57600080fd5b806370a08231146102f9578063715018a61461030c578063739572891461031457600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ad57806357627e93146102e057806366666aa9146102e85780636863909e146102f157600080fd5b806332cb6b0c1461027d578063395093511461028557806340c10f191461029857600080fd5b806323b872dd116101a257806323b872dd146102415780632e0f2625146102545780632ff2e9dc1461026e578063313ce5671461027657600080fd5b806306fdde03146101c9578063095ea7b31461020857806318160ddd1461022b575b600080fd5b604080518082019091526011815270436f6d706f756e64496e7465726573744560781b60208201525b6040516101ff919061147e565b60405180910390f35b61021b6102163660046114ef565b610431565b60405190151581526020016101ff565b610233610448565b6040519081526020016101ff565b61021b61024f366004611519565b610457565b61025c601281565b60405160ff90911681526020016101ff565b6102336104fa565b601261025c565b610233610514565b61021b6102933660046114ef565b610537565b6102ab6102a63660046114ef565b610544565b005b6102c06102bb366004611555565b6105f4565b6040805194855260208501939093529183015260608201526080016101ff565b610233601e81565b61023360065481565b6102ab610635565b610233610307366004611555565b61077b565b6102ab610786565b6102c06107bc565b6000546040516001600160a01b0390911681526020016101ff565b604080518082019091526005815264434552574560d81b60208201526101f2565b6102ab6103663660046114ef565b6108bd565b61021b610379366004611519565b6108f1565b61021b61038c3660046114ef565b61097d565b61021b61039f3660046114ef565b61098a565b6103ac610997565b604080519586526020860194909452928401919091526060830152608082015260a0016101ff565b61023360075481565b610233600c81565b6102336103f3366004611570565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ab61042c366004611555565b6109b6565b600061043e338484610b65565b5060015b92915050565b6000610452610c27565b905090565b60006001600160a01b03841633146104e4576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e25760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ef848484610c3e565b5060015b9392505050565b610506601260086115b9565b61051190600a6116c2565b81565b610520601260086115b9565b61052b90600a6116c2565b610511906103e86116d1565b60006104f3338484610d4a565b6000546001600160a01b0316331461056e5760405162461bcd60e51b81526004016104d9906116f0565b61057a601260086115b9565b61058590600a6116c2565b610591906103e86116d1565b8161059a610c27565b6105a49190611725565b11156105e65760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d9565b6105f08282610dd1565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062c85610e28565b90509193509193565b600060045443610645919061173d565b9050600060055482610657919061173d565b905080156105f057600c5460009081906001600160a01b0316635aff34dc610684610309620186a0611725565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190611754565b9150915060006003546107106003548585610a8f565b61071a919061173d565b9050806006600082825461072e9190611725565b9091555064e8d4a5100090508261074585836116d1565b61074f919061178e565b610759919061173d565b6007600082825461076a9190611725565b909155505050600584905550505050565b600061044282610f7a565b6000546001600160a01b031633146107b05760405162461bcd60e51b81526004016104d9906116f0565b6107ba6000610fa8565b565b6000806000806006546107cd610ff8565b6107d79190611725565b93506107f36107ee6000546001600160a01b031690565b610e28565b6107fd9084611725565b600954909350610815906001600160a01b0316610e28565b61081f9084611725565b600a54909350610837906001600160a01b0316610e28565b6108419084611725565b600b54909350610859906001600160a01b0316610e28565b6108639084611725565b925060008385101561088357610879858561173d565b9250839050610893565b61088d848661173d565b92508490505b80156108b657806108a98464e8d4a510006116d1565b6108b3919061178e565b91505b5090919293565b6000546001600160a01b031633146108e75760405162461bcd60e51b81526004016104d9906116f0565b6105f082826110e3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661093e5760405162461bcd60e51b81526004016104d9919061147e565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ef908590859061097890869061173d565b610b65565b60006104f33384846108f1565b600061043e338484610c3e565b60035460055460075460065460006109ad610ff8565b90509091929394565b6000546001600160a01b031633146109e05760405162461bcd60e51b81526004016104d9906116f0565b6001600160a01b038116610a455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d9565b610a4e81610fa8565b50565b600080610a5f858585610a8f565b90506000610a6e868686611197565b1115610a8757610a7f8160016111b2565b9150506104f3565b949350505050565b6000806000610a9e86866111be565b9150915081600003610ac357838181610ab957610ab9611778565b04925050506104f3565b838210156101c4576000610ad8878787611197565b9050600080610ae885858561120b565b9150915081600003610b1057868181610b0357610b03611778565b04955050505050506104f3565b600087610b1e60008a61123c565b1690506000610b2e848484611248565b90506000610b4a838b81610b4457610b44611778565b04611295565b9050610b5682826112d2565b985050505050505050506104f3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610baf5760405162461bcd60e51b81526004016104d9919061147e565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bfa5760405162461bcd60e51b81526004016104d9919061147e565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c31610ff8565b6003546104529190611725565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c885760405162461bcd60e51b81526004016104d9919061147e565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cd35760405162461bcd60e51b81526004016104d9919061147e565b506000610cdf84610f7a565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d2b5760405162461bcd60e51b81526004016104d9919061147e565b50610d38848360006112de565b610d44838360016112de565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d975760405162461bcd60e51b81526004016104d9919061147e565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ef9085908590610978908690611725565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e1b5760405162461bcd60e51b81526004016104d9919061147e565b506105f0828260016112de565b6001600160a01b0381166000908152600860209081526040808320546007546002909352908320548392610e619164e8d4a51000610a51565b610e6b919061173d565b9050600060045443610e7d919061173d565b9050600060055482610e8f919061173d565b600c5490915060009081906001600160a01b0316635aff34dc610eb7610309620186a0611725565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2d9190611754565b6001600160a01b03891660009081526002602052604081205492945090925090610f58818585610a8f565b610f62919061173d565b9050610f6e8187611725565b98975050505050505050565b6000610f8582610e28565b6001600160a01b0383166000908152600260205260409020546104429190611725565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443611009919061173d565b905060006005548261101b919061173d565b600c5490915060009081906001600160a01b0316635aff34dc611043610309620186a0611725565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611754565b9150915060006003546110cf6003548585610a8f565b6110d9919061173d565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661112d5760405162461bcd60e51b81526004016104d9919061147e565b50600061113983610f7a565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111855760405162461bcd60e51b81526004016104d9919061147e565b50611192838360006112de565b505050565b600081806111a7576111a7611778565b838509949350505050565b60006104f38284611725565b60008060006111cd858561146f565b905060006111db86866112d2565b90508082106111f1579081900392509050611204565b60016111fd838361123c565b0393509150505b9250929050565b6000808284106112215750839050818303611234565b6001850361122f858561123c565b915091505b935093915050565b60006104f3828461173d565b60008061126f8361125a60008661123c565b8161126757611267611778565b506000919050565b905082848161128057611280611778565b0461128b86836112d2565b1795945050505050565b60006001815b60088110156112cb576112c1826112bc60026112b786896112d2565b61123c565b6112d2565b915060010161129b565b5092915050565b60006104f382846116d1565b6112e6610635565b6001600160a01b038316600090815260086020908152604080832054600754600290935290832054909161131f9164e8d4a51000610a51565b611329919061173d565b9050806006600082825461133d919061173d565b90915550506001600160a01b0384166000908152600260205260408120805483929061136a908490611725565b9250508190555080600360008282546113839190611725565b909155505081156113da576001600160a01b038416600090815260026020526040812080548592906113b6908490611725565b9250508190555082600360008282546113cf9190611725565b909155506114219050565b6001600160a01b0384166000908152600260205260408120805485929061140290849061173d565b92505081905550826003600082825461141b919061173d565b90915550505b6007546001600160a01b03851660009081526002602052604090205461144d919064e8d4a51000610a51565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b600060208083528351808285015260005b818110156114ab5785810183015185820160400152820161148f565b818111156114bd576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114ea57600080fd5b919050565b6000806040838503121561150257600080fd5b61150b836114d3565b946020939093013593505050565b60008060006060848603121561152e57600080fd5b611537846114d3565b9250611545602085016114d3565b9150604084013590509250925092565b60006020828403121561156757600080fd5b6104f3826114d3565b6000806040838503121561158357600080fd5b61158c836114d3565b915061159a602084016114d3565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115d6576115d66115a3565b019392505050565b600181815b808511156116195781600019048211156115ff576115ff6115a3565b8085161561160c57918102915b93841c93908002906115e3565b509250929050565b60008261163057506001610442565b8161163d57506000610442565b8160018114611653576002811461165d57611679565b6001915050610442565b60ff84111561166e5761166e6115a3565b50506001821b610442565b5060208310610133831016604e8410600b841016171561169c575081810a610442565b6116a683836115de565b80600019048211156116ba576116ba6115a3565b029392505050565b60006104f360ff841683611621565b60008160001904831182151516156116eb576116eb6115a3565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611738576117386115a3565b500190565b60008282101561174f5761174f6115a3565b500390565b6000806040838503121561176757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117ab57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220fc56a81afd845dbcd9c15be4f3aa7334a930478a97c8cbdea7de1090a5b4581d64736f6c634300080e0033";

export class CompoundInterestE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundInterestE> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundInterestE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundInterestE {
    return super.attach(address) as CompoundInterestE;
  }
  connect(signer: Signer): CompoundInterestE__factory {
    return super.connect(signer) as CompoundInterestE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterestEInterface {
    return new utils.Interface(_abi) as CompoundInterestEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundInterestE {
    return new Contract(address, _abi, signerOrProvider) as CompoundInterestE;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundInterestE,
  CompoundInterestEInterface,
} from "../CompoundInterestE";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021fd380380620021fd8339810160408190526200003491620007b8565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007f9565b620000ee90600a6200091e565b6200014b565b5062000a19565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200092f565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200037e565b6001600160a01b038316600090815260086020908152604080832054600754600284529184205490926200020492919064e8d4a510009062000a3b620004f4821b17901c565b62000210919062000987565b9050806006600082825462000226919062000987565b90915550506001600160a01b0384166000908152600260205260408120805483929062000255908490620009a1565b925050819055508060036000828254620002709190620009a1565b90915550508115620002cd576001600160a01b03841660009081526002602052604081208054859290620002a6908490620009a1565b925050819055508260036000828254620002c19190620009a1565b90915550620003189050565b6001600160a01b03841660009081526002602052604081208054859290620002f790849062000987565b92505081905550826003600082825462000312919062000987565b90915550505b6200035c60075460026000876001600160a01b03166001600160a01b031681526020019081526020016000205464e8d4a51000620004f460201b62000a3b1760201c565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006005546004544362000393919062000987565b6200039f919062000987565b90508015620004f157600c5460009081906001600160a01b0316635aff34dc620003cf610309620186a0620009a1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000422573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004489190620009bc565b9150915060006003546200046b60035485856200053c60201b62000a791760201c565b62000477919062000987565b905080600660008282546200048d9190620009a1565b9250508190555064e8d4a51000620004b764e8d4a510008585620004f460201b62000a3b1760201c565b620004c3919062000987565b60076000828254620004d69190620009a1565b9091555050600454620004ea904362000987565b6005555050505b50565b600080620005048585856200053c565b905060006200051586868662000632565b111562000532576200052981600162000650565b91505062000535565b90505b9392505050565b600080806200054c868662000667565b915091508160000362000576578381816200056b576200056b620009e1565b049250505062000535565b838210156200062d5760006200058e87878762000632565b9050600080620005a0858585620006bb565b9150915081600003620005cd57868181620005bf57620005bf620009e1565b049550505050505062000535565b600087620005dc8282620006f1565b1690506000620005ee848484620006ff565b905060006200060f838b81620006085762000608620009e1565b0462000756565b90506200061d82826200079b565b9850505050505050505062000535565b600080fd5b60008180620006455762000645620009e1565b838509949350505050565b60006200065e8284620009a1565b90505b92915050565b60008080620006778585620007a9565b905060006200068786866200079b565b90508082106200069f579081900392509050620006b4565b6001620006ad8383620006f1565b0393509150505b9250929050565b600080828410620006d35750839050818303620006e9565b6000198501620006e48585620006f1565b915091505b935093915050565b60006200065e828462000987565b6000806200072b83620007138382620006f1565b81620007235762000723620009e1565b506000919050565b90508284816200073f576200073f620009e1565b046200074c86836200079b565b1795945050505050565b60006001815b6008811015620007945762000789826200078360026200077d83896200079b565b620006f1565b6200079b565b91506001016200075c565b5092915050565b60006200065e8284620009f7565b60006000198284099392505050565b600060208284031215620007cb57600080fd5b81516001600160a01b03811681146200053557600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008195762000819620007e3565b019392505050565b600181815b8085111562000862578160001904821115620008465762000846620007e3565b808516156200085457918102915b93841c939080029062000826565b509250929050565b6000826200087b5750600162000661565b816200088a5750600062000661565b8160018114620008a35760028114620008ae57620008ce565b600191505062000661565b60ff841115620008c257620008c2620007e3565b50506001821b62000661565b5060208310610133831016604e8410600b8410161715620008f3575081810a62000661565b620008ff838362000821565b8060001904821115620009165762000916620007e3565b029392505050565b60006200065e60ff8416836200086a565b600060208083528351808285015260005b818110156200095e5785810183015185820160400152820162000940565b8181111562000971576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156200099c576200099c620007e3565b500390565b60008219821115620009b757620009b7620007e3565b500190565b60008060408385031215620009d057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000a145762000a14620007e3565b500290565b6117d48062000a296000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d4578063db1d0fd5146103dd578063dd62ed3e146103e5578063f2fde38b1461041e57600080fd5b8063a457c2d71461037e578063a9059cbb14610391578063bdfeb1e5146103a457600080fd5b80638da5cb5b116100d35780638da5cb5b1461031c57806395d89b41146103375780639dc29fac14610358578063a150da2a1461036b57600080fd5b806370a08231146102f9578063715018a61461030c578063739572891461031457600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ad57806357627e93146102e057806366666aa9146102e85780636863909e146102f157600080fd5b806332cb6b0c1461027d578063395093511461028557806340c10f191461029857600080fd5b806323b872dd116101a257806323b872dd146102415780632e0f2625146102545780632ff2e9dc1461026e578063313ce5671461027657600080fd5b806306fdde03146101c9578063095ea7b31461020857806318160ddd1461022b575b600080fd5b604080518082019091526011815270436f6d706f756e64496e7465726573744560781b60208201525b6040516101ff919061146c565b60405180910390f35b61021b6102163660046114dd565b610431565b60405190151581526020016101ff565b610233610448565b6040519081526020016101ff565b61021b61024f366004611507565b610457565b61025c601281565b60405160ff90911681526020016101ff565b6102336104fa565b601261025c565b610233610514565b61021b6102933660046114dd565b610536565b6102ab6102a63660046114dd565b610543565b005b6102c06102bb366004611543565b6105f2565b6040805194855260208501939093529183015260608201526080016101ff565b610233601e81565b61023360065481565b6102ab610633565b610233610307366004611543565b610775565b6102ab610780565b6102c06107b6565b6000546040516001600160a01b0390911681526020016101ff565b604080518082019091526005815264434552574560d81b60208201526101f2565b6102ab6103663660046114dd565b6108aa565b61021b610379366004611507565b6108de565b61021b61038c3660046114dd565b61096a565b61021b61039f3660046114dd565b610977565b6103ac610984565b604080519586526020860194909452928401919091526060830152608082015260a0016101ff565b61023360075481565b610233600c81565b6102336103f336600461155e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ab61042c366004611543565b6109a3565b600061043e338484610b4f565b5060015b92915050565b6000610452610c11565b905090565b60006001600160a01b03841633146104e4576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e25760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ef848484610c28565b5060015b9392505050565b610506601260086115a7565b61051190600a6116b0565b81565b610520601260086115a7565b61052b90600a6116b0565b61051190600a6116bf565b60006104f3338484610d34565b6000546001600160a01b0316331461056d5760405162461bcd60e51b81526004016104d9906116de565b610579601260086115a7565b61058490600a6116b0565b61058f90600a6116bf565b81610598610c11565b6105a29190611713565b11156105e45760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d9565b6105ee8282610dbb565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062a85610e12565b90509193509193565b600060055460045443610646919061172b565b610650919061172b565b9050801561077257600c5460009081906001600160a01b0316635aff34dc61067d610309620186a0611713565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190611742565b9150915060006003546107096003548585610a79565b610713919061172b565b905080600660008282546107279190611713565b9091555064e8d4a51000905061073e818585610a3b565b610748919061172b565b600760008282546107599190611713565b909155505060045461076b904361172b565b6005555050505b50565b600061044282610f5e565b6000546001600160a01b031633146107aa5760405162461bcd60e51b81526004016104d9906116de565b6107b46000610f8c565b565b6000806000806107c4610fdc565b93506107e06107db6000546001600160a01b031690565b610e12565b6107ea9084611713565b600954909350610802906001600160a01b0316610e12565b61080c9084611713565b600a54909350610824906001600160a01b0316610e12565b61082e9084611713565b600b54909350610846906001600160a01b0316610e12565b6108509084611713565b925060008385101561087057610866858561172b565b9250839050610880565b61087a848661172b565b92508490505b80156108a357806108968464e8d4a510006116bf565b6108a0919061177c565b91505b5090919293565b6000546001600160a01b031633146108d45760405162461bcd60e51b81526004016104d9906116de565b6105ee82826110d1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661092b5760405162461bcd60e51b81526004016104d9919061146c565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ef908590859061096590869061172b565b610b4f565b60006104f33384846108de565b600061043e338484610c28565b600354600554600754600654600061099a610fdc565b90509091929394565b6000546001600160a01b031633146109cd5760405162461bcd60e51b81526004016104d9906116de565b6001600160a01b038116610a325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d9565b61077281610f8c565b600080610a49858585610a79565b90506000610a58868686611185565b1115610a7157610a698160016111a0565b9150506104f3565b949350505050565b6000806000610a8886866111ac565b9150915081600003610aad57838181610aa357610aa3611766565b04925050506104f3565b838210156101c4576000610ac2878787611185565b9050600080610ad28585856111f9565b9150915081600003610afa57868181610aed57610aed611766565b04955050505050506104f3565b600087610b0860008a61122a565b1690506000610b18848484611236565b90506000610b34838b81610b2e57610b2e611766565b04611283565b9050610b4082826112c0565b985050505050505050506104f3565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b995760405162461bcd60e51b81526004016104d9919061146c565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610be45760405162461bcd60e51b81526004016104d9919061146c565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c1b610fdc565b6003546104529190611713565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c725760405162461bcd60e51b81526004016104d9919061146c565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cbd5760405162461bcd60e51b81526004016104d9919061146c565b506000610cc984610f5e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d155760405162461bcd60e51b81526004016104d9919061146c565b50610d22848360006112cc565b610d2e838360016112cc565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d815760405162461bcd60e51b81526004016104d9919061146c565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ef9085908590610965908690611713565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e055760405162461bcd60e51b81526004016104d9919061146c565b506105ee828260016112cc565b6001600160a01b0381166000908152600860209081526040808320546007546002909352908320548392610e4b9164e8d4a51000610a3b565b610e55919061172b565b9050600060055460045443610e6a919061172b565b610e74919061172b565b600c5490915060009081906001600160a01b0316635aff34dc610e9c610309620186a0611713565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610eee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f129190611742565b6001600160a01b03881660009081526002602052604081205492945090925090610f3d818585610a79565b610f47919061172b565b9050610f538186611713565b979650505050505050565b6000610f6982610e12565b6001600160a01b0383166000908152600260205260409020546104429190611713565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060055460045443610ff0919061172b565b610ffa919061172b565b600c5490915060009081906001600160a01b0316635aff34dc611022610309620186a0611713565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015611074573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110989190611742565b9150915060006003546110ae6003548585610a79565b6110b8919061172b565b9050806006546110c89190611713565b94505050505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661111b5760405162461bcd60e51b81526004016104d9919061146c565b50600061112783610f5e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111735760405162461bcd60e51b81526004016104d9919061146c565b50611180838360006112cc565b505050565b6000818061119557611195611766565b838509949350505050565b60006104f38284611713565b60008060006111bb858561145d565b905060006111c986866112c0565b90508082106111df5790819003925090506111f2565b60016111eb838361122a565b0393509150505b9250929050565b60008082841061120f5750839050818303611222565b6001850361121d858561122a565b915091505b935093915050565b60006104f3828461172b565b60008061125d8361124860008661122a565b8161125557611255611766565b506000919050565b905082848161126e5761126e611766565b0461127986836112c0565b1795945050505050565b60006001815b60088110156112b9576112af826112aa60026112a586896112c0565b61122a565b6112c0565b9150600101611289565b5092915050565b60006104f382846116bf565b6112d4610633565b6001600160a01b038316600090815260086020908152604080832054600754600290935290832054909161130d9164e8d4a51000610a3b565b611317919061172b565b9050806006600082825461132b919061172b565b90915550506001600160a01b03841660009081526002602052604081208054839290611358908490611713565b9250508190555080600360008282546113719190611713565b909155505081156113c8576001600160a01b038416600090815260026020526040812080548592906113a4908490611713565b9250508190555082600360008282546113bd9190611713565b9091555061140f9050565b6001600160a01b038416600090815260026020526040812080548592906113f090849061172b565b925050819055508260036000828254611409919061172b565b90915550505b6007546001600160a01b03851660009081526002602052604090205461143b919064e8d4a51000610a3b565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b600060208083528351808285015260005b818110156114995785810183015185820160400152820161147d565b818111156114ab576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114d857600080fd5b919050565b600080604083850312156114f057600080fd5b6114f9836114c1565b946020939093013593505050565b60008060006060848603121561151c57600080fd5b611525846114c1565b9250611533602085016114c1565b9150604084013590509250925092565b60006020828403121561155557600080fd5b6104f3826114c1565b6000806040838503121561157157600080fd5b61157a836114c1565b9150611588602084016114c1565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115c4576115c4611591565b019392505050565b600181815b808511156116075781600019048211156115ed576115ed611591565b808516156115fa57918102915b93841c93908002906115d1565b509250929050565b60008261161e57506001610442565b8161162b57506000610442565b8160018114611641576002811461164b57611667565b6001915050610442565b60ff84111561165c5761165c611591565b50506001821b610442565b5060208310610133831016604e8410600b841016171561168a575081810a610442565b61169483836115cc565b80600019048211156116a8576116a8611591565b029392505050565b60006104f360ff84168361160f565b60008160001904831182151516156116d9576116d9611591565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561172657611726611591565b500190565b60008282101561173d5761173d611591565b500390565b6000806040838503121561175557600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261179957634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212201a5fc73ad0a0ab7a82450a36521fbe66607732bc06c8aa1afceb93eea41f17e464736f6c634300080e0033";

export class CompoundInterestE__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundInterestE> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundInterestE>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundInterestE {
    return super.attach(address) as CompoundInterestE;
  }
  connect(signer: Signer): CompoundInterestE__factory {
    return super.connect(signer) as CompoundInterestE__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundInterestEInterface {
    return new utils.Interface(_abi) as CompoundInterestEInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundInterestE {
    return new Contract(address, _abi, signerOrProvider) as CompoundInterestE;
  }
}

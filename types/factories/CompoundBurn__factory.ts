/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundBurn, CompoundBurnInterface } from "../CompoundBurn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002249380380620022498339810160408190526200003491620007ac565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007ed565b620000ee90600a62000912565b6200014b565b5062000a30565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000923565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000373565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091620001f7916200097b565b620002039190620009b3565b6200020f9190620009d6565b90508060066000828254620002259190620009d6565b90915550506001600160a01b0384166000908152600260205260408120805483929062000254908490620009d6565b9250508190555080600360008282546200026f9190620009d6565b90915550508115620002cc576001600160a01b03841660009081526002602052604081208054859290620002a5908490620009f0565b925050819055508260036000828254620002c09190620009f0565b90915550620003179050565b6001600160a01b03841660009081526002602052604081208054859290620002f6908490620009d6565b925050819055508260036000828254620003119190620009d6565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a510009162000345916200097b565b620003519190620009b3565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060055460045443620003889190620009d6565b620003949190620009d6565b90508015620004e557600c5460009081906001600160a01b0316635aff34dc620003c4610309620f4240620009d6565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa15801562000417573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043d919062000a0b565b9150915060006200045d6003548484620004e860201b62000a391760201c565b6003546200046c9190620009d6565b90508060066000828254620004829190620009f0565b92505081905550620004a664e8d4a510008484620004e860201b62000a391760201c565b620004b79064e8d4a51000620009d6565b60076000828254620004ca9190620009f0565b9091555050600454620004de9043620009d6565b6005555050505b50565b600080620004f885858562000530565b905060006200050986868662000626565b111562000526576200051d81600162000644565b91505062000529565b90505b9392505050565b600080806200054086866200065b565b91509150816000036200056a578381816200055f576200055f6200099d565b049250505062000529565b83821015620006215760006200058287878762000626565b905060008062000594858585620006af565b9150915081600003620005c157868181620005b357620005b36200099d565b049550505050505062000529565b600087620005d08282620006e5565b1690506000620005e2848484620006f3565b9050600062000603838b81620005fc57620005fc6200099d565b046200074a565b90506200061182826200078f565b9850505050505050505062000529565b600080fd5b600081806200063957620006396200099d565b838509949350505050565b6000620006528284620009f0565b90505b92915050565b600080806200066b85856200079d565b905060006200067b86866200078f565b905080821062000693579081900392509050620006a8565b6001620006a18383620006e5565b0393509150505b9250929050565b600080828410620006c75750839050818303620006dd565b6000198501620006d88585620006e5565b915091505b935093915050565b6000620006528284620009d6565b6000806200071f83620007078382620006e5565b816200071757620007176200099d565b506000919050565b90508284816200073357620007336200099d565b046200074086836200078f565b1795945050505050565b60006001815b600881101562000788576200077d826200077760026200077183896200078f565b620006e5565b6200078f565b915060010162000750565b5092915050565b60006200065282846200097b565b60006000198284099392505050565b600060208284031215620007bf57600080fd5b81516001600160a01b03811681146200052957600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200080d576200080d620007d7565b019392505050565b600181815b80851115620008565781600019048211156200083a576200083a620007d7565b808516156200084857918102915b93841c93908002906200081a565b509250929050565b6000826200086f5750600162000655565b816200087e5750600062000655565b8160018114620008975760028114620008a257620008c2565b600191505062000655565b60ff841115620008b657620008b6620007d7565b50506001821b62000655565b5060208310610133831016604e8410600b8410161715620008e7575081810a62000655565b620008f3838362000815565b80600019048211156200090a576200090a620007d7565b029392505050565b60006200065260ff8416836200085e565b600060208083528351808285015260005b81811015620009525785810183015185820160400152820162000934565b8181111562000965576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009985762000998620007d7565b500290565b634e487b7160e01b600052601260045260246000fd5b600082620009d157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015620009eb57620009eb620007d7565b500390565b6000821982111562000a065762000a06620007d7565b500190565b6000806040838503121562000a1f57600080fd5b505080516020909101519092909150565b6118098062000a406000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103ce578063db1d0fd5146103d7578063dd62ed3e146103df578063f2fde38b1461041857600080fd5b8063a457c2d714610378578063a9059cbb1461038b578063bdfeb1e51461039e57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031757806395d89b41146103325780639dc29fac14610352578063a150da2a1461036557600080fd5b806370a08231146102f4578063715018a614610307578063739572891461030f57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a857806357627e93146102db57806366666aa9146102e35780636863909e146102ec57600080fd5b806332cb6b0c14610278578063395093511461028057806340c10f191461029357600080fd5b806323b872dd116101a257806323b872dd1461023c5780632e0f26251461024f5780632ff2e9dc14610269578063313ce5671461027157600080fd5b806306fdde03146101c9578063095ea7b31461020357806318160ddd14610226575b600080fd5b60408051808201909152600c81526b21b7b6b837bab732213ab93760a11b60208201525b6040516101fa91906114a1565b60405180910390f35b610216610211366004611512565b61042b565b60405190151581526020016101fa565b61022e610442565b6040519081526020016101fa565b61021661024a36600461153c565b610451565b610257601281565b60405160ff90911681526020016101fa565b61022e6104f4565b6012610257565b61022e61050e565b61021661028e366004611512565b610530565b6102a66102a1366004611512565b61053d565b005b6102bb6102b6366004611578565b6105ec565b6040805194855260208501939093529183015260608201526080016101fa565b61022e601e81565b61022e60065481565b6102a661062d565b61022e610302366004611578565b610773565b6102a661077e565b6102bb6107b4565b6000546040516001600160a01b0390911681526020016101fa565b60408051808201909152600481526321a2a12760e11b60208201526101ed565b6102a6610360366004611512565b6108a8565b61021661037336600461153c565b6108dc565b610216610386366004611512565b610968565b610216610399366004611512565b610975565b6103a6610982565b604080519586526020860194909452928401919091526060830152608082015260a0016101fa565b61022e60075481565b61022e600c81565b61022e6103ed366004611593565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a6610426366004611578565b6109a1565b6000610438338484610a77565b5060015b92915050565b600061044c610b39565b905090565b60006001600160a01b03841633146104de576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104dc5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e9848484610b50565b5060015b9392505050565b610500601260086115dc565b61050b90600a6116e5565b81565b61051a601260086115dc565b61052590600a6116e5565b61050b90600a6116f4565b60006104ed338484610c5c565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016104d390611713565b610573601260086115dc565b61057e90600a6116e5565b61058990600a6116f4565b81610592610b39565b61059c9190611748565b11156105de5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d3565b6105e88282610ce3565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062485610d3a565b90509193509193565b6000600554600454436106409190611760565b61064a9190611760565b9050801561077057600c5460009081906001600160a01b0316635aff34dc610677610309620f4240611760565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa1580156106c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed9190611777565b9150915060006107006003548484610a39565b60035461070d9190611760565b905080600660008282546107219190611748565b90915550610737905064e8d4a510008484610a39565b6107469064e8d4a51000611760565b600760008282546107579190611748565b90915550506004546107699043611760565b6005555050505b50565b600061043c82610eab565b6000546001600160a01b031633146107a85760405162461bcd60e51b81526004016104d390611713565b6107b26000610ed9565b565b6000806000806107c2610f29565b93506107de6107d96000546001600160a01b031690565b610d3a565b6107e89084611748565b600954909350610800906001600160a01b0316610d3a565b61080a9084611748565b600a54909350610822906001600160a01b0316610d3a565b61082c9084611748565b600b54909350610844906001600160a01b0316610d3a565b61084e9084611748565b925060008385101561086e576108648585611760565b925083905061087e565b6108788486611760565b92508490505b80156108a157806108948464e8d4a510006116f4565b61089e91906117b1565b91505b5090919293565b6000546001600160a01b031633146108d25760405162461bcd60e51b81526004016104d390611713565b6105e8828261101e565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109295760405162461bcd60e51b81526004016104d391906114a1565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e99085908590610963908690611760565b610a77565b60006104ed3384846108dc565b6000610438338484610b50565b6003546005546007546006546000610998610f29565b90509091929394565b6000546001600160a01b031633146109cb5760405162461bcd60e51b81526004016104d390611713565b6001600160a01b038116610a305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b61077081610ed9565b600080610a478585856110d2565b90506000610a568686866111a8565b1115610a6f57610a678160016111c3565b9150506104ed565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ac15760405162461bcd60e51b81526004016104d391906114a1565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b0c5760405162461bcd60e51b81526004016104d391906114a1565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b43610f29565b60035461044c9190611760565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b9a5760405162461bcd60e51b81526004016104d391906114a1565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610be55760405162461bcd60e51b81526004016104d391906114a1565b506000610bf184610eab565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c3d5760405162461bcd60e51b81526004016104d391906114a1565b50610c4a848360006111cf565b610c56838360016111cf565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610ca95760405162461bcd60e51b81526004016104d391906114a1565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e99085908590610963908690611748565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d2d5760405162461bcd60e51b81526004016104d391906114a1565b506105e8828260016111cf565b6001600160a01b038116600090815260086020908152604080832054600290925282205460075483929164e8d4a5100091610d7591906116f4565b610d7f91906117b1565b610d899190611760565b9050600060055460045443610d9e9190611760565b610da89190611760565b600c5490915060009081906001600160a01b0316635aff34dc610dd0610309620f4240611760565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e469190611777565b6001600160a01b03881660009081526002602052604081205492945090925090610e71908484610a39565b6001600160a01b038816600090815260026020526040902054610e949190611760565b9050610ea08186611748565b979650505050505050565b6000610eb682610d3a565b6001600160a01b03831660009081526002602052604090205461043c9190611760565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060055460045443610f3d9190611760565b610f479190611760565b600c5490915060009081906001600160a01b0316635aff34dc610f6f610309620f4240611760565b6040516001600160e01b031960e084901b1681526004810191909152620f4240602482015260448101869052600a60648201526084016040805180830381865afa158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe59190611777565b915091506000610ff86003548484610a39565b6003546110059190611760565b9050806006546110159190611748565b94505050505090565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110685760405162461bcd60e51b81526004016104d391906114a1565b50600061107483610eab565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110c05760405162461bcd60e51b81526004016104d391906114a1565b506110cd838360006111cf565b505050565b60008060006110e18686611372565b9150915081600003611106578381816110fc576110fc61179b565b04925050506104ed565b838210156101c457600061111b8787876111a8565b905060008061112b8585856113bf565b9150915081600003611153578681816111465761114661179b565b04955050505050506104ed565b60008761116160008a6113f0565b16905060006111718484846113fc565b9050600061118d838b816111875761118761179b565b04611449565b90506111998282611486565b985050505050505050506104ed565b600081806111b8576111b861179b565b838509949350505050565b60006104ed8284611748565b6111d761062d565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009161120e916116f4565b61121891906117b1565b6112229190611760565b905080600660008282546112369190611760565b90915550506001600160a01b03841660009081526002602052604081208054839290611263908490611760565b92505081905550806003600082825461127c9190611760565b909155505081156112d3576001600160a01b038416600090815260026020526040812080548592906112af908490611748565b9250508190555082600360008282546112c89190611748565b9091555061131a9050565b6001600160a01b038416600090815260026020526040812080548592906112fb908490611760565b9250508190555082600360008282546113149190611760565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a5100091611346916116f4565b61135091906117b1565b6001600160a01b03909416600090815260086020526040902093909355505050565b60008060006113818585611492565b9050600061138f8686611486565b90508082106113a55790819003925090506113b8565b60016113b183836113f0565b0393509150505b9250929050565b6000808284106113d557508390508183036113e8565b600185036113e385856113f0565b915091505b935093915050565b60006104ed8284611760565b6000806114238361140e6000866113f0565b8161141b5761141b61179b565b506000919050565b90508284816114345761143461179b565b0461143f8683611486565b1795945050505050565b60006001815b600881101561147f5761147582611470600261146b8689611486565b6113f0565b611486565b915060010161144f565b5092915050565b60006104ed82846116f4565b60006000198284099392505050565b600060208083528351808285015260005b818110156114ce578581018301518582016040015282016114b2565b818111156114e0576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461150d57600080fd5b919050565b6000806040838503121561152557600080fd5b61152e836114f6565b946020939093013593505050565b60008060006060848603121561155157600080fd5b61155a846114f6565b9250611568602085016114f6565b9150604084013590509250925092565b60006020828403121561158a57600080fd5b6104ed826114f6565b600080604083850312156115a657600080fd5b6115af836114f6565b91506115bd602084016114f6565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115f9576115f96115c6565b019392505050565b600181815b8085111561163c578160001904821115611622576116226115c6565b8085161561162f57918102915b93841c9390800290611606565b509250929050565b6000826116535750600161043c565b816116605750600061043c565b816001811461167657600281146116805761169c565b600191505061043c565b60ff841115611691576116916115c6565b50506001821b61043c565b5060208310610133831016604e8410600b84101617156116bf575081810a61043c565b6116c98383611601565b80600019048211156116dd576116dd6115c6565b029392505050565b60006104ed60ff841683611644565b600081600019048311821515161561170e5761170e6115c6565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561175b5761175b6115c6565b500190565b600082821015611772576117726115c6565b500390565b6000806040838503121561178a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117ce57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122098f81a22d8e56363dbb777d7f899ac468d9bd6b3ef0e59cdde876fd39337829664736f6c634300080e0033";

export class CompoundBurn__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBurn> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundBurn>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundBurn {
    return super.attach(address) as CompoundBurn;
  }
  connect(signer: Signer): CompoundBurn__factory {
    return super.connect(signer) as CompoundBurn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBurnInterface {
    return new utils.Interface(_abi) as CompoundBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBurn {
    return new Contract(address, _abi, signerOrProvider) as CompoundBurn;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundBurn, CompoundBurnInterface } from "../CompoundBurn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002247380380620022478339810160408190526200003491620007a4565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007e5565b620000ee90600a6200090a565b6200014b565b5062000a28565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200091b565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000373565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091620001f79162000973565b620002039190620009ab565b6200020f9190620009ce565b90508060066000828254620002259190620009ce565b90915550506001600160a01b0384166000908152600260205260408120805483929062000254908490620009ce565b9250508190555080600360008282546200026f9190620009ce565b90915550508115620002cc576001600160a01b03841660009081526002602052604081208054859290620002a5908490620009e8565b925050819055508260036000828254620002c09190620009e8565b90915550620003179050565b6001600160a01b03841660009081526002602052604081208054859290620002f6908490620009ce565b925050819055508260036000828254620003119190620009ce565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a5100091620003459162000973565b620003519190620009ab565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060045443620003859190620009ce565b9050600060055482620003999190620009ce565b90508015620001b057600c5460009081906001600160a01b0316635aff34dc620003c9610309620186a0620009ce565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156200041c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000442919062000a03565b915091506000620004626003548484620004e060201b62000a431760201c565b600354620004719190620009ce565b90508060066000828254620004879190620009e8565b92505081905550620004ab64e8d4a510008484620004e060201b62000a431760201c565b620004bc9064e8d4a51000620009ce565b60076000828254620004cf9190620009e8565b909155505050600584905550505050565b600080620004f085858562000528565b90506000620005018686866200061e565b11156200051e57620005158160016200063c565b91505062000521565b90505b9392505050565b6000808062000538868662000653565b9150915081600003620005625783818162000557576200055762000995565b049250505062000521565b83821015620006195760006200057a8787876200061e565b90506000806200058c858585620006a7565b9150915081600003620005b957868181620005ab57620005ab62000995565b049550505050505062000521565b600087620005c88282620006dd565b1690506000620005da848484620006eb565b90506000620005fb838b81620005f457620005f462000995565b0462000742565b905062000609828262000787565b9850505050505050505062000521565b600080fd5b6000818062000631576200063162000995565b838509949350505050565b60006200064a8284620009e8565b90505b92915050565b6000808062000663858562000795565b9050600062000673868662000787565b90508082106200068b579081900392509050620006a0565b6001620006998383620006dd565b0393509150505b9250929050565b600080828410620006bf5750839050818303620006d5565b6000198501620006d08585620006dd565b915091505b935093915050565b60006200064a8284620009ce565b6000806200071783620006ff8382620006dd565b816200070f576200070f62000995565b506000919050565b90508284816200072b576200072b62000995565b0462000738868362000787565b1795945050505050565b60006001815b6008811015620007805762000775826200076f600262000769838962000787565b620006dd565b62000787565b915060010162000748565b5092915050565b60006200064a828462000973565b60006000198284099392505050565b600060208284031215620007b757600080fd5b81516001600160a01b03811681146200052157600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008055762000805620007cf565b019392505050565b600181815b808511156200084e578160001904821115620008325762000832620007cf565b808516156200084057918102915b93841c939080029062000812565b509250929050565b60008262000867575060016200064d565b8162000876575060006200064d565b81600181146200088f57600281146200089a57620008ba565b60019150506200064d565b60ff841115620008ae57620008ae620007cf565b50506001821b6200064d565b5060208310610133831016604e8410600b8410161715620008df575081810a6200064d565b620008eb83836200080d565b8060001904821115620009025762000902620007cf565b029392505050565b60006200064a60ff84168362000856565b600060208083528351808285015260005b818110156200094a578581018301518582016040015282016200092c565b818111156200095d576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009905762000990620007cf565b500290565b634e487b7160e01b600052601260045260246000fd5b600082620009c957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015620009e357620009e3620007cf565b500390565b60008219821115620009fe57620009fe620007cf565b500190565b6000806040838503121562000a1757600080fd5b505080516020909101519092909150565b61180f8062000a386000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103ce578063db1d0fd5146103d7578063dd62ed3e146103df578063f2fde38b1461041857600080fd5b8063a457c2d714610378578063a9059cbb1461038b578063bdfeb1e51461039e57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031757806395d89b41146103325780639dc29fac14610352578063a150da2a1461036557600080fd5b806370a08231146102f4578063715018a614610307578063739572891461030f57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a857806357627e93146102db57806366666aa9146102e35780636863909e146102ec57600080fd5b806332cb6b0c14610278578063395093511461028057806340c10f191461029357600080fd5b806323b872dd116101a257806323b872dd1461023c5780632e0f26251461024f5780632ff2e9dc14610269578063313ce5671461027157600080fd5b806306fdde03146101c9578063095ea7b31461020357806318160ddd14610226575b600080fd5b60408051808201909152600c81526b21b7b6b837bab732213ab93760a11b60208201525b6040516101fa91906114a7565b60405180910390f35b610216610211366004611518565b61042b565b60405190151581526020016101fa565b61022e610442565b6040519081526020016101fa565b61021661024a366004611542565b610451565b610257601281565b60405160ff90911681526020016101fa565b61022e6104f4565b6012610257565b61022e61050e565b61021661028e366004611518565b610530565b6102a66102a1366004611518565b61053d565b005b6102bb6102b636600461157e565b6105ec565b6040805194855260208501939093529183015260608201526080016101fa565b61022e601e81565b61022e60065481565b6102a661062d565b61022e61030236600461157e565b61076d565b6102a6610778565b6102bb6107ae565b6000546040516001600160a01b0390911681526020016101fa565b60408051808201909152600481526321a2a12760e11b60208201526101ed565b6102a6610360366004611518565b6108af565b610216610373366004611542565b6108e3565b610216610386366004611518565b61096f565b610216610399366004611518565b61097c565b6103a6610989565b604080519586526020860194909452928401919091526060830152608082015260a0016101fa565b61022e60075481565b61022e600c81565b61022e6103ed366004611599565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a661042636600461157e565b6109a8565b6000610438338484610a81565b5060015b92915050565b600061044c610b43565b905090565b60006001600160a01b03841633146104de576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104dc5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e9848484610b5a565b5060015b9392505050565b610500601260086115e2565b61050b90600a6116eb565b81565b61051a601260086115e2565b61052590600a6116eb565b61050b90600a6116fa565b60006104ed338484610c66565b6000546001600160a01b031633146105675760405162461bcd60e51b81526004016104d390611719565b610573601260086115e2565b61057e90600a6116eb565b61058990600a6116fa565b81610592610b43565b61059c919061174e565b11156105de5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d3565b6105e88282610ced565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062485610d44565b90509193509193565b60006004544361063d9190611766565b905060006005548261064f9190611766565b905080156105e857600c5460009081906001600160a01b0316635aff34dc61067c610309620186a0611766565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f2919061177d565b9150915060006107056003548484610a43565b6003546107129190611766565b90508060066000828254610726919061174e565b9091555061073c905064e8d4a510008484610a43565b61074b9064e8d4a51000611766565b6007600082825461075c919061174e565b909155505050600584905550505050565b600061043c82610ebb565b6000546001600160a01b031633146107a25760405162461bcd60e51b81526004016104d390611719565b6107ac6000610ee9565b565b6000806000806006546107bf610f39565b6107c9919061174e565b93506107e56107e06000546001600160a01b031690565b610d44565b6107ef908461174e565b600954909350610807906001600160a01b0316610d44565b610811908461174e565b600a54909350610829906001600160a01b0316610d44565b610833908461174e565b600b5490935061084b906001600160a01b0316610d44565b610855908461174e565b92506000838510156108755761086b8585611766565b9250839050610885565b61087f8486611766565b92508490505b80156108a8578061089b8464e8d4a510006116fa565b6108a591906117b7565b91505b5090919293565b6000546001600160a01b031633146108d95760405162461bcd60e51b81526004016104d390611719565b6105e88282611024565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109305760405162461bcd60e51b81526004016104d391906114a7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e9908590859061096a908690611766565b610a81565b60006104ed3384846108e3565b6000610438338484610b5a565b600354600554600754600654600061099f610f39565b90509091929394565b6000546001600160a01b031633146109d25760405162461bcd60e51b81526004016104d390611719565b6001600160a01b038116610a375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b610a4081610ee9565b50565b600080610a518585856110d8565b90506000610a608686866111ae565b1115610a7957610a718160016111c9565b9150506104ed565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610acb5760405162461bcd60e51b81526004016104d391906114a7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b165760405162461bcd60e51b81526004016104d391906114a7565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b4d610f39565b60035461044c9190611766565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ba45760405162461bcd60e51b81526004016104d391906114a7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bef5760405162461bcd60e51b81526004016104d391906114a7565b506000610bfb84610ebb565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c475760405162461bcd60e51b81526004016104d391906114a7565b50610c54848360006111d5565b610c60838360016111d5565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cb35760405162461bcd60e51b81526004016104d391906114a7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e9908590859061096a90869061174e565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d375760405162461bcd60e51b81526004016104d391906114a7565b506105e8828260016111d5565b6001600160a01b038116600090815260086020908152604080832054600290925282205460075483929164e8d4a5100091610d7f91906116fa565b610d8991906117b7565b610d939190611766565b9050600060045443610da59190611766565b9050600060055482610db79190611766565b600c5490915060009081906001600160a01b0316635aff34dc610ddf610309620186a0611766565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e55919061177d565b6001600160a01b03891660009081526002602052604081205492945090925090610e80908484610a43565b6001600160a01b038916600090815260026020526040902054610ea39190611766565b9050610eaf818761174e565b98975050505050505050565b6000610ec682610d44565b6001600160a01b03831660009081526002602052604090205461043c9190611766565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610f4a9190611766565b9050600060055482610f5c9190611766565b600c5490915060009081906001600160a01b0316635aff34dc610f84610309620186a0611766565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffa919061177d565b91509150600061100d6003548484610a43565b60035461101a9190611766565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661106e5760405162461bcd60e51b81526004016104d391906114a7565b50600061107a83610ebb565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110c65760405162461bcd60e51b81526004016104d391906114a7565b506110d3838360006111d5565b505050565b60008060006110e78686611378565b915091508160000361110c57838181611102576111026117a1565b04925050506104ed565b838210156101c45760006111218787876111ae565b90506000806111318585856113c5565b91509150816000036111595786818161114c5761114c6117a1565b04955050505050506104ed565b60008761116760008a6113f6565b1690506000611177848484611402565b90506000611193838b8161118d5761118d6117a1565b0461144f565b905061119f828261148c565b985050505050505050506104ed565b600081806111be576111be6117a1565b838509949350505050565b60006104ed828461174e565b6111dd61062d565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091611214916116fa565b61121e91906117b7565b6112289190611766565b9050806006600082825461123c9190611766565b90915550506001600160a01b03841660009081526002602052604081208054839290611269908490611766565b9250508190555080600360008282546112829190611766565b909155505081156112d9576001600160a01b038416600090815260026020526040812080548592906112b590849061174e565b9250508190555082600360008282546112ce919061174e565b909155506113209050565b6001600160a01b03841660009081526002602052604081208054859290611301908490611766565b92505081905550826003600082825461131a9190611766565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a510009161134c916116fa565b61135691906117b7565b6001600160a01b03909416600090815260086020526040902093909355505050565b60008060006113878585611498565b90506000611395868661148c565b90508082106113ab5790819003925090506113be565b60016113b783836113f6565b0393509150505b9250929050565b6000808284106113db57508390508183036113ee565b600185036113e985856113f6565b915091505b935093915050565b60006104ed8284611766565b600080611429836114146000866113f6565b81611421576114216117a1565b506000919050565b905082848161143a5761143a6117a1565b04611445868361148c565b1795945050505050565b60006001815b60088110156114855761147b826114766002611471868961148c565b6113f6565b61148c565b9150600101611455565b5092915050565b60006104ed82846116fa565b60006000198284099392505050565b600060208083528351808285015260005b818110156114d4578581018301518582016040015282016114b8565b818111156114e6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461151357600080fd5b919050565b6000806040838503121561152b57600080fd5b611534836114fc565b946020939093013593505050565b60008060006060848603121561155757600080fd5b611560846114fc565b925061156e602085016114fc565b9150604084013590509250925092565b60006020828403121561159057600080fd5b6104ed826114fc565b600080604083850312156115ac57600080fd5b6115b5836114fc565b91506115c3602084016114fc565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115ff576115ff6115cc565b019392505050565b600181815b80851115611642578160001904821115611628576116286115cc565b8085161561163557918102915b93841c939080029061160c565b509250929050565b6000826116595750600161043c565b816116665750600061043c565b816001811461167c5760028114611686576116a2565b600191505061043c565b60ff841115611697576116976115cc565b50506001821b61043c565b5060208310610133831016604e8410600b84101617156116c5575081810a61043c565b6116cf8383611607565b80600019048211156116e3576116e36115cc565b029392505050565b60006104ed60ff84168361164a565b6000816000190483118215151615611714576117146115cc565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611761576117616115cc565b500190565b600082821015611778576117786115cc565b500390565b6000806040838503121561179057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117d457634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203bd8f6a958659854205634b6898200e3503671f6a9a111f2c00f10e2d18dd7cc64736f6c634300080e0033";

export class CompoundBurn__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundBurn> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundBurn>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundBurn {
    return super.attach(address) as CompoundBurn;
  }
  connect(signer: Signer): CompoundBurn__factory {
    return super.connect(signer) as CompoundBurn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundBurnInterface {
    return new utils.Interface(_abi) as CompoundBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundBurn {
    return new Contract(address, _abi, signerOrProvider) as CompoundBurn;
  }
}

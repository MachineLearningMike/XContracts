/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundExpBurn,
  CompoundExpBurnInterface,
} from "../CompoundExpBurn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200224c3803806200224c8339810160408190526200003491620007a4565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620007e5565b620000ee90600a6200090a565b6200014b565b5062000a28565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200091b565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000373565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091620001f79162000973565b620002039190620009ab565b6200020f9190620009ce565b90508060066000828254620002259190620009ce565b90915550506001600160a01b0384166000908152600260205260408120805483929062000254908490620009ce565b9250508190555080600360008282546200026f9190620009ce565b90915550508115620002cc576001600160a01b03841660009081526002602052604081208054859290620002a5908490620009e8565b925050819055508260036000828254620002c09190620009e8565b90915550620003179050565b6001600160a01b03841660009081526002602052604081208054859290620002f6908490620009ce565b925050819055508260036000828254620003119190620009ce565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a5100091620003459162000973565b620003519190620009ab565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060045443620003859190620009ce565b9050600060055482620003999190620009ce565b90508015620001b057600c5460009081906001600160a01b0316635aff34dc620003c9610309620186a0620009ce565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156200041c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000442919062000a03565b915091506000620004626003548484620004e060201b62000a481760201c565b600354620004719190620009ce565b90508060066000828254620004879190620009e8565b92505081905550620004ab64e8d4a510008484620004e060201b62000a481760201c565b620004bc9064e8d4a51000620009ce565b60076000828254620004cf9190620009e8565b909155505050600584905550505050565b600080620004f085858562000528565b90506000620005018686866200061e565b11156200051e57620005158160016200063c565b91505062000521565b90505b9392505050565b6000808062000538868662000653565b9150915081600003620005625783818162000557576200055762000995565b049250505062000521565b83821015620006195760006200057a8787876200061e565b90506000806200058c858585620006a7565b9150915081600003620005b957868181620005ab57620005ab62000995565b049550505050505062000521565b600087620005c88282620006dd565b1690506000620005da848484620006eb565b90506000620005fb838b81620005f457620005f462000995565b0462000742565b905062000609828262000787565b9850505050505050505062000521565b600080fd5b6000818062000631576200063162000995565b838509949350505050565b60006200064a8284620009e8565b90505b92915050565b6000808062000663858562000795565b9050600062000673868662000787565b90508082106200068b579081900392509050620006a0565b6001620006998383620006dd565b0393509150505b9250929050565b600080828410620006bf5750839050818303620006d5565b6000198501620006d08585620006dd565b915091505b935093915050565b60006200064a8284620009ce565b6000806200071783620006ff8382620006dd565b816200070f576200070f62000995565b506000919050565b90508284816200072b576200072b62000995565b0462000738868362000787565b1795945050505050565b60006001815b6008811015620007805762000775826200076f600262000769838962000787565b620006dd565b62000787565b915060010162000748565b5092915050565b60006200064a828462000973565b60006000198284099392505050565b600060208284031215620007b757600080fd5b81516001600160a01b03811681146200052157600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008055762000805620007cf565b019392505050565b600181815b808511156200084e578160001904821115620008325762000832620007cf565b808516156200084057918102915b93841c939080029062000812565b509250929050565b60008262000867575060016200064d565b8162000876575060006200064d565b81600181146200088f57600281146200089a57620008ba565b60019150506200064d565b60ff841115620008ae57620008ae620007cf565b50506001821b6200064d565b5060208310610133831016604e8410600b8410161715620008df575081810a6200064d565b620008eb83836200080d565b8060001904821115620009025762000902620007cf565b029392505050565b60006200064a60ff84168362000856565b600060208083528351808285015260005b818110156200094a578581018301518582016040015282016200092c565b818111156200095d576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009905762000990620007cf565b500290565b634e487b7160e01b600052601260045260246000fd5b600082620009c957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015620009e357620009e3620007cf565b500390565b60008219821115620009fe57620009fe620007cf565b500190565b6000806040838503121562000a1757600080fd5b505080516020909101519092909150565b6118148062000a386000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d1578063db1d0fd5146103da578063dd62ed3e146103e2578063f2fde38b1461041b57600080fd5b8063a457c2d71461037b578063a9059cbb1461038e578063bdfeb1e5146103a157600080fd5b80638da5cb5b116100d35780638da5cb5b1461031a57806395d89b41146103355780639dc29fac14610355578063a150da2a1461036857600080fd5b806370a08231146102f7578063715018a61461030a578063739572891461031257600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ab57806357627e93146102de57806366666aa9146102e65780636863909e146102ef57600080fd5b806332cb6b0c1461027b578063395093511461028357806340c10f191461029657600080fd5b806323b872dd116101a257806323b872dd1461023f5780632e0f2625146102525780632ff2e9dc1461026c578063313ce5671461027457600080fd5b806306fdde03146101c9578063095ea7b31461020657806318160ddd14610229575b600080fd5b60408051808201909152600f81526e21b7b6b837bab73222bc38213ab93760891b60208201525b6040516101fd91906114ac565b60405180910390f35b61021961021436600461151d565b61042e565b60405190151581526020016101fd565b610231610445565b6040519081526020016101fd565b61021961024d366004611547565b610454565b61025a601281565b60405160ff90911681526020016101fd565b6102316104f7565b601261025a565b610231610511565b61021961029136600461151d565b610534565b6102a96102a436600461151d565b610541565b005b6102be6102b9366004611583565b6105f1565b6040805194855260208501939093529183015260608201526080016101fd565b610231601e81565b61023160065481565b6102a9610632565b610231610305366004611583565b610772565b6102a961077d565b6102be6107b3565b6000546040516001600160a01b0390911681526020016101fd565b60408051808201909152600481526321a2a12760e11b60208201526101f0565b6102a961036336600461151d565b6108b4565b610219610376366004611547565b6108e8565b61021961038936600461151d565b610974565b61021961039c36600461151d565b610981565b6103a961098e565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b61023160075481565b610231600c81565b6102316103f036600461159e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a9610429366004611583565b6109ad565b600061043b338484610a86565b5060015b92915050565b600061044f610b48565b905090565b60006001600160a01b03841633146104e1576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104df5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ec848484610b5f565b5060015b9392505050565b610503601260086115e7565b61050e90600a6116f0565b81565b61051d601260086115e7565b61052890600a6116f0565b61050e906103e86116ff565b60006104f0338484610c6b565b6000546001600160a01b0316331461056b5760405162461bcd60e51b81526004016104d69061171e565b610577601260086115e7565b61058290600a6116f0565b61058e906103e86116ff565b81610597610b48565b6105a19190611753565b11156105e35760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d6565b6105ed8282610cf2565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062985610d49565b90509193509193565b600060045443610642919061176b565b9050600060055482610654919061176b565b905080156105ed57600c5460009081906001600160a01b0316635aff34dc610681610309620186a061176b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f79190611782565b91509150600061070a6003548484610a48565b600354610717919061176b565b9050806006600082825461072b9190611753565b90915550610741905064e8d4a510008484610a48565b6107509064e8d4a5100061176b565b600760008282546107619190611753565b909155505050600584905550505050565b600061043f82610ec0565b6000546001600160a01b031633146107a75760405162461bcd60e51b81526004016104d69061171e565b6107b16000610eee565b565b6000806000806006546107c4610f3e565b6107ce9190611753565b93506107ea6107e56000546001600160a01b031690565b610d49565b6107f49084611753565b60095490935061080c906001600160a01b0316610d49565b6108169084611753565b600a5490935061082e906001600160a01b0316610d49565b6108389084611753565b600b54909350610850906001600160a01b0316610d49565b61085a9084611753565b925060008385101561087a57610870858561176b565b925083905061088a565b610884848661176b565b92508490505b80156108ad57806108a08464e8d4a510006116ff565b6108aa91906117bc565b91505b5090919293565b6000546001600160a01b031633146108de5760405162461bcd60e51b81526004016104d69061171e565b6105ed8282611029565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109355760405162461bcd60e51b81526004016104d691906114ac565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ec908590859061096f90869061176b565b610a86565b60006104f03384846108e8565b600061043b338484610b5f565b60035460055460075460065460006109a4610f3e565b90509091929394565b6000546001600160a01b031633146109d75760405162461bcd60e51b81526004016104d69061171e565b6001600160a01b038116610a3c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d6565b610a4581610eee565b50565b600080610a568585856110dd565b90506000610a658686866111b3565b1115610a7e57610a768160016111ce565b9150506104f0565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ad05760405162461bcd60e51b81526004016104d691906114ac565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b1b5760405162461bcd60e51b81526004016104d691906114ac565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b52610f3e565b60035461044f919061176b565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ba95760405162461bcd60e51b81526004016104d691906114ac565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf45760405162461bcd60e51b81526004016104d691906114ac565b506000610c0084610ec0565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c4c5760405162461bcd60e51b81526004016104d691906114ac565b50610c59848360006111da565b610c65838360016111da565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cb85760405162461bcd60e51b81526004016104d691906114ac565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ec908590859061096f908690611753565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d3c5760405162461bcd60e51b81526004016104d691906114ac565b506105ed828260016111da565b6001600160a01b038116600090815260086020908152604080832054600290925282205460075483929164e8d4a5100091610d8491906116ff565b610d8e91906117bc565b610d98919061176b565b9050600060045443610daa919061176b565b9050600060055482610dbc919061176b565b600c5490915060009081906001600160a01b0316635aff34dc610de4610309620186a061176b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5a9190611782565b6001600160a01b03891660009081526002602052604081205492945090925090610e85908484610a48565b6001600160a01b038916600090815260026020526040902054610ea8919061176b565b9050610eb48187611753565b98975050505050505050565b6000610ecb82610d49565b6001600160a01b03831660009081526002602052604090205461043f919061176b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610f4f919061176b565b9050600060055482610f61919061176b565b600c5490915060009081906001600160a01b0316635aff34dc610f89610309620186a061176b565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190611782565b9150915060006110126003548484610a48565b60035461101f919061176b565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110735760405162461bcd60e51b81526004016104d691906114ac565b50600061107f83610ec0565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110cb5760405162461bcd60e51b81526004016104d691906114ac565b506110d8838360006111da565b505050565b60008060006110ec868661137d565b915091508160000361111157838181611107576111076117a6565b04925050506104f0565b838210156101c45760006111268787876111b3565b90506000806111368585856113ca565b915091508160000361115e57868181611151576111516117a6565b04955050505050506104f0565b60008761116c60008a6113fb565b169050600061117c848484611407565b90506000611198838b81611192576111926117a6565b04611454565b90506111a48282611491565b985050505050505050506104f0565b600081806111c3576111c36117a6565b838509949350505050565b60006104f08284611753565b6111e2610632565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100091611219916116ff565b61122391906117bc565b61122d919061176b565b90508060066000828254611241919061176b565b90915550506001600160a01b0384166000908152600260205260408120805483929061126e90849061176b565b925050819055508060036000828254611287919061176b565b909155505081156112de576001600160a01b038416600090815260026020526040812080548592906112ba908490611753565b9250508190555082600360008282546112d39190611753565b909155506113259050565b6001600160a01b0384166000908152600260205260408120805485929061130690849061176b565b92505081905550826003600082825461131f919061176b565b90915550505b6001600160a01b03841660009081526002602052604090205460075464e8d4a5100091611351916116ff565b61135b91906117bc565b6001600160a01b03909416600090815260086020526040902093909355505050565b600080600061138c858561149d565b9050600061139a8686611491565b90508082106113b05790819003925090506113c3565b60016113bc83836113fb565b0393509150505b9250929050565b6000808284106113e057508390508183036113f3565b600185036113ee85856113fb565b915091505b935093915050565b60006104f0828461176b565b60008061142e836114196000866113fb565b81611426576114266117a6565b506000919050565b905082848161143f5761143f6117a6565b0461144a8683611491565b1795945050505050565b60006001815b600881101561148a576114808261147b60026114768689611491565b6113fb565b611491565b915060010161145a565b5092915050565b60006104f082846116ff565b60006000198284099392505050565b600060208083528351808285015260005b818110156114d9578581018301518582016040015282016114bd565b818111156114eb576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461151857600080fd5b919050565b6000806040838503121561153057600080fd5b61153983611501565b946020939093013593505050565b60008060006060848603121561155c57600080fd5b61156584611501565b925061157360208501611501565b9150604084013590509250925092565b60006020828403121561159557600080fd5b6104f082611501565b600080604083850312156115b157600080fd5b6115ba83611501565b91506115c860208401611501565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115611604576116046115d1565b019392505050565b600181815b8085111561164757816000190482111561162d5761162d6115d1565b8085161561163a57918102915b93841c9390800290611611565b509250929050565b60008261165e5750600161043f565b8161166b5750600061043f565b8160018114611681576002811461168b576116a7565b600191505061043f565b60ff84111561169c5761169c6115d1565b50506001821b61043f565b5060208310610133831016604e8410600b84101617156116ca575081810a61043f565b6116d4838361160c565b80600019048211156116e8576116e86115d1565b029392505050565b60006104f060ff84168361164f565b6000816000190483118215151615611719576117196115d1565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611766576117666115d1565b500190565b60008282101561177d5761177d6115d1565b500390565b6000806040838503121561179557600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117d957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122065ebd84ed00045c42e35594f7d6426e0429c77071b8e48d37dce99e52a52cdac64736f6c634300080e0033";

export class CompoundExpBurn__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpBurn> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundExpBurn>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpBurn {
    return super.attach(address) as CompoundExpBurn;
  }
  connect(signer: Signer): CompoundExpBurn__factory {
    return super.connect(signer) as CompoundExpBurn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpBurnInterface {
    return new utils.Interface(_abi) as CompoundExpBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpBurn {
    return new Contract(address, _abi, signerOrProvider) as CompoundExpBurn;
  }
}

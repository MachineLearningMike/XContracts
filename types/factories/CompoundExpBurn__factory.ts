/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundExpBurn,
  CompoundExpBurnInterface,
} from "../CompoundExpBurn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200227b3803806200227b833981016040819052620000349162000793565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007d4565b620000ee90600a620008f9565b6200014b565b5062000a17565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200090a565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000362565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f89162000962565b62000204919062000984565b620002109190620009b4565b9050806006600082825462000226919062000984565b90915550506001600160a01b038416600090815260026020526040812080548392906200025590849062000984565b92505081905550806003600082825462000270919062000984565b90915550508115620002cd576001600160a01b03841660009081526002602052604081208054859290620002a6908490620009d7565b925050819055508260036000828254620002c19190620009d7565b90915550620003189050565b6001600160a01b03841660009081526002602052604081208054859290620002f790849062000984565b92505081905550826003600082825462000312919062000984565b90915550505b6001600160a01b03841660009081526002602052604090205460075462000340919062000962565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006004544362000374919062000984565b905060006005548262000388919062000984565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003bd610309620186a062000984565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801562000410573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004369190620009f2565b915091506000620004566003548484620004cf60201b62000a571760201c565b60035462000465919062000984565b905080600660008282546200047b9190620009d7565b925050819055506200049f64e8d4a510008484620004cf60201b62000a571760201c565b620004b09064e8d4a5100062000984565b60076000828254620004c39190620009d7565b90915550505050505050565b600080620004df85858562000517565b90506000620004f08686866200060d565b11156200050d57620005048160016200062b565b91505062000510565b90505b9392505050565b6000808062000527868662000642565b915091508160000362000551578381816200054657620005466200099e565b049250505062000510565b8382101562000608576000620005698787876200060d565b90506000806200057b85858562000696565b9150915081600003620005a8578681816200059a576200059a6200099e565b049550505050505062000510565b600087620005b78282620006cc565b1690506000620005c9848484620006da565b90506000620005ea838b81620005e357620005e36200099e565b0462000731565b9050620005f8828262000776565b9850505050505050505062000510565b600080fd5b600081806200062057620006206200099e565b838509949350505050565b6000620006398284620009d7565b90505b92915050565b6000808062000652858562000784565b9050600062000662868662000776565b90508082106200067a5790819003925090506200068f565b6001620006888383620006cc565b0393509150505b9250929050565b600080828410620006ae5750839050818303620006c4565b6000198501620006bf8585620006cc565b915091505b935093915050565b600062000639828462000984565b6000806200070683620006ee8382620006cc565b81620006fe57620006fe6200099e565b506000919050565b90508284816200071a576200071a6200099e565b0462000727868362000776565b1795945050505050565b60006001815b60088110156200076f5762000764826200075e600262000758838962000776565b620006cc565b62000776565b915060010162000737565b5092915050565b600062000639828462000962565b60006000198284099392505050565b600060208284031215620007a657600080fd5b81516001600160a01b03811681146200051057600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620007f457620007f4620007be565b019392505050565b600181815b808511156200083d578160001904821115620008215762000821620007be565b808516156200082f57918102915b93841c939080029062000801565b509250929050565b60008262000856575060016200063c565b8162000865575060006200063c565b81600181146200087e57600281146200088957620008a9565b60019150506200063c565b60ff8411156200089d576200089d620007be565b50506001821b6200063c565b5060208310610133831016604e8410600b8410161715620008ce575081810a6200063c565b620008da8383620007fc565b8060001904821115620008f157620008f1620007be565b029392505050565b60006200063960ff84168362000845565b600060208083528351808285015260005b8181101562000939578581018301518582016040015282016200091b565b818111156200094c576000604083870101525b50601f01601f1916929092016040019392505050565b60008160001904831182151516156200097f576200097f620007be565b500290565b600082821015620009995762000999620007be565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009d257634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620009ed57620009ed620007be565b500190565b6000806040838503121562000a0657600080fd5b505080516020909101519092909150565b6118548062000a276000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d1578063db1d0fd5146103da578063dd62ed3e146103e2578063f2fde38b1461041b57600080fd5b8063a457c2d71461037b578063a9059cbb1461038e578063bdfeb1e5146103a157600080fd5b80638da5cb5b116100d35780638da5cb5b1461031a57806395d89b41146103355780639dc29fac14610355578063a150da2a1461036857600080fd5b806370a08231146102f7578063715018a61461030a578063739572891461031257600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ab57806357627e93146102de57806366666aa9146102e65780636863909e146102ef57600080fd5b806332cb6b0c1461027b578063395093511461028357806340c10f191461029657600080fd5b806323b872dd116101a257806323b872dd1461023f5780632e0f2625146102525780632ff2e9dc1461026c578063313ce5671461027457600080fd5b806306fdde03146101c9578063095ea7b31461020657806318160ddd14610229575b600080fd5b60408051808201909152600f81526e21b7b6b837bab73222bc38213ab93760891b60208201525b6040516101fd91906114ec565b60405180910390f35b61021961021436600461155d565b61042e565b60405190151581526020016101fd565b610231610445565b6040519081526020016101fd565b61021961024d366004611587565b610454565b61025a601281565b60405160ff90911681526020016101fd565b6102316104f7565b601261025a565b610231610511565b61021961029136600461155d565b610534565b6102a96102a436600461155d565b610541565b005b6102be6102b93660046115c3565b6105f1565b6040805194855260208501939093529183015260608201526080016101fd565b610231601e81565b61023160065481565b6102a9610632565b6102316103053660046115c3565b610772565b6102a961077d565b6102be6107b3565b6000546040516001600160a01b0390911681526020016101fd565b60408051808201909152600481526321a2a12760e11b60208201526101f0565b6102a961036336600461155d565b6108c3565b610219610376366004611587565b6108f7565b61021961038936600461155d565b610983565b61021961039c36600461155d565b610990565b6103a961099d565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b61023160075481565b610231600c81565b6102316103f03660046115de565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a96104293660046115c3565b6109bc565b600061043b338484610a95565b5060015b92915050565b600061044f610b57565b905090565b60006001600160a01b03841633146104e1576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104df5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ec848484610b6e565b5060015b9392505050565b61050360126006611627565b61050e90600a611730565b81565b61051d60126006611627565b61052890600a611730565b61050e906103e861173f565b60006104f0338484610c7a565b6000546001600160a01b0316331461056b5760405162461bcd60e51b81526004016104d69061175e565b61057760126006611627565b61058290600a611730565b61058e906103e861173f565b81610597610b57565b6105a19190611793565b11156105e35760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d6565b6105ed8282610d01565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062985610d58565b90509193509193565b60006004544361064291906117ab565b905060006005548261065491906117ab565b905080156105ed576005829055600c5460009081906001600160a01b0316635aff34dc610686610309620186a06117ab565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc91906117c2565b91509150600061070f6003548484610a57565b60035461071c91906117ab565b905080600660008282546107309190611793565b90915550610746905064e8d4a510008484610a57565b6107559064e8d4a510006117ab565b600760008282546107669190611793565b90915550505050505050565b600061043f82610f0f565b6000546001600160a01b031633146107a75760405162461bcd60e51b81526004016104d69061175e565b6107b16000610f3d565b565b6000806000806006546107c4610f8d565b6107ce9190611793565b935060006107ec6107e76000546001600160a01b031690565b610d58565b90506107f88185611793565b600954909450610810906001600160a01b0316610d58565b905061081c8185611793565b600a54909450610834906001600160a01b0316610d58565b90506108408185611793565b600b54909450610858906001600160a01b0316610d58565b90506108648185611793565b93508385101561087f5761087885856117ab565b925061088c565b61088984866117ab565b92505b84848110156108985750835b80156108bb57806108ae8564e8d4a5100061173f565b6108b891906117fc565b92505b505090919293565b6000546001600160a01b031633146108ed5760405162461bcd60e51b81526004016104d69061175e565b6105ed8282611078565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109445760405162461bcd60e51b81526004016104d691906114ec565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ec908590859061097e9086906117ab565b610a95565b60006104f03384846108f7565b600061043b338484610b6e565b60035460055460075460065460006109b3610f8d565b90509091929394565b6000546001600160a01b031633146109e65760405162461bcd60e51b81526004016104d69061175e565b6001600160a01b038116610a4b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d6565b610a5481610f3d565b50565b600080610a6585858561112c565b90506000610a74868686611202565b1115610a8d57610a8581600161121d565b9150506104f0565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610adf5760405162461bcd60e51b81526004016104d691906114ec565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b2a5760405162461bcd60e51b81526004016104d691906114ec565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b61610f8d565b60035461044f91906117ab565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bb85760405162461bcd60e51b81526004016104d691906114ec565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c035760405162461bcd60e51b81526004016104d691906114ec565b506000610c0f84610f0f565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c5b5760405162461bcd60e51b81526004016104d691906114ec565b50610c6884836000611229565b610c7483836001611229565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cc75760405162461bcd60e51b81526004016104d691906114ec565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ec908590859061097e908690611793565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d4b5760405162461bcd60e51b81526004016104d691906114ec565b506105ed82826001611229565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610d9a57506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610dd29161173f565b610ddc91906117ab565b610de691906117fc565b9050600060045443610df891906117ab565b9050600060055482610e0a91906117ab565b600c5490915060009081906001600160a01b0316635aff34dc610e32610309620186a06117ab565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea891906117c2565b6001600160a01b038a1660009081526002602052604081205492945090925090610ed3908484610a57565b6001600160a01b038a16600090815260026020526040902054610ef691906117ab565b9050610f028187611793565b9998505050505050505050565b6000610f1a82610d58565b6001600160a01b03831660009081526002602052604090205461043f91906117ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610f9e91906117ab565b9050600060055482610fb091906117ab565b600c5490915060009081906001600160a01b0316635aff34dc610fd8610309620186a06117ab565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801561102a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104e91906117c2565b9150915060006110616003548484610a57565b60035461106e91906117ab565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110c25760405162461bcd60e51b81526004016104d691906114ec565b5060006110ce83610f0f565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b8152509061111a5760405162461bcd60e51b81526004016104d691906114ec565b5061112783836000611229565b505050565b600080600061113b86866113bd565b915091508160000361116057838181611156576111566117e6565b04925050506104f0565b838210156101c4576000611175878787611202565b905060008061118585858561140a565b91509150816000036111ad578681816111a0576111a06117e6565b04955050505050506104f0565b6000876111bb60008a61143b565b16905060006111cb848484611447565b905060006111e7838b816111e1576111e16117e6565b04611494565b90506111f382826114d1565b985050505050505050506104f0565b60008180611212576112126117e6565b838509949350505050565b60006104f08284611793565b611231610632565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100092916112699161173f565b61127391906117ab565b61127d91906117fc565b9050806006600082825461129191906117ab565b90915550506001600160a01b038416600090815260026020526040812080548392906112be9084906117ab565b9250508190555080600360008282546112d791906117ab565b9091555050811561132e576001600160a01b0384166000908152600260205260408120805485929061130a908490611793565b9250508190555082600360008282546113239190611793565b909155506113759050565b6001600160a01b038416600090815260026020526040812080548592906113569084906117ab565b92505081905550826003600082825461136f91906117ab565b90915550505b6001600160a01b03841660009081526002602052604090205460075461139b919061173f565b6001600160a01b03909416600090815260086020526040902093909355505050565b60008060006113cc85856114dd565b905060006113da86866114d1565b90508082106113f0579081900392509050611403565b60016113fc838361143b565b0393509150505b9250929050565b6000808284106114205750839050818303611433565b6001850361142e858561143b565b915091505b935093915050565b60006104f082846117ab565b60008061146e8361145960008661143b565b81611466576114666117e6565b506000919050565b905082848161147f5761147f6117e6565b0461148a86836114d1565b1795945050505050565b60006001815b60088110156114ca576114c0826114bb60026114b686896114d1565b61143b565b6114d1565b915060010161149a565b5092915050565b60006104f0828461173f565b60006000198284099392505050565b600060208083528351808285015260005b81811015611519578581018301518582016040015282016114fd565b8181111561152b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461155857600080fd5b919050565b6000806040838503121561157057600080fd5b61157983611541565b946020939093013593505050565b60008060006060848603121561159c57600080fd5b6115a584611541565b92506115b360208501611541565b9150604084013590509250925092565b6000602082840312156115d557600080fd5b6104f082611541565b600080604083850312156115f157600080fd5b6115fa83611541565b915061160860208401611541565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561164457611644611611565b019392505050565b600181815b8085111561168757816000190482111561166d5761166d611611565b8085161561167a57918102915b93841c9390800290611651565b509250929050565b60008261169e5750600161043f565b816116ab5750600061043f565b81600181146116c157600281146116cb576116e7565b600191505061043f565b60ff8411156116dc576116dc611611565b50506001821b61043f565b5060208310610133831016604e8410600b841016171561170a575081810a61043f565b611714838361164c565b806000190482111561172857611728611611565b029392505050565b60006104f060ff84168361168f565b600081600019048311821515161561175957611759611611565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156117a6576117a6611611565b500190565b6000828210156117bd576117bd611611565b500390565b600080604083850312156117d557600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261181957634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206a89cc465647a9c5e7334c4d243ca8af8deb0263f3b11f2dd67bd6ca652a522664736f6c634300080e0033";

export class CompoundExpBurn__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpBurn> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundExpBurn>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpBurn {
    return super.attach(address) as CompoundExpBurn;
  }
  connect(signer: Signer): CompoundExpBurn__factory {
    return super.connect(signer) as CompoundExpBurn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpBurnInterface {
    return new utils.Interface(_abi) as CompoundExpBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpBurn {
    return new Contract(address, _abi, signerOrProvider) as CompoundExpBurn;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DistTypeA, DistTypeAInterface } from "../DistTypeA";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019a5380380620019a58339810160408190526200003491620003ee565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600662000436565b620000ee90600a6200055d565b6200014b565b5062000640565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200056e565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f891620005c6565b620002049190620005e8565b62000210919062000602565b90508060066000828254620002269190620005e8565b90915550506001600160a01b038416600090815260086020526040812060010180548392906200025890849062000625565b90915550508115620002b5576001600160a01b038416600090815260026020526040812080548592906200028e90849062000625565b925050819055508260036000828254620002a9919062000625565b90915550620003009050565b6001600160a01b03841660009081526002602052604081208054859290620002df908490620005e8565b925050819055508260036000828254620002fa9190620005e8565b90915550505b6001600160a01b038416600090815260026020526040902054600754620003289190620005c6565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200035c9190620005e8565b9050600060055482620003709190620005e8565b90508015620001b05760058290556000620003968269021e19e0c9bab2400000620005c6565b90508060066000828254620003ac919062000625565b9091555050600354620003c58264e8d4a51000620005c6565b620003d1919062000602565b60076000828254620003e4919062000625565b9091555050505050565b6000602082840312156200040157600080fd5b81516001600160a01b03811681146200041957600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000456576200045662000420565b019392505050565b600181815b808511156200049f57816000190482111562000483576200048362000420565b808516156200049157918102915b93841c939080029062000463565b509250929050565b600082620004b85750600162000557565b81620004c75750600062000557565b8160018114620004e05760028114620004eb576200050b565b600191505062000557565b60ff841115620004ff57620004ff62000420565b50506001821b62000557565b5060208310610133831016604e8410600b841016171562000530575081810a62000557565b6200053c83836200045e565b806000190482111562000553576200055362000420565b0290505b92915050565b60006200041960ff841683620004a7565b600060208083528351808285015260005b818110156200059d578581018301518582016040015282016200057f565b81811115620005b0576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005e357620005e362000420565b500290565b600082821015620005fd57620005fd62000420565b500390565b6000826200062057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156200063b576200063b62000420565b500190565b61135580620006506000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103cb578063db1d0fd5146103d4578063dd62ed3e146103e5578063f2fde38b1461041e57600080fd5b8063a457c2d714610375578063a9059cbb14610388578063bdfeb1e51461039b57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031457806395d89b411461032f5780639dc29fac1461034f578063a150da2a1461036257600080fd5b806370a08231146102f1578063715018a614610304578063739572891461030c57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a557806357627e93146102d857806366666aa9146102e05780636863909e146102e957600080fd5b806332cb6b0c14610275578063395093511461027d57806340c10f191461029057600080fd5b806323b872dd116101a257806323b872dd146102395780632e0f26251461024c5780632ff2e9dc14610266578063313ce5671461026e57600080fd5b806306fdde03146101c9578063095ea7b31461020057806318160ddd14610223575b600080fd5b60408051808201909152600981526844697374547970654160b81b60208201525b6040516101f79190611027565b60405180910390f35b61021361020e366004611098565b610431565b60405190151581526020016101f7565b61022b610448565b6040519081526020016101f7565b6102136102473660046110c2565b610458565b610254601281565b60405160ff90911681526020016101f7565b61022b6104fa565b6012610254565b61022b610514565b61021361028b366004611098565b610536565b6102a361029e366004611098565b61054a565b005b6102b86102b33660046110fe565b6105fa565b6040805194855260208501939093529183015260608201526080016101f7565b61022b601e81565b61022b60065481565b6102a361063b565b61022b6102ff3660046110fe565b6106d0565b6102a36106ee565b6102b8610724565b6000546040516001600160a01b0390911681526020016101f7565b60408051808201909152600481526354595f4160e01b60208201526101ea565b6102a361035d366004611098565b610834565b6102136103703660046110c2565b610868565b610213610383366004611098565b6108f4565b610213610396366004611098565b610901565b6103a361090e565b604080519586526020860194909452928401919091526060830152608082015260a0016101f7565b61022b60075481565b61022b69021e19e0c9bab240000081565b61022b6103f3366004611119565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a361042c3660046110fe565b61092d565b600061043e3384846109c8565b5060015b92915050565b600061045360035490565b905090565b60006001600160a01b03841633146104e5576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e35760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104f0848484610a8a565b5060019392505050565b61050660126006611162565b61051190600a61126b565b81565b61052060126006611162565b61052b90600a61126b565b61051190600a61127a565b6000610543338484610ba4565b9392505050565b6000546001600160a01b031633146105745760405162461bcd60e51b81526004016104da90611299565b61058060126006611162565b61058b90600a61126b565b61059690600a61127a565b816105a060035490565b6105aa91906112ce565b11156105ec5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104da565b6105f68282610c2b565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061063285610c82565b90509193509193565b60006004544361064b91906112e6565b905060006005548261065d91906112e6565b905080156105f657600582905560006106808269021e19e0c9bab240000061127a565b9050806006600082825461069491906112ce565b90915550506003546106ab8264e8d4a5100061127a565b6106b591906112fd565b600760008282546106c691906112ce565b9091555050505050565b6001600160a01b038116600090815260026020526040812054610442565b6000546001600160a01b031633146107185760405162461bcd60e51b81526004016104da90611299565b6107226000610d54565b565b600080600080600654610735610da4565b61073f91906112ce565b9350600061075d6107586000546001600160a01b031690565b610c82565b905061076981856112ce565b600954909450610781906001600160a01b0316610c82565b905061078d81856112ce565b600a549094506107a5906001600160a01b0316610c82565b90506107b181856112ce565b600b549094506107c9906001600160a01b0316610c82565b90506107d581856112ce565b9350838510156107f0576107e985856112e6565b92506107fd565b6107fa84866112e6565b92505b84848110156108095750835b801561082c578061081f8564e8d4a5100061127a565b61082991906112fd565b92505b505090919293565b6000546001600160a01b0316331461085e5760405162461bcd60e51b81526004016104da90611299565b6105f68282610de7565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108b55760405162461bcd60e51b81526004016104da9190611027565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104f090859085906108ef9086906112e6565b6109c8565b6000610543338484610868565b600061043e338484610a8a565b6003546005546007546006546000610924610da4565b90509091929394565b6000546001600160a01b031633146109575760405162461bcd60e51b81526004016104da90611299565b6001600160a01b0381166109bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104da565b6109c581610d54565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a125760405162461bcd60e51b81526004016104da9190611027565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a5d5760405162461bcd60e51b81526004016104da9190611027565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ad45760405162461bcd60e51b81526004016104da9190611027565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b1f5760405162461bcd60e51b81526004016104da9190611027565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b855760405162461bcd60e51b81526004016104da9190611027565b50610b9284836000610ea9565b610b9e83836001610ea9565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bf15760405162461bcd60e51b81526004016104da9190611027565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104f090859085906108ef9086906112ce565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c755760405162461bcd60e51b81526004016104da9190611027565b506105f682826001610ea9565b6001600160a01b0381166000908152600860209081526040808320546002909252822054600754839264e8d4a51000929091610cbe919061127a565b610cc891906112e6565b610cd291906112fd565b9050600060045443610ce491906112e6565b9050600060055482610cf691906112e6565b6003546001600160a01b03871660009081526002602052604081205492935091610d2a8469021e19e0c9bab240000061127a565b610d34919061127a565b610d3e91906112fd565b9050610d4a81856112ce565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610db591906112e6565b9050600060055482610dc791906112e6565b90506000610ddf8269021e19e0c9bab240000061127a565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e315760405162461bcd60e51b81526004016104da9190611027565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610e975760405162461bcd60e51b81526004016104da9190611027565b50610ea483836000610ea9565b505050565b610eb161063b565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ee99161127a565b610ef391906112e6565b610efd91906112fd565b90508060066000828254610f1191906112e6565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f419084906112ce565b90915550508115610f98576001600160a01b03841660009081526002602052604081208054859290610f749084906112ce565b925050819055508260036000828254610f8d91906112ce565b90915550610fdf9050565b6001600160a01b03841660009081526002602052604081208054859290610fc09084906112e6565b925050819055508260036000828254610fd991906112e6565b90915550505b6001600160a01b038416600090815260026020526040902054600754611005919061127a565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b8181101561105457858101830151858201604001528201611038565b81811115611066576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461109357600080fd5b919050565b600080604083850312156110ab57600080fd5b6110b48361107c565b946020939093013593505050565b6000806000606084860312156110d757600080fd5b6110e08461107c565b92506110ee6020850161107c565b9150604084013590509250925092565b60006020828403121561111057600080fd5b6105438261107c565b6000806040838503121561112c57600080fd5b6111358361107c565b91506111436020840161107c565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561117f5761117f61114c565b019392505050565b600181815b808511156111c25781600019048211156111a8576111a861114c565b808516156111b557918102915b93841c939080029061118c565b509250929050565b6000826111d957506001610442565b816111e657506000610442565b81600181146111fc576002811461120657611222565b6001915050610442565b60ff8411156112175761121761114c565b50506001821b610442565b5060208310610133831016604e8410600b8410161715611245575081810a610442565b61124f8383611187565b80600019048211156112635761126361114c565b029392505050565b600061054360ff8416836111ca565b60008160001904831182151516156112945761129461114c565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112e1576112e161114c565b500190565b6000828210156112f8576112f861114c565b500390565b60008261131a57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122097d34c87aa4dd38784d46de030e454fac03501ae8e7376ab8a267fa93b1fb35164736f6c634300080e0033";

export class DistTypeA__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DistTypeA> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<DistTypeA>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): DistTypeA {
    return super.attach(address) as DistTypeA;
  }
  connect(signer: Signer): DistTypeA__factory {
    return super.connect(signer) as DistTypeA__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistTypeAInterface {
    return new utils.Interface(_abi) as DistTypeAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DistTypeA {
    return new Contract(address, _abi, signerOrProvider) as DistTypeA;
  }
}

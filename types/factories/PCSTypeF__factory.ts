/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PCSTypeF, PCSTypeFInterface } from "../PCSTypeF";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002276380380620022768339810160408190526200003491620007a4565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007e5565b620000ee90600a6200090a565b6200014b565b5062000a28565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200091b565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034e565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f89162000973565b62000204919062000995565b620002109190620009c5565b90506200022660065482620004bb60201b60201c565b6006556001600160a01b0384166000908152600860205260408120600101805483929062000256908490620009e8565b90915550508115620002b3576001600160a01b038416600090815260026020526040812080548592906200028c908490620009e8565b925050819055508260036000828254620002a79190620009e8565b90915550620003049050565b6001600160a01b038416600090815260026020526040902054620002d89084620004bb565b6001600160a01b038516600090815260026020526040902055600354620003009084620004bb565b6003555b6001600160a01b0384166000908152600260205260409020546007546200032c919062000973565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006004544362000360919062000995565b905060006005548262000374919062000995565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003a9610309620186a062000995565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015620003fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000422919062000a03565b915091506000620004426003548484620004e460201b62000a4e1760201c565b60035462000451919062000995565b90508060066000828254620004679190620009e8565b925050819055506200048b64e8d4a510008484620005e160201b62000b241760201c565b6200049c9064e8d4a5100062000995565b60076000828254620004af9190620009e8565b90915550505050505050565b600081831115620004da57620004d2828462000995565b9050620004de565b5060005b92915050565b60008080620004f4868662000627565b91509150816000036200051e57838181620005135762000513620009af565b0492505050620005da565b83821015620005d5576000620005368787876200067b565b90506000806200054885858562000699565b91509150816000036200057557868181620005675762000567620009af565b0495505050505050620005da565b600087620005848282620006cf565b169050600062000596848484620006dd565b90506000620005b7838b81620005b057620005b0620009af565b0462000734565b9050620005c5828262000779565b98505050505050505050620005da565b600080fd5b9392505050565b600080620005f1858585620004e4565b90506000620006028686866200067b565b11156200061f576200061681600162000787565b915050620005da565b949350505050565b6000808062000637858562000795565b9050600062000647868662000779565b90508082106200065f57908190039250905062000674565b60016200066d8383620006cf565b0393509150505b9250929050565b600081806200068e576200068e620009af565b838509949350505050565b600080828410620006b15750839050818303620006c7565b6000198501620006c28585620006cf565b915091505b935093915050565b6000620005da828462000995565b6000806200070983620006f18382620006cf565b81620007015762000701620009af565b506000919050565b90508284816200071d576200071d620009af565b046200072a868362000779565b1795945050505050565b60006001815b6008811015620007725762000767826200076160026200075b838962000779565b620006cf565b62000779565b91506001016200073a565b5092915050565b6000620005da828462000973565b6000620005da8284620009e8565b60006000198284099392505050565b600060208284031215620007b757600080fd5b81516001600160a01b0381168114620005da57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008055762000805620007cf565b019392505050565b600181815b808511156200084e578160001904821115620008325762000832620007cf565b808516156200084057918102915b93841c939080029062000812565b509250929050565b6000826200086757506001620004de565b816200087657506000620004de565b81600181146200088f57600281146200089a57620008ba565b6001915050620004de565b60ff841115620008ae57620008ae620007cf565b50506001821b620004de565b5060208310610133831016604e8410600b8410161715620008df575081810a620004de565b620008eb83836200080d565b8060001904821115620009025762000902620007cf565b029392505050565b6000620005da60ff84168362000856565b600060208083528351808285015260005b818110156200094a578581018301518582016040015282016200092c565b818111156200095d576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009905762000990620007cf565b500290565b600082821015620009aa57620009aa620007cf565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009e357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620009fe57620009fe620007cf565b500190565b6000806040838503121562000a1757600080fd5b505080516020909101519092909150565b61183e8062000a386000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103ca578063db1d0fd5146103d3578063dd62ed3e146103db578063f2fde38b1461041457600080fd5b8063a457c2d714610374578063a9059cbb14610387578063bdfeb1e51461039a57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031357806395d89b411461032e5780639dc29fac1461034e578063a150da2a1461036157600080fd5b806370a08231146102f0578063715018a614610303578063739572891461030b57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a457806357627e93146102d757806366666aa9146102df5780636863909e146102e857600080fd5b806332cb6b0c14610274578063395093511461027c57806340c10f191461028f57600080fd5b806323b872dd116101a257806323b872dd146102385780632e0f26251461024b5780632ff2e9dc14610265578063313ce5671461026d57600080fd5b806306fdde03146101c9578063095ea7b3146101ff57806318160ddd14610222575b600080fd5b6040805180820190915260088152672821a9aa3cb832a360c11b60208201525b6040516101f691906114d6565b60405180910390f35b61021261020d366004611547565b610427565b60405190151581526020016101f6565b61022a61043e565b6040519081526020016101f6565b610212610246366004611571565b61044d565b610253601281565b60405160ff90911681526020016101f6565b61022a6104f0565b6012610253565b61022a61050a565b61021261028a366004611547565b61052c565b6102a261029d366004611547565b610539565b005b6102b76102b23660046115ad565b6105e8565b6040805194855260208501939093529183015260608201526080016101f6565b61022a601e81565b61022a60065481565b6102a2610629565b61022a6102fe3660046115ad565b610769565b6102a2610774565b6102b76107aa565b6000546040516001600160a01b0390911681526020016101f6565b6040805180820190915260048152632a282fa360e11b60208201526101e9565b6102a261035c366004611547565b6108ba565b61021261036f366004611571565b6108ee565b610212610382366004611547565b61097a565b610212610395366004611547565b610987565b6103a2610994565b604080519586526020860194909452928401919091526060830152608082015260a0016101f6565b61022a60075481565b61022a600c81565b61022a6103e93660046115c8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a26104223660046115ad565b6109b3565b6000610434338484610b62565b5060015b92915050565b6000610448610c24565b905090565b60006001600160a01b03841633146104da576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d85760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e5848484610c3b565b5060015b9392505050565b6104fc60126006611611565b61050790600a61171a565b81565b61051660126006611611565b61052190600a61171a565b61050790600a611729565b60006104e9338484610d47565b6000546001600160a01b031633146105635760405162461bcd60e51b81526004016104cf90611748565b61056f60126006611611565b61057a90600a61171a565b61058590600a611729565b8161058e610c24565b610598919061177d565b11156105da5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104cf565b6105e48282610dce565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062085610e25565b90509193509193565b6000600454436106399190611795565b905060006005548261064b9190611795565b905080156105e4576005829055600c5460009081906001600160a01b0316635aff34dc61067d610309620186a0611795565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f391906117ac565b9150915060006107066003548484610a4e565b6003546107139190611795565b90508060066000828254610727919061177d565b9091555061073d905064e8d4a510008484610b24565b61074c9064e8d4a51000611795565b6007600082825461075d919061177d565b90915550505050505050565b600061043882610fc3565b6000546001600160a01b0316331461079e5760405162461bcd60e51b81526004016104cf90611748565b6107a86000610ff1565b565b6000806000806006546107bb611041565b6107c5919061177d565b935060006107e36107de6000546001600160a01b031690565b610e25565b90506107ef818561177d565b600954909450610807906001600160a01b0316610e25565b9050610813818561177d565b600a5490945061082b906001600160a01b0316610e25565b9050610837818561177d565b600b5490945061084f906001600160a01b0316610e25565b905061085b818561177d565b9350838510156108765761086f8585611795565b9250610883565b6108808486611795565b92505b848481101561088f5750835b80156108b257806108a58564e8d4a51000611729565b6108af91906117e6565b92505b505090919293565b6000546001600160a01b031633146108e45760405162461bcd60e51b81526004016104cf90611748565b6105e4828261112c565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661093b5760405162461bcd60e51b81526004016104cf91906114d6565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e59085908590610975908690611795565b610b62565b60006104e93384846108ee565b6000610434338484610c3b565b60035460055460075460065460006109aa611041565b90509091929394565b6000546001600160a01b031633146109dd5760405162461bcd60e51b81526004016104cf90611748565b6001600160a01b038116610a425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b610a4b81610ff1565b50565b6000806000610a5d86866111e0565b9150915081600003610a8257838181610a7857610a786117d0565b04925050506104e9565b838210156101c4576000610a9787878761122d565b9050600080610aa7858585611248565b9150915081600003610acf57868181610ac257610ac26117d0565b04955050505050506104e9565b600087610add60008a611279565b1690506000610aed848484611285565b90506000610b09838b81610b0357610b036117d0565b046112d2565b9050610b15828261130f565b985050505050505050506104e9565b600080610b32858585610a4e565b90506000610b4186868661122d565b1115610b5a57610b5281600161131b565b9150506104e9565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bac5760405162461bcd60e51b81526004016104cf91906114d6565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf75760405162461bcd60e51b81526004016104cf91906114d6565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c2e611041565b6003546104489190611795565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c855760405162461bcd60e51b81526004016104cf91906114d6565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cd05760405162461bcd60e51b81526004016104cf91906114d6565b506000610cdc84610fc3565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d285760405162461bcd60e51b81526004016104cf91906114d6565b50610d3584836000611327565b610d4183836001611327565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d945760405162461bcd60e51b81526004016104cf91906114d6565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e5908590859061097590869061177d565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e185760405162461bcd60e51b81526004016104cf91906114d6565b506105e482826001611327565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e6757506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610e9f91611729565b610ea99190611795565b610eb391906117e6565b9050600060045443610ec59190611795565b9050600060055482610ed79190611795565b600c5490915060009081906001600160a01b0316635aff34dc610eff610309620186a061177d565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7591906117ac565b6001600160a01b038a1660009081526002602052604081205492945090925090610fa0818585610b24565b610faa9190611795565b9050610fb6818761177d565b9998505050505050505050565b6000610fce82610e25565b6001600160a01b0383166000908152600260205260409020546104389190611795565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600454436110529190611795565b90506000600554826110649190611795565b600c5490915060009081906001600160a01b0316635aff34dc61108c610309620186a061177d565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110291906117ac565b9150915060006003546111186003548585610a4e565b6111229190611795565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166111765760405162461bcd60e51b81526004016104cf91906114d6565b50600061118283610fc3565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111ce5760405162461bcd60e51b81526004016104cf91906114d6565b506111db83836000611327565b505050565b60008060006111ef85856114a3565b905060006111fd868661130f565b9050808210611213579081900392509050611226565b600161121f8383611279565b0393509150505b9250929050565b6000818061123d5761123d6117d0565b838509949350505050565b60008082841061125e5750839050818303611271565b6001850361126c8585611279565b915091505b935093915050565b60006104e98284611795565b6000806112ac83611297600086611279565b816112a4576112a46117d0565b506000919050565b90508284816112bd576112bd6117d0565b046112c8868361130f565b1795945050505050565b60006001815b6008811015611308576112fe826112f960026112f4868961130f565b611279565b61130f565b91506001016112d8565b5092915050565b60006104e98284611729565b60006104e9828461177d565b61132f610629565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a51000929161136791611729565b6113719190611795565b61137b91906117e6565b9050611389600654826114b2565b6006556001600160a01b038416600090815260086020526040812060010180548392906113b790849061177d565b9091555050811561140e576001600160a01b038416600090815260026020526040812080548592906113ea90849061177d565b925050819055508260036000828254611403919061177d565b9091555061145b9050565b6001600160a01b03841660009081526002602052604090205461143190846114b2565b6001600160a01b03851660009081526002602052604090205560035461145790846114b2565b6003555b6001600160a01b0384166000908152600260205260409020546007546114819190611729565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b6000818311156114cd576114c68284611795565b9050610438565b50600092915050565b600060208083528351808285015260005b81811015611503578581018301518582016040015282016114e7565b81811115611515576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461154257600080fd5b919050565b6000806040838503121561155a57600080fd5b6115638361152b565b946020939093013593505050565b60008060006060848603121561158657600080fd5b61158f8461152b565b925061159d6020850161152b565b9150604084013590509250925092565b6000602082840312156115bf57600080fd5b6104e98261152b565b600080604083850312156115db57600080fd5b6115e48361152b565b91506115f26020840161152b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561162e5761162e6115fb565b019392505050565b600181815b80851115611671578160001904821115611657576116576115fb565b8085161561166457918102915b93841c939080029061163b565b509250929050565b60008261168857506001610438565b8161169557506000610438565b81600181146116ab57600281146116b5576116d1565b6001915050610438565b60ff8411156116c6576116c66115fb565b50506001821b610438565b5060208310610133831016604e8410600b84101617156116f4575081810a610438565b6116fe8383611636565b8060001904821115611712576117126115fb565b029392505050565b60006104e960ff841683611679565b6000816000190483118215151615611743576117436115fb565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611790576117906115fb565b500190565b6000828210156117a7576117a76115fb565b500390565b600080604083850312156117bf57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261180357634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207acd2177b995eaac224293bef85ec8df743c48fcf458c77448cccc80c511122d64736f6c634300080e0033";

export class PCSTypeF__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PCSTypeF> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<PCSTypeF>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): PCSTypeF {
    return super.attach(address) as PCSTypeF;
  }
  connect(signer: Signer): PCSTypeF__factory {
    return super.connect(signer) as PCSTypeF__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PCSTypeFInterface {
    return new utils.Interface(_abi) as PCSTypeFInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PCSTypeF {
    return new Contract(address, _abi, signerOrProvider) as PCSTypeF;
  }
}

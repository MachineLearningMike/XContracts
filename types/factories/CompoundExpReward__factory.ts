/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundExpReward,
  CompoundExpRewardInterface,
} from "../CompoundExpReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200217f3803806200217f833981016040819052620000349162000740565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600662000781565b620000ee90600a620008a6565b6200014b565b50620009c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b8152600401620001989190620008b7565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000362565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f8916200090f565b62000204919062000931565b62000210919062000961565b9050806006600082825462000226919062000931565b90915550506001600160a01b038416600090815260026020526040812080548392906200025590849062000984565b92505081905550806003600082825462000270919062000984565b90915550508115620002cd576001600160a01b03841660009081526002602052604081208054859290620002a690849062000984565b925050819055508260036000828254620002c1919062000984565b90915550620003189050565b6001600160a01b03841660009081526002602052604081208054859290620002f790849062000931565b92505081905550826003600082825462000312919062000931565b90915550505b6001600160a01b0384166000908152600260205260409020546007546200034091906200090f565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006004544362000374919062000931565b905060006005548262000388919062000931565b90508015620001b057600c5460009081906001600160a01b0316635aff34dc620003b8610309620186a062000984565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156200040b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043191906200099f565b915091506000600354620004546003548585620004cb60201b62000a501760201c565b62000460919062000931565b9050806006600082825462000476919062000984565b9091555064e8d4a510009050826200048f85836200090f565b6200049b919062000961565b620004a7919062000931565b60076000828254620004ba919062000984565b909155505050600584905550505050565b60008080620004db8686620005c8565b91509150816000036200050557838181620004fa57620004fa6200094b565b0492505050620005c1565b83821015620005bc5760006200051d8787876200061c565b90506000806200052f8585856200063a565b91509150816000036200055c578681816200054e576200054e6200094b565b0495505050505050620005c1565b6000876200056b828262000670565b16905060006200057d84848462000687565b905060006200059e838b816200059757620005976200094b565b04620006de565b9050620005ac828262000723565b98505050505050505050620005c1565b600080fd5b9392505050565b60008080620005d8858562000731565b90506000620005e8868662000723565b90508082106200060057908190039250905062000615565b60016200060e838362000670565b0393509150505b9250929050565b600081806200062f576200062f6200094b565b838509949350505050565b60008082841062000652575083905081830362000668565b600019850162000663858562000670565b915091505b935093915050565b60006200067e828462000931565b90505b92915050565b600080620006b3836200069b838262000670565b81620006ab57620006ab6200094b565b506000919050565b9050828481620006c757620006c76200094b565b04620006d4868362000723565b1795945050505050565b60006001815b60088110156200071c5762000711826200070b600262000705838962000723565b62000670565b62000723565b9150600101620006e4565b5092915050565b60006200067e82846200090f565b60006000198284099392505050565b6000602082840312156200075357600080fd5b81516001600160a01b0381168114620005c157600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620007a157620007a16200076b565b019392505050565b600181815b80851115620007ea578160001904821115620007ce57620007ce6200076b565b80851615620007dc57918102915b93841c9390800290620007ae565b509250929050565b600082620008035750600162000681565b81620008125750600062000681565b81600181146200082b5760028114620008365762000856565b600191505062000681565b60ff8411156200084a576200084a6200076b565b50506001821b62000681565b5060208310610133831016604e8410600b84101617156200087b575081810a62000681565b620008878383620007a9565b80600019048211156200089e576200089e6200076b565b029392505050565b60006200067e60ff841683620007f2565b600060208083528351808285015260005b81811015620008e657858101830151858201604001528201620008c8565b81811115620008f9576000604083870101525b50601f01601f1916929092016040019392505050565b60008160001904831182151516156200092c576200092c6200076b565b500290565b6000828210156200094657620009466200076b565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826200097f57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156200099a576200099a6200076b565b500190565b60008060408385031215620009b357600080fd5b505080516020909101519092909150565b6117ab80620009d46000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d3578063db1d0fd5146103dc578063dd62ed3e146103e4578063f2fde38b1461041d57600080fd5b8063a457c2d71461037d578063a9059cbb14610390578063bdfeb1e5146103a357600080fd5b80638da5cb5b116100d35780638da5cb5b1461031c57806395d89b41146103375780639dc29fac14610357578063a150da2a1461036a57600080fd5b806370a08231146102f9578063715018a61461030c578063739572891461031457600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ad57806357627e93146102e057806366666aa9146102e85780636863909e146102f157600080fd5b806332cb6b0c1461027d578063395093511461028557806340c10f191461029857600080fd5b806323b872dd116101a257806323b872dd146102415780632e0f2625146102545780632ff2e9dc1461026e578063313ce5671461027657600080fd5b806306fdde03146101c9578063095ea7b31461020857806318160ddd1461022b575b600080fd5b60408051808201909152601181527010dbdb5c1bdd5b99115e1c14995dd85c99607a1b60208201525b6040516101ff9190611443565b60405180910390f35b61021b6102163660046114b4565b610430565b60405190151581526020016101ff565b610233610447565b6040519081526020016101ff565b61021b61024f3660046114de565b610456565b61025c601281565b60405160ff90911681526020016101ff565b6102336104f9565b601261025c565b610233610513565b61021b6102933660046114b4565b610536565b6102ab6102a63660046114b4565b610543565b005b6102c06102bb36600461151a565b6105f3565b6040805194855260208501939093529183015260608201526080016101ff565b610233601e81565b61023360065481565b6102ab610634565b61023361030736600461151a565b61077a565b6102ab610785565b6102c06107bb565b6000546040516001600160a01b0390911681526020016101ff565b6040805180820190915260048152634345525760e01b60208201526101f2565b6102ab6103653660046114b4565b6108bc565b61021b6103783660046114de565b6108f0565b61021b61038b3660046114b4565b61097c565b61021b61039e3660046114b4565b610989565b6103ab610996565b604080519586526020860194909452928401919091526060830152608082015260a0016101ff565b61023360075481565b610233600c81565b6102336103f2366004611535565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ab61042b36600461151a565b6109b5565b600061043d338484610b26565b5060015b92915050565b6000610451610be8565b905090565b60006001600160a01b03841633146104e3576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e15760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ee848484610bff565b5060015b9392505050565b6105056012600661157e565b61051090600a611687565b81565b61051f6012600661157e565b61052a90600a611687565b610510906103e8611696565b60006104f2338484610d0b565b6000546001600160a01b0316331461056d5760405162461bcd60e51b81526004016104d8906116b5565b6105796012600661157e565b61058490600a611687565b610590906103e8611696565b81610599610be8565b6105a391906116ea565b11156105e55760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d8565b6105ef8282610d92565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062b85610de9565b90509193509193565b6000600454436106449190611702565b90506000600554826106569190611702565b905080156105ef57600c5460009081906001600160a01b0316635aff34dc610683610309620186a06116ea565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190611719565b91509150600060035461070f6003548585610a50565b6107199190611702565b9050806006600082825461072d91906116ea565b9091555064e8d4a510009050826107448583611696565b61074e9190611753565b6107589190611702565b6007600082825461076991906116ea565b909155505050600584905550505050565b600061044182610f48565b6000546001600160a01b031633146107af5760405162461bcd60e51b81526004016104d8906116b5565b6107b96000610f76565b565b6000806000806006546107cc610fc6565b6107d691906116ea565b93506107f26107ed6000546001600160a01b031690565b610de9565b6107fc90846116ea565b600954909350610814906001600160a01b0316610de9565b61081e90846116ea565b600a54909350610836906001600160a01b0316610de9565b61084090846116ea565b600b54909350610858906001600160a01b0316610de9565b61086290846116ea565b9250600083851015610882576108788585611702565b9250839050610892565b61088c8486611702565b92508490505b80156108b557806108a88464e8d4a51000611696565b6108b29190611753565b91505b5090919293565b6000546001600160a01b031633146108e65760405162461bcd60e51b81526004016104d8906116b5565b6105ef82826110b1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661093d5760405162461bcd60e51b81526004016104d89190611443565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ee9085908590610977908690611702565b610b26565b60006104f23384846108f0565b600061043d338484610bff565b60035460055460075460065460006109ac610fc6565b90509091929394565b6000546001600160a01b031633146109df5760405162461bcd60e51b81526004016104d8906116b5565b6001600160a01b038116610a445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d8565b610a4d81610f76565b50565b6000806000610a5f8686611165565b9150915081600003610a8457838181610a7a57610a7a61173d565b04925050506104f2565b838210156101c4576000610a998787876111b2565b9050600080610aa98585856111cd565b9150915081600003610ad157868181610ac457610ac461173d565b04955050505050506104f2565b600087610adf60008a6111fe565b1690506000610aef84848461120a565b90506000610b0b838b81610b0557610b0561173d565b04611257565b9050610b178282611294565b985050505050505050506104f2565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b705760405162461bcd60e51b81526004016104d89190611443565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bbb5760405162461bcd60e51b81526004016104d89190611443565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610bf2610fc6565b60035461045191906116ea565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c495760405162461bcd60e51b81526004016104d89190611443565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c945760405162461bcd60e51b81526004016104d89190611443565b506000610ca084610f48565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610cec5760405162461bcd60e51b81526004016104d89190611443565b50610cf9848360006112a0565b610d05838360016112a0565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d585760405162461bcd60e51b81526004016104d89190611443565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ee90859085906109779086906116ea565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610ddc5760405162461bcd60e51b81526004016104d89190611443565b506105ef828260016112a0565b6001600160a01b0381166000908152600860209081526040808320546002909252822054600754839264e8d4a51000929091610e259190611696565b610e2f9190611702565b610e399190611753565b9050600060045443610e4b9190611702565b9050600060055482610e5d9190611702565b600c5490915060009081906001600160a01b0316635aff34dc610e85610309620186a06116ea565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610ed7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efb9190611719565b6001600160a01b03891660009081526002602052604081205492945090925090610f26818585610a50565b610f309190611702565b9050610f3c81876116ea565b98975050505050505050565b6000610f5382610de9565b6001600160a01b03831660009081526002602052604090205461044191906116ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610fd79190611702565b9050600060055482610fe99190611702565b600c5490915060009081906001600160a01b0316635aff34dc611011610309620186a06116ea565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190611719565b91509150600060035461109d6003548585610a50565b6110a79190611702565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110fb5760405162461bcd60e51b81526004016104d89190611443565b50600061110783610f48565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111535760405162461bcd60e51b81526004016104d89190611443565b50611160838360006112a0565b505050565b60008060006111748585611434565b905060006111828686611294565b90508082106111985790819003925090506111ab565b60016111a483836111fe565b0393509150505b9250929050565b600081806111c2576111c261173d565b838509949350505050565b6000808284106111e357508390508183036111f6565b600185036111f185856111fe565b915091505b935093915050565b60006104f28284611702565b6000806112318361121c6000866111fe565b816112295761122961173d565b506000919050565b90508284816112425761124261173d565b0461124d8683611294565b1795945050505050565b60006001815b600881101561128d576112838261127e60026112798689611294565b6111fe565b611294565b915060010161125d565b5092915050565b60006104f28284611696565b6112a8610634565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100092916112e091611696565b6112ea9190611702565b6112f49190611753565b905080600660008282546113089190611702565b90915550506001600160a01b038416600090815260026020526040812080548392906113359084906116ea565b92505081905550806003600082825461134e91906116ea565b909155505081156113a5576001600160a01b038416600090815260026020526040812080548592906113819084906116ea565b92505081905550826003600082825461139a91906116ea565b909155506113ec9050565b6001600160a01b038416600090815260026020526040812080548592906113cd908490611702565b9250508190555082600360008282546113e69190611702565b90915550505b6001600160a01b0384166000908152600260205260409020546007546114129190611696565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b600060208083528351808285015260005b8181101561147057858101830151858201604001528201611454565b81811115611482576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146114af57600080fd5b919050565b600080604083850312156114c757600080fd5b6114d083611498565b946020939093013593505050565b6000806000606084860312156114f357600080fd5b6114fc84611498565b925061150a60208501611498565b9150604084013590509250925092565b60006020828403121561152c57600080fd5b6104f282611498565b6000806040838503121561154857600080fd5b61155183611498565b915061155f60208401611498565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561159b5761159b611568565b019392505050565b600181815b808511156115de5781600019048211156115c4576115c4611568565b808516156115d157918102915b93841c93908002906115a8565b509250929050565b6000826115f557506001610441565b8161160257506000610441565b816001811461161857600281146116225761163e565b6001915050610441565b60ff84111561163357611633611568565b50506001821b610441565b5060208310610133831016604e8410600b8410161715611661575081810a610441565b61166b83836115a3565b806000190482111561167f5761167f611568565b029392505050565b60006104f260ff8416836115e6565b60008160001904831182151516156116b0576116b0611568565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156116fd576116fd611568565b500190565b60008282101561171457611714611568565b500390565b6000806040838503121561172c57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261177057634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ad64b8e60c467fe8be30c92d417fa370323209b6869eb09201f0295c8a412b5664736f6c634300080e0033";

export class CompoundExpReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundExpReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpReward {
    return super.attach(address) as CompoundExpReward;
  }
  connect(signer: Signer): CompoundExpReward__factory {
    return super.connect(signer) as CompoundExpReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpRewardInterface {
    return new utils.Interface(_abi) as CompoundExpRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpReward {
    return new Contract(address, _abi, signerOrProvider) as CompoundExpReward;
  }
}

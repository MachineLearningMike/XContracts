/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundExpReward,
  CompoundExpRewardInterface,
} from "../CompoundExpReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022a5380380620022a58339810160408190526200003491620007b8565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007f9565b620000ee90600a6200091e565b6200014b565b5062000a3c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200092f565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000366565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f89162000987565b620002049190620009a9565b620002109190620009d9565b90506200022660065482620004d460201b60201c565b6006556001600160a01b0384166000908152600260205260408120805483929062000253908490620009fc565b9250508190555080600360008282546200026e9190620009fc565b90915550508115620002cb576001600160a01b03841660009081526002602052604081208054859290620002a4908490620009fc565b925050819055508260036000828254620002bf9190620009fc565b909155506200031c9050565b6001600160a01b038416600090815260026020526040902054620002f09084620004d4565b6001600160a01b038516600090815260026020526040902055600354620003189084620004d4565b6003555b6001600160a01b03841660009081526002602052604090205460075462000344919062000987565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060045443620003789190620009a9565b90506000600554826200038c9190620009a9565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003c1610309620186a0620009fc565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801562000414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043a919062000a17565b9150915060006003546200045d6003548585620004fd60201b62000a531760201c565b620004699190620009a9565b905080600660008282546200047f9190620009fc565b9250508190555064e8d4a51000620004a964e8d4a510008585620004fd60201b62000a531760201c565b620004b59190620009a9565b60076000828254620004c89190620009fc565b90915550505050505050565b600081831115620004f357620004eb8284620009a9565b9050620004f7565b5060005b92915050565b6000806200050d85858562000545565b905060006200051e8686866200063b565b11156200053b576200053281600162000659565b9150506200053e565b90505b9392505050565b6000808062000555868662000667565b91509150816000036200057f57838181620005745762000574620009c3565b04925050506200053e565b8382101562000636576000620005978787876200063b565b9050600080620005a9858585620006bb565b9150915081600003620005d657868181620005c857620005c8620009c3565b04955050505050506200053e565b600087620005e58282620006f1565b1690506000620005f7848484620006ff565b9050600062000618838b81620006115762000611620009c3565b0462000756565b90506200062682826200079b565b985050505050505050506200053e565b600080fd5b600081806200064e576200064e620009c3565b838509949350505050565b60006200053e8284620009fc565b60008080620006778585620007a9565b905060006200068786866200079b565b90508082106200069f579081900392509050620006b4565b6001620006ad8383620006f1565b0393509150505b9250929050565b600080828410620006d35750839050818303620006e9565b6000198501620006e48585620006f1565b915091505b935093915050565b60006200053e8284620009a9565b6000806200072b83620007138382620006f1565b81620007235762000723620009c3565b506000919050565b90508284816200073f576200073f620009c3565b046200074c86836200079b565b1795945050505050565b60006001815b6008811015620007945762000789826200078360026200077d83896200079b565b620006f1565b6200079b565b91506001016200075c565b5092915050565b60006200053e828462000987565b60006000198284099392505050565b600060208284031215620007cb57600080fd5b81516001600160a01b03811681146200053e57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008195762000819620007e3565b019392505050565b600181815b8085111562000862578160001904821115620008465762000846620007e3565b808516156200085457918102915b93841c939080029062000826565b509250929050565b6000826200087b57506001620004f7565b816200088a57506000620004f7565b8160018114620008a35760028114620008ae57620008ce565b6001915050620004f7565b60ff841115620008c257620008c2620007e3565b50506001821b620004f7565b5060208310610133831016604e8410600b8410161715620008f3575081810a620004f7565b620008ff838362000821565b8060001904821115620009165762000916620007e3565b029392505050565b60006200053e60ff8416836200086a565b600060208083528351808285015260005b818110156200095e5785810183015185820160400152820162000940565b8181111562000971576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009a457620009a4620007e3565b500290565b600082821015620009be57620009be620007e3565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009f757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000a125762000a12620007e3565b500190565b6000806040838503121562000a2b57600080fd5b505080516020909101519092909150565b6118598062000a4c6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103d3578063db1d0fd5146103dc578063dd62ed3e146103e4578063f2fde38b1461041d57600080fd5b8063a457c2d71461037d578063a9059cbb14610390578063bdfeb1e5146103a357600080fd5b80638da5cb5b116100d35780638da5cb5b1461031c57806395d89b41146103375780639dc29fac14610357578063a150da2a1461036a57600080fd5b806370a08231146102f9578063715018a61461030c578063739572891461031457600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102ad57806357627e93146102e057806366666aa9146102e85780636863909e146102f157600080fd5b806332cb6b0c1461027d578063395093511461028557806340c10f191461029857600080fd5b806323b872dd116101a257806323b872dd146102415780632e0f2625146102545780632ff2e9dc1461026e578063313ce5671461027657600080fd5b806306fdde03146101c9578063095ea7b31461020857806318160ddd1461022b575b600080fd5b60408051808201909152601181527010dbdb5c1bdd5b99115e1c14995dd85c99607a1b60208201525b6040516101ff91906114f1565b60405180910390f35b61021b610216366004611562565b610430565b60405190151581526020016101ff565b610233610447565b6040519081526020016101ff565b61021b61024f36600461158c565b610456565b61025c601281565b60405160ff90911681526020016101ff565b6102336104f9565b601261025c565b610233610513565b61021b610293366004611562565b610535565b6102ab6102a6366004611562565b610542565b005b6102c06102bb3660046115c8565b6105f1565b6040805194855260208501939093529183015260608201526080016101ff565b610233601e81565b61023360065481565b6102ab610632565b6102336103073660046115c8565b61076e565b6102ab610779565b6102c06107af565b6000546040516001600160a01b0390911681526020016101ff565b6040805180820190915260048152634345525760e01b60208201526101f2565b6102ab610365366004611562565b6108bf565b61021b61037836600461158c565b6108f3565b61021b61038b366004611562565b61097f565b61021b61039e366004611562565b61098c565b6103ab610999565b604080519586526020860194909452928401919091526060830152608082015260a0016101ff565b61023360075481565b610233600c81565b6102336103f23660046115e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102ab61042b3660046115c8565b6109b8565b600061043d338484610a91565b5060015b92915050565b6000610451610b53565b905090565b60006001600160a01b03841633146104e3576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104e15760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104ee848484610b6a565b5060015b9392505050565b6105056012600661162c565b61051090600a611735565b81565b61051f6012600661162c565b61052a90600a611735565b61051090600a611744565b60006104f2338484610c76565b6000546001600160a01b0316331461056c5760405162461bcd60e51b81526004016104d890611763565b6105786012600661162c565b61058390600a611735565b61058e90600a611744565b81610597610b53565b6105a19190611798565b11156105e35760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d8565b6105ed8282610cfd565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062985610d54565b90509193509193565b60006004544361064291906117b0565b905060006005548261065491906117b0565b905080156105ed576005829055600c5460009081906001600160a01b0316635aff34dc610686610309620186a0611798565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc91906117c7565b9150915060006003546107126003548585610a53565b61071c91906117b0565b905080600660008282546107309190611798565b9091555064e8d4a510009050610747818585610a53565b61075191906117b0565b600760008282546107629190611798565b90915550505050505050565b600061044182610ef2565b6000546001600160a01b031633146107a35760405162461bcd60e51b81526004016104d890611763565b6107ad6000610f20565b565b6000806000806006546107c0610f70565b6107ca9190611798565b935060006107e86107e36000546001600160a01b031690565b610d54565b90506107f48185611798565b60095490945061080c906001600160a01b0316610d54565b90506108188185611798565b600a54909450610830906001600160a01b0316610d54565b905061083c8185611798565b600b54909450610854906001600160a01b0316610d54565b90506108608185611798565b93508385101561087b5761087485856117b0565b9250610888565b61088584866117b0565b92505b84848110156108945750835b80156108b757806108aa8564e8d4a51000611744565b6108b49190611801565b92505b505090919293565b6000546001600160a01b031633146108e95760405162461bcd60e51b81526004016104d890611763565b6105ed828261105b565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109405760405162461bcd60e51b81526004016104d891906114f1565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ee908590859061097a9086906117b0565b610a91565b60006104f23384846108f3565b600061043d338484610b6a565b60035460055460075460065460006109af610f70565b90509091929394565b6000546001600160a01b031633146109e25760405162461bcd60e51b81526004016104d890611763565b6001600160a01b038116610a475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d8565b610a5081610f20565b50565b600080610a6185858561110f565b90506000610a708686866111e5565b1115610a8957610a81816001611200565b9150506104f2565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610adb5760405162461bcd60e51b81526004016104d891906114f1565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b265760405162461bcd60e51b81526004016104d891906114f1565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b5d610f70565b6003546104519190611798565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bb45760405162461bcd60e51b81526004016104d891906114f1565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bff5760405162461bcd60e51b81526004016104d891906114f1565b506000610c0b84610ef2565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c575760405162461bcd60e51b81526004016104d891906114f1565b50610c648483600061120c565b610c708383600161120c565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610cc35760405162461bcd60e51b81526004016104d891906114f1565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104ee908590859061097a908690611798565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d475760405162461bcd60e51b81526004016104d891906114f1565b506105ed8282600161120c565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610d9657506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610dce91611744565b610dd891906117b0565b610de29190611801565b9050600060045443610df491906117b0565b9050600060055482610e0691906117b0565b600c5490915060009081906001600160a01b0316635aff34dc610e2e610309620186a0611798565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea491906117c7565b6001600160a01b038a1660009081526002602052604081205492945090925090610ecf818585610a53565b610ed991906117b0565b9050610ee58187611798565b9998505050505050505050565b6000610efd82610d54565b6001600160a01b0383166000908152600260205260409020546104419190611798565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610f8191906117b0565b9050600060055482610f9391906117b0565b600c5490915060009081906001600160a01b0316635aff34dc610fbb610309620186a0611798565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103191906117c7565b9150915060006003546110476003548585610a53565b61105191906117b0565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110a55760405162461bcd60e51b81526004016104d891906114f1565b5060006110b183610ef2565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110fd5760405162461bcd60e51b81526004016104d891906114f1565b5061110a8383600061120c565b505050565b600080600061111e868661139e565b915091508160000361114357838181611139576111396117eb565b04925050506104f2565b838210156101c45760006111588787876111e5565b90506000806111688585856113eb565b915091508160000361119057868181611183576111836117eb565b04955050505050506104f2565b60008761119e60008a61141c565b16905060006111ae848484611428565b905060006111ca838b816111c4576111c46117eb565b04611475565b90506111d682826114b2565b985050505050505050506104f2565b600081806111f5576111f56117eb565b838509949350505050565b60006104f28284611798565b611214610632565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a51000929161124c91611744565b61125691906117b0565b6112609190611801565b905061126e600654826114be565b6006556001600160a01b03841660009081526002602052604081208054839290611299908490611798565b9250508190555080600360008282546112b29190611798565b90915550508115611309576001600160a01b038416600090815260026020526040812080548592906112e5908490611798565b9250508190555082600360008282546112fe9190611798565b909155506113569050565b6001600160a01b03841660009081526002602052604090205461132c90846114be565b6001600160a01b03851660009081526002602052604090205560035461135290846114be565b6003555b6001600160a01b03841660009081526002602052604090205460075461137c9190611744565b6001600160a01b03909416600090815260086020526040902093909355505050565b60008060006113ad85856114e2565b905060006113bb86866114b2565b90508082106113d15790819003925090506113e4565b60016113dd838361141c565b0393509150505b9250929050565b6000808284106114015750839050818303611414565b6001850361140f858561141c565b915091505b935093915050565b60006104f282846117b0565b60008061144f8361143a60008661141c565b81611447576114476117eb565b506000919050565b9050828481611460576114606117eb565b0461146b86836114b2565b1795945050505050565b60006001815b60088110156114ab576114a18261149c600261149786896114b2565b61141c565b6114b2565b915060010161147b565b5092915050565b60006104f28284611744565b6000818311156114d9576114d282846117b0565b9050610441565b50600092915050565b60006000198284099392505050565b600060208083528351808285015260005b8181101561151e57858101830151858201604001528201611502565b81811115611530576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461155d57600080fd5b919050565b6000806040838503121561157557600080fd5b61157e83611546565b946020939093013593505050565b6000806000606084860312156115a157600080fd5b6115aa84611546565b92506115b860208501611546565b9150604084013590509250925092565b6000602082840312156115da57600080fd5b6104f282611546565b600080604083850312156115f657600080fd5b6115ff83611546565b915061160d60208401611546565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561164957611649611616565b019392505050565b600181815b8085111561168c57816000190482111561167257611672611616565b8085161561167f57918102915b93841c9390800290611656565b509250929050565b6000826116a357506001610441565b816116b057506000610441565b81600181146116c657600281146116d0576116ec565b6001915050610441565b60ff8411156116e1576116e1611616565b50506001821b610441565b5060208310610133831016604e8410600b841016171561170f575081810a610441565b6117198383611651565b806000190482111561172d5761172d611616565b029392505050565b60006104f260ff841683611694565b600081600019048311821515161561175e5761175e611616565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156117ab576117ab611616565b500190565b6000828210156117c2576117c2611616565b500390565b600080604083850312156117da57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261181e57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122036361a4af70b348ece004afed2875411e03e74b89d41d0461eb27ca42eafe66e64736f6c634300080e0033";

export class CompoundExpReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpReward> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundExpReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpReward {
    return super.attach(address) as CompoundExpReward;
  }
  connect(signer: Signer): CompoundExpReward__factory {
    return super.connect(signer) as CompoundExpReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpRewardInterface {
    return new utils.Interface(_abi) as CompoundExpRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpReward {
    return new Contract(address, _abi, signerOrProvider) as CompoundExpReward;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleInterestN,
  SimpleInterestNInterface,
} from "../SimpleInterestN";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestNet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnDone",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200255d3803806200255d8339810160408190526200003491620009ac565b6200003f33620000fb565b600d80546001600160a01b0383166001600160a01b031991821617909155436004556006805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600780548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600880549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126008620009ed565b620000ee90600a62000b12565b6200014b565b5062000c0d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000b23565b60405180910390fd5b50620001b082826001620001b4565b5050565b6001600160a01b0383166000908152600260205260408120546009805491929091620001e290849062000b7b565b9091555050600c5460045460009190620001fd904362000b7b565b62000209919062000b7b565b600d5490915060009081906001600160a01b0316635aff34dc62000233610309620186a062000b95565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000286573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ac919062000bb0565b6001600160a01b03881660009081526005602052604090206001015460045492945090925090620002de904362000b7b565b620002ea919062000b7b565b600d5490935060009081906001600160a01b0316635aff34dc62000314610309620186a062000b95565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa15801562000367573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038d919062000bb0565b91509150620003f2620003af600a5486866200059360201b620009921760201c565b620003ec600260008c6001600160a01b03166001600160a01b031681526020019081526020016000205485856200069060201b62000a681760201c565b620006d6565b600a5560045462000404904362000b7b565b600c5550600093506200041c925086915050620006ff565b9050801562000470576001600160a01b038416600090815260056020526040812080548392906200044f90849062000b95565b9250508190555080600b60008282546200046a919062000b95565b90915550505b6004546200047f904362000b7b565b6001600160a01b0385166000908152600560205260409020600101558115620004f3576001600160a01b03841660009081526002602052604081208054859290620004cc90849062000b95565b925050819055508260036000828254620004e7919062000b95565b909155506200053e9050565b6001600160a01b038416600090815260026020526040812080548592906200051d90849062000b7b565b92505081905550826003600082825462000538919062000b7b565b90915550505b6001600160a01b03841660009081526002602052604081205460098054919283926200056c90849062000b95565b9250508190555080600a600082825462000587919062000b95565b90915550505050505050565b60008080620005a386866200082f565b9150915081600003620005cd57838181620005c257620005c262000bd5565b049250505062000689565b8382101562000684576000620005e587878762000883565b9050600080620005f7858585620008a1565b9150915081600003620006245786818162000616576200061662000bd5565b049550505050505062000689565b600087620006338282620008d7565b169050600062000645848484620008e5565b9050600062000666838b816200065f576200065f62000bd5565b046200093c565b905062000674828262000981565b9850505050505050505062000689565b600080fd5b9392505050565b600080620006a085858562000593565b90506000620006b186868662000883565b1115620006ce57620006c58160016200098f565b91505062000689565b949350505050565b600081831115620006f557620006ed828462000b7b565b9050620006f9565b5060005b92915050565b6001600160a01b0381166000908152600560205260408120600101546004548291906200072d904362000b7b565b62000739919062000b7b565b600d5490915060009081906001600160a01b0316635aff34dc62000763610309620186a062000b95565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015620007b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007dc919062000bb0565b6001600160a01b03871660009081526002602090815260408220549395509193509190620008199082908690869062000a6862000690821b17901c565b62000825919062000b7b565b9695505050505050565b600080806200083f85856200099d565b905060006200084f868662000981565b9050808210620008675790819003925090506200087c565b6001620008758383620008d7565b0393509150505b9250929050565b6000818062000896576200089662000bd5565b838509949350505050565b600080828410620008b95750839050818303620008cf565b6000198501620008ca8585620008d7565b915091505b935093915050565b600062000689828462000b7b565b6000806200091183620008f98382620008d7565b8162000909576200090962000bd5565b506000919050565b905082848162000925576200092562000bd5565b0462000932868362000981565b1795945050505050565b60006001815b60088110156200097a576200096f8262000969600262000963838962000981565b620008d7565b62000981565b915060010162000942565b5092915050565b600062000689828462000beb565b600062000689828462000b95565b60006000198284099392505050565b600060208284031215620009bf57600080fd5b81516001600160a01b03811681146200068957600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000a0d5762000a0d620009d7565b019392505050565b600181815b8085111562000a5657816000190482111562000a3a5762000a3a620009d7565b8085161562000a4857918102915b93841c939080029062000a1a565b509250929050565b60008262000a6f57506001620006f9565b8162000a7e57506000620006f9565b816001811462000a97576002811462000aa25762000ac2565b6001915050620006f9565b60ff84111562000ab65762000ab6620009d7565b50506001821b620006f9565b5060208310610133831016604e8410600b841016171562000ae7575081810a620006f9565b62000af3838362000a15565b806000190482111562000b0a5762000b0a620009d7565b029392505050565b60006200068960ff84168362000a5e565b600060208083528351808285015260005b8181101562000b525785810183015185820160400152820162000b34565b8181111562000b65576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000b905762000b90620009d7565b500390565b6000821982111562000bab5762000bab620009d7565b500190565b6000806040838503121562000bc457600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000c085762000c08620009d7565b500290565b6119408062000c1d6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a150da2a1161007c578063a150da2a14610301578063a457c2d714610314578063a9059cbb14610327578063bdfeb1e51461033a578063dd62ed3e1461036f578063f2fde38b146103a857600080fd5b806370a082311461026f578063715018a614610282578063739572891461028a5780638da5cb5b146102b257806395d89b41146102cd5780639dc29fac146102ee57600080fd5b80632ff2e9dc116101155780632ff2e9dc146101f5578063313ce567146101fd57806332cb6b0c14610204578063395093511461020c57806340c10f191461021f578063416ae7681461023457600080fd5b806306fdde0314610152578063095ea7b31461018f57806318160ddd146101b257806323b872dd146101c85780632e0f2625146101db575b600080fd5b60408051808201909152600f81526e29b4b6b83632a4b73a32b932b9ba2760891b60208201525b60405161018691906115d8565b60405180910390f35b6101a261019d366004611649565b6103bb565b6040519015158152602001610186565b6101ba6103d2565b604051908152602001610186565b6101a26101d6366004611673565b6103e2565b6101e3601281565b60405160ff9091168152602001610186565b6101ba610485565b60126101e3565b6101ba61049f565b6101a261021a366004611649565b6104c2565b61023261022d366004611649565b6104cf565b005b6102476102423660046116af565b610580565b604080519586526020860194909452928401919091526060830152608082015260a001610186565b6101ba61027d3660046116af565b6105e4565b610232610602565b610292610638565b604080519485526020850193909352918301526060820152608001610186565b6000546040516001600160a01b039091168152602001610186565b60408051808201909152600581526429a2a92ba760d91b6020820152610179565b6102326102fc366004611649565b6107e7565b6101a261030f366004611673565b61081b565b6101a2610322366004611649565b6108a7565b6101a2610335366004611649565b6108b4565b6103426108c1565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610186565b6101ba61037d3660046116ca565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102326103b63660046116af565b6108f7565b60006103c8338484610aa6565b5060015b92915050565b60006103dd60035490565b905090565b60006001600160a01b038416331461046f576001600160a01b03841660009081526001602090815260408083203384529091529020548281101561046d5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b61047a848484610b68565b5060015b9392505050565b61049160126008611713565b61049c90600a61181c565b81565b6104ab60126008611713565b6104b690600a61181c565b61049c906103e861182b565b600061047e338484610c82565b6000546001600160a01b031633146104f95760405162461bcd60e51b81526004016104649061184a565b61050560126008611713565b61051090600a61181c565b61051c906103e861182b565b8161052660035490565b610530919061187f565b11156105725760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610464565b61057c8282610d09565b5050565b6001600160a01b0381166000908152600260205260408120546004549091908190819081906105af9043611897565b92506105ba86610d60565b6001600160a01b039096166000908152600560205260409020600101549496939592949293915050565b6001600160a01b0381166000908152600260205260408120546103cc565b6000546001600160a01b0316331461062c5760405162461bcd60e51b81526004016104649061184a565b6106366000610e73565b565b600080600080610646610ec3565b935061066261065d6000546001600160a01b031690565b610d60565b61066c908461187f565b600654909350610684906001600160a01b0316610d60565b61068e908461187f565b6007549093506106a6906001600160a01b0316610d60565b6106b0908461187f565b6008549093506106c8906001600160a01b0316610d60565b6106d2908461187f565b9250600083851015610730576106e88585611897565b925083905061072b6040518060400160405280601a81526020017f636865636b202d2d2d206d617267696e616c2067726561746572000000000000815250610fa5565b6107b8565b61073a8486611897565b9250849050838511156107855761072b6040518060400160405280601c81526020017f636865636b202d2d2d20636f6c6c656374697665206772656174657200000000815250610fa5565b6107b86040518060400160405280601281526020017118da1958dac80b4b4b4818985b185b98d95960721b815250610fa5565b80156107e057806107d38469d3c21bcecceda100000061182b565b6107dd91906118c4565b91505b5090919293565b6000546001600160a01b031633146108115760405162461bcd60e51b81526004016104649061184a565b61057c8282610fe8565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108685760405162461bcd60e51b815260040161046491906115d8565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047a90859085906108a2908690611897565b610aa6565b600061047e33848461081b565b60006103c8338484610b68565b600354600954600a54600454600090819081906108de9043611897565b92506108e8610ec3565b9150600b549050909192939495565b6000546001600160a01b031633146109215760405162461bcd60e51b81526004016104649061184a565b6001600160a01b0381166109865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610464565b61098f81610e73565b50565b60008060006109a186866110aa565b91509150816000036109c6578381816109bc576109bc6118ae565b049250505061047e565b8382101561014d5760006109db8787876110f7565b90506000806109eb858585611112565b9150915081600003610a1357868181610a0657610a066118ae565b049550505050505061047e565b600087610a2160008a611143565b1690506000610a3184848461114f565b90506000610a4d838b81610a4757610a476118ae565b0461119c565b9050610a5982826111d9565b9850505050505050505061047e565b600080610a76858585610992565b90506000610a858686866110f7565b1115610a9e57610a968160016111e5565b91505061047e565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610af05760405162461bcd60e51b815260040161046491906115d8565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b3b5760405162461bcd60e51b815260040161046491906115d8565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bb25760405162461bcd60e51b815260040161046491906115d8565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bfd5760405162461bcd60e51b815260040161046491906115d8565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c635760405162461bcd60e51b815260040161046491906115d8565b50610c70848360006111f1565b610c7c838360016111f1565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610ccf5760405162461bcd60e51b815260040161046491906115d8565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047a90859085906108a290869061187f565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d535760405162461bcd60e51b815260040161046491906115d8565b5061057c828260016111f1565b6001600160a01b038116600090815260056020526040812060010154600454829190610d8c9043611897565b610d969190611897565b600d5490915060009081906001600160a01b0316635aff34dc610dbe610309620186a061187f565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3491906118e6565b6001600160a01b03871660009081526002602052604081205492945090925090610e5f818585610a68565b610e699190611897565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600c5460045443610ed79190611897565b610ee19190611897565b600d5490915060009081906001600160a01b0316635aff34dc610f09610309620186a061187f565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f91906118e6565b91509150600954610f93600a548484610a68565b610f9d9190611897565b935050505090565b61098f81604051602401610fb991906115d8565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261157b565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110325760405162461bcd60e51b815260040161046491906115d8565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906110985760405162461bcd60e51b815260040161046491906115d8565b506110a5838360006111f1565b505050565b60008060006110b98585611584565b905060006110c786866111d9565b90508082106110dd5790819003925090506110f0565b60016110e98383611143565b0393509150505b9250929050565b60008180611107576111076118ae565b838509949350505050565b600080828410611128575083905081830361113b565b600185036111368585611143565b915091505b935093915050565b600061047e8284611897565b60008061117683611161600086611143565b8161116e5761116e6118ae565b506000919050565b9050828481611187576111876118ae565b0461119286836111d9565b1795945050505050565b60006001815b60088110156111d2576111c8826111c360026111be86896111d9565b611143565b6111d9565b91506001016111a2565b5092915050565b600061047e828461182b565b600061047e828461187f565b6001600160a01b038316600090815260026020526040812054600980549192909161121d908490611897565b9091555050600c54600454600091906112369043611897565b6112409190611897565b600d5490915060009081906001600160a01b0316635aff34dc611268610309620186a061187f565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa1580156112ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112de91906118e6565b6001600160a01b0388166000908152600560205260409020600101546004549294509092509061130e9043611897565b6113189190611897565b600d5490935060009081906001600160a01b0316635aff34dc611340610309620186a061187f565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101889052600a60648201526084016040805180830381865afa158015611392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b691906118e6565b915091506113f36113ca600a548686610992565b6001600160a01b038a166000908152600260205260409020546113ee908585610a68565b611593565b600a556004546114039043611897565b600c819055505050505050600061141984610d60565b90508015611468576001600160a01b0384166000908152600560205260408120805483929061144990849061187f565b9250508190555080600b6000828254611462919061187f565b90915550505b6004546114759043611897565b6001600160a01b03851660009081526005602052604090206001015581156114e3576001600160a01b038416600090815260026020526040812080548592906114bf90849061187f565b9250508190555082600360008282546114d8919061187f565b9091555061152a9050565b6001600160a01b0384166000908152600260205260408120805485929061150b908490611897565b9250508190555082600360008282546115249190611897565b90915550505b6001600160a01b038416600090815260026020526040812054600980549192839261155690849061187f565b9250508190555080600a600082825461156f919061187f565b90915550505050505050565b61098f816115b7565b60006000198284099392505050565b6000818311156115ae576115a78284611897565b90506103cc565b50600092915050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060208083528351808285015260005b81811015611605578581018301518582016040015282016115e9565b81811115611617576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461164457600080fd5b919050565b6000806040838503121561165c57600080fd5b6116658361162d565b946020939093013593505050565b60008060006060848603121561168857600080fd5b6116918461162d565b925061169f6020850161162d565b9150604084013590509250925092565b6000602082840312156116c157600080fd5b61047e8261162d565b600080604083850312156116dd57600080fd5b6116e68361162d565b91506116f46020840161162d565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115611730576117306116fd565b019392505050565b600181815b80851115611773578160001904821115611759576117596116fd565b8085161561176657918102915b93841c939080029061173d565b509250929050565b60008261178a575060016103cc565b81611797575060006103cc565b81600181146117ad57600281146117b7576117d3565b60019150506103cc565b60ff8411156117c8576117c86116fd565b50506001821b6103cc565b5060208310610133831016604e8410600b84101617156117f6575081810a6103cc565b6118008383611738565b8060001904821115611814576118146116fd565b029392505050565b600061047e60ff84168361177b565b6000816000190483118215151615611845576118456116fd565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611892576118926116fd565b500190565b6000828210156118a9576118a96116fd565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826118e157634e487b7160e01b600052601260045260246000fd5b500490565b600080604083850312156118f957600080fd5b50508051602090910151909290915056fea26469706673582212207258bbd380e0c62d83d2f5f00a356ca35c5330625dff1e99757bbf2d277fb6f364736f6c634300080e0033";

export class SimpleInterestN__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleInterestN> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleInterestN>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleInterestN {
    return super.attach(address) as SimpleInterestN;
  }
  connect(signer: Signer): SimpleInterestN__factory {
    return super.connect(signer) as SimpleInterestN__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleInterestNInterface {
    return new utils.Interface(_abi) as SimpleInterestNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleInterestN {
    return new Contract(address, _abi, signerOrProvider) as SimpleInterestN;
  }
}

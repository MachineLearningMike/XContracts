/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundExpBurnNovel,
  CompoundExpBurnNovelInterface,
} from "../CompoundExpBurnNovel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestNet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnDone",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_VIRTUAL",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nowBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023a2380380620023a28339810160408190526200003491620008d7565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556006805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600780548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600880549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e16012600662000918565b620000ee90600a62000a3d565b6200014b565b5062000b38565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000a4e565b60405180910390fd5b50620001b082826001620001b4565b5050565b6001600160a01b0383166000908152600260205260408120546009805491929091620001e290849062000aa6565b90915550506001600160a01b038316600090815260056020526040812060010154600a8054919290916200021890849062000aa6565b90915550600090506200022b84620004c2565b90508015620002c2576001600160a01b038416600090815260026020526040812080548392906200025e90849062000aa6565b92505081905550806003600082825462000279919062000aa6565b9250508190555080600b600082825462000294919062000ac0565b9091555050600454620002a8904362000aa6565b6001600160a01b0385166000908152600560205260409020555b81156200031a576001600160a01b03841660009081526002602052604081208054859290620002f390849062000ac0565b9250508190555082600360008282546200030e919062000ac0565b90915550620003659050565b6001600160a01b038416600090815260026020526040812080548592906200034490849062000aa6565b9250508190555082600360008282546200035f919062000aa6565b90915550505b6001600160a01b03808516600090815260056020526040812054600c549092829116635aff34dc620186a06200039e6103098262000aa6565b6040516001600160e01b031960e085901b1681526004810192909252602482015260448101869052600a60648201526084016040805180830381865afa158015620003ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000413919062000adb565b91509150600062000456600260008a6001600160a01b03166001600160a01b031681526020019081526020016000205484846200060e60201b620009541760201c565b6001600160a01b038916600090815260056020908152604080832060010184905560029091528120546009805493945090929091906200049890849062000ac0565b9250508190555080600a6000828254620004b3919062000ac0565b90915550505050505050505050565b6001600160a01b038116600090815260056020526040812054600454829190620004ed904362000aa6565b620004f9919062000aa6565b600c5490915060009081906001600160a01b0316635aff34dc62000523610309620186a062000aa6565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa15801562000576573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200059c919062000adb565b915091506000620005df60026000886001600160a01b03166001600160a01b031681526020019081526020016000205484846200070b60201b62000a2a1760201c565b6001600160a01b03871660009081526002602052604090205462000604919062000aa6565b9695505050505050565b600080806200061e868662000751565b915091508160000362000648578381816200063d576200063d62000b00565b049250505062000704565b83821015620006ff57600062000660878787620007a5565b905060008062000672858585620007c3565b91509150816000036200069f5786818162000691576200069162000b00565b049550505050505062000704565b600087620006ae8282620007f9565b1690506000620006c084848462000810565b90506000620006e1838b81620006da57620006da62000b00565b0462000867565b9050620006ef8282620008ac565b9850505050505050505062000704565b600080fd5b9392505050565b6000806200071b8585856200060e565b905060006200072c868686620007a5565b1115620007495762000740816001620008ba565b91505062000704565b949350505050565b60008080620007618585620008c8565b90506000620007718686620008ac565b9050808210620007895790819003925090506200079e565b6001620007978383620007f9565b0393509150505b9250929050565b60008180620007b857620007b862000b00565b838509949350505050565b600080828410620007db5750839050818303620007f1565b6000198501620007ec8585620007f9565b915091505b935093915050565b600062000807828462000aa6565b90505b92915050565b6000806200083c83620008248382620007f9565b8162000834576200083462000b00565b506000919050565b905082848162000850576200085062000b00565b046200085d8683620008ac565b1795945050505050565b60006001815b6008811015620008a5576200089a826200089460026200088e8389620008ac565b620007f9565b620008ac565b91506001016200086d565b5092915050565b600062000807828462000b16565b600062000807828462000ac0565b60006000198284099392505050565b600060208284031215620008ea57600080fd5b81516001600160a01b03811681146200070457600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111562000938576200093862000902565b019392505050565b600181815b808511156200098157816000190482111562000965576200096562000902565b808516156200097357918102915b93841c939080029062000945565b509250929050565b6000826200099a575060016200080a565b81620009a9575060006200080a565b8160018114620009c25760028114620009cd57620009ed565b60019150506200080a565b60ff841115620009e157620009e162000902565b50506001821b6200080a565b5060208310610133831016604e8410600b841016171562000a12575081810a6200080a565b62000a1e838362000940565b806000190482111562000a355762000a3562000902565b029392505050565b60006200080760ff84168362000989565b600060208083528351808285015260005b8181101562000a7d5785810183015185820160400152820162000a5f565b8181111562000a90576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101562000abb5762000abb62000902565b500390565b6000821982111562000ad65762000ad662000902565b500190565b6000806040838503121562000aef57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b600081600019048311821515161562000b335762000b3362000902565b500290565b61185a8062000b486000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a150da2a1161007c578063a150da2a14610306578063a457c2d714610319578063a9059cbb1461032c578063bdfeb1e51461033f578063dd62ed3e14610374578063f2fde38b146103ad57600080fd5b806370a0823114610274578063715018a614610287578063739572891461028f5780638da5cb5b146102b757806395d89b41146102d25780639dc29fac146102f357600080fd5b80632ff2e9dc116101155780632ff2e9dc146101fa578063313ce5671461020257806332cb6b0c14610209578063395093511461021157806340c10f1914610224578063416ae7681461023957600080fd5b806306fdde0314610152578063095ea7b31461019457806318160ddd146101b757806323b872dd146101cd5780632e0f2625146101e0575b600080fd5b60408051808201909152601481527310dbdb5c1bdd5b99115e1c109d5c9b939bdd995b60621b60208201525b60405161018b91906114f2565b60405180910390f35b6101a76101a2366004611563565b6103c0565b604051901515815260200161018b565b6101bf6103d7565b60405190815260200161018b565b6101a76101db36600461158d565b6103e6565b6101e8601281565b60405160ff909116815260200161018b565b6101bf610489565b60126101e8565b6101bf6104a3565b6101a761021f366004611563565b6104c6565b610237610232366004611563565b6104d3565b005b61024c6102473660046115c9565b610583565b604080519586526020860194909452928401919091526060830152608082015260a00161018b565b6101bf6102823660046115c9565b6105f1565b6102376105fc565b610297610632565b60408051948552602085019390935291830152606082015260800161018b565b6000546040516001600160a01b03909116815260200161018b565b60408051808201909152600581526421a2a1272760d91b602082015261017e565b610237610301366004611563565b6107a9565b6101a761031436600461158d565b6107dd565b6101a7610327366004611563565b610869565b6101a761033a366004611563565b610876565b610347610883565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161018b565b6101bf6103823660046115e4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102376103bb3660046115c9565b6108b9565b60006103cd338484610a68565b5060015b92915050565b60006103e1610b2a565b905090565b60006001600160a01b0384163314610473576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104715760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b61047e848484610b41565b5060015b9392505050565b6104956012600661162d565b6104a090600a611736565b81565b6104af6012600661162d565b6104ba90600a611736565b6104a0906103e8611745565b6000610482338484610c4d565b6000546001600160a01b031633146104fd5760405162461bcd60e51b815260040161046890611764565b6105096012600661162d565b61051490600a611736565b610520906103e8611745565b81610529610b2a565b6105339190611799565b11156105755760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610468565b61057f8282610cd4565b5050565b6001600160a01b038116600090815260026020908152604080832054600590925282206001015460045491929091819081906105bf90436117b1565b92506105ca86610d2b565b6001600160a01b039096166000908152600560205260409020549496939592949293915050565b60006103d182610e54565b6000546001600160a01b031633146106265760405162461bcd60e51b815260040161046890611764565b6106306000610e82565b565b600080600080610640610ed2565b935061065c6106576000546001600160a01b031690565b610d2b565b6106669084611799565b60065490935061067e906001600160a01b0316610d2b565b6106889084611799565b6007549093506106a0906001600160a01b0316610d2b565b6106aa9084611799565b6008549093506106c2906001600160a01b0316610d2b565b6106cc9084611799565b925060008385101561072a576106e285856117b1565b92508390506107256040518060400160405280601a81526020017f636865636b202d2d2d206d617267696e616c2067726561746572000000000000815250610fa7565b61077a565b61073484866117b1565b925084935084905061077a6040518060400160405280601c81526020017f636865636b202d2d2d20636f6c6c656374697665206772656174657200000000815250610fa7565b80156107a257806107958469d3c21bcecceda1000000611745565b61079f91906117de565b91505b5090919293565b6000546001600160a01b031633146107d35760405162461bcd60e51b815260040161046890611764565b61057f8282610fea565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661082a5760405162461bcd60e51b815260040161046891906114f2565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047e90859085906108649086906117b1565b610a68565b60006104823384846107dd565b60006103cd338484610b41565b600354600954600a54600454600090819081906108a090436117b1565b92506108aa610ed2565b9150600b549050909192939495565b6000546001600160a01b031633146108e35760405162461bcd60e51b815260040161046890611764565b6001600160a01b0381166109485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610468565b61095181610e82565b50565b6000806000610963868661109e565b91509150816000036109885783818161097e5761097e6117c8565b0492505050610482565b8382101561014d57600061099d8787876110eb565b90506000806109ad858585611106565b91509150816000036109d5578681816109c8576109c86117c8565b0495505050505050610482565b6000876109e360008a611137565b16905060006109f3848484611143565b90506000610a0f838b81610a0957610a096117c8565b04611190565b9050610a1b82826111cd565b98505050505050505050610482565b600080610a38858585610954565b90506000610a478686866110eb565b1115610a6057610a588160016111d9565b915050610482565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ab25760405162461bcd60e51b815260040161046891906114f2565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610afd5760405162461bcd60e51b815260040161046891906114f2565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610b34610ed2565b6003546103e191906117b1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610b8b5760405162461bcd60e51b815260040161046891906114f2565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bd65760405162461bcd60e51b815260040161046891906114f2565b506000610be284610e54565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610c2e5760405162461bcd60e51b815260040161046891906114f2565b50610c3b848360006111e5565b610c47838360016111e5565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610c9a5760405162461bcd60e51b815260040161046891906114f2565b506001600160a01b0380851660009081526001602090815260408083209387168352929052205461047e9085908590610864908690611799565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d1e5760405162461bcd60e51b815260040161046891906114f2565b5061057f828260016111e5565b6001600160a01b038116600090815260056020526040812054600454829190610d5490436117b1565b610d5e91906117b1565b600c5490915060009081906001600160a01b0316635aff34dc610d86610309620186a06117b1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611800565b6001600160a01b03871660009081526002602052604081205492945090925090610e27908484610a2a565b6001600160a01b038716600090815260026020526040902054610e4a91906117b1565b9695505050505050565b6000610e5f82610d2b565b6001600160a01b0383166000908152600260205260409020546103d191906117b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610ee391906117b1565b600c5490915060009081906001600160a01b0316635aff34dc610f0b610309620186a06117b1565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052600a60648201526084016040805180830381865afa158015610f5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f819190611800565b91509150610f92600a548383610954565b600954610f9f91906117b1565b935050505090565b61095181604051602401610fbb91906114f2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526114b9565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166110345760405162461bcd60e51b815260040161046891906114f2565b50600061104083610e54565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b8152509061108c5760405162461bcd60e51b815260040161046891906114f2565b50611099838360006111e5565b505050565b60008060006110ad85856114c2565b905060006110bb86866111cd565b90508082106110d15790819003925090506110e4565b60016110dd8383611137565b0393509150505b9250929050565b600081806110fb576110fb6117c8565b838509949350505050565b60008082841061111c575083905081830361112f565b6001850361112a8585611137565b915091505b935093915050565b600061048282846117b1565b60008061116a83611155600086611137565b81611162576111626117c8565b506000919050565b905082848161117b5761117b6117c8565b0461118686836111cd565b1795945050505050565b60006001815b60088110156111c6576111bc826111b760026111b286896111cd565b611137565b6111cd565b9150600101611196565b5092915050565b60006104828284611745565b60006104828284611799565b6001600160a01b03831660009081526002602052604081205460098054919290916112119084906117b1565b90915550506001600160a01b038316600090815260056020526040812060010154600a8054919290916112459084906117b1565b909155506000905061125684610d2b565b905080156112e4576001600160a01b038416600090815260026020526040812080548392906112869084906117b1565b92505081905550806003600082825461129f91906117b1565b9250508190555080600b60008282546112b89190611799565b90915550506004546112ca90436117b1565b6001600160a01b0385166000908152600560205260409020555b8115611336576001600160a01b03841660009081526002602052604081208054859290611312908490611799565b92505081905550826003600082825461132b9190611799565b9091555061137d9050565b6001600160a01b0384166000908152600260205260408120805485929061135e9084906117b1565b92505081905550826003600082825461137791906117b1565b90915550505b6001600160a01b03808516600090815260056020526040812054600c549092829116635aff34dc620186a06113b4610309826117b1565b6040516001600160e01b031960e085901b1681526004810192909252602482015260448101869052600a60648201526084016040805180830381865afa158015611402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114269190611800565b6001600160a01b03891660009081526002602052604081205492945090925090611451908484610954565b6001600160a01b03891660009081526005602090815260408083206001018490556002909152812054600980549394509092909190611491908490611799565b9250508190555080600a60008282546114aa9190611799565b90915550505050505050505050565b610951816114d1565b60006000198284099392505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600060208083528351808285015260005b8181101561151f57858101830151858201604001528201611503565b81811115611531576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461155e57600080fd5b919050565b6000806040838503121561157657600080fd5b61157f83611547565b946020939093013593505050565b6000806000606084860312156115a257600080fd5b6115ab84611547565b92506115b960208501611547565b9150604084013590509250925092565b6000602082840312156115db57600080fd5b61048282611547565b600080604083850312156115f757600080fd5b61160083611547565b915061160e60208401611547565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561164a5761164a611617565b019392505050565b600181815b8085111561168d57816000190482111561167357611673611617565b8085161561168057918102915b93841c9390800290611657565b509250929050565b6000826116a4575060016103d1565b816116b1575060006103d1565b81600181146116c757600281146116d1576116ed565b60019150506103d1565b60ff8411156116e2576116e2611617565b50506001821b6103d1565b5060208310610133831016604e8410600b8410161715611710575081810a6103d1565b61171a8383611652565b806000190482111561172e5761172e611617565b029392505050565b600061048260ff841683611695565b600081600019048311821515161561175f5761175f611617565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156117ac576117ac611617565b500190565b6000828210156117c3576117c3611617565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826117fb57634e487b7160e01b600052601260045260246000fd5b500490565b6000806040838503121561181357600080fd5b50508051602090910151909290915056fea264697066735822122066dc54cdeb520cce1d04a299a1359af977eaba02653cda155bd67416b638bf0764736f6c634300080e0033";

export class CompoundExpBurnNovel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpBurnNovel> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<CompoundExpBurnNovel>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpBurnNovel {
    return super.attach(address) as CompoundExpBurnNovel;
  }
  connect(signer: Signer): CompoundExpBurnNovel__factory {
    return super.connect(signer) as CompoundExpBurnNovel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpBurnNovelInterface {
    return new utils.Interface(_abi) as CompoundExpBurnNovelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpBurnNovel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompoundExpBurnNovel;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DistTypeC, DistTypeCInterface } from "../DistTypeC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001996380380620019968339810160408190526200003491620003f5565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e1601260066200043d565b620000ee90600a62000564565b6200014b565b5062000647565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000575565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f891620005cd565b620002049190620005ef565b62000210919062000609565b90508060066000828254620002269190620005ef565b90915550506001600160a01b03841660009081526008602052604081206001018054839290620002589084906200062c565b90915550508115620002b5576001600160a01b038416600090815260026020526040812080548592906200028e9084906200062c565b925050819055508260036000828254620002a991906200062c565b90915550620003009050565b6001600160a01b03841660009081526002602052604081208054859290620002df908490620005ef565b925050819055508260036000828254620002fa9190620005ef565b90915550505b6001600160a01b038416600090815260026020526040902054600754620003289190620005cd565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200035c9190620005ef565b9050600060055482620003709190620005ef565b90508015620001b05760058290556003546000906200039183600c620005cd565b6200039d9190620005cd565b90508060066000828254620003b391906200062c565b9091555050600354620003cc8264e8d4a51000620005cd565b620003d8919062000609565b60076000828254620003eb91906200062c565b9091555050505050565b6000602082840312156200040857600080fd5b81516001600160a01b03811681146200042057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200045d576200045d62000427565b019392505050565b600181815b80851115620004a65781600019048211156200048a576200048a62000427565b808516156200049857918102915b93841c93908002906200046a565b509250929050565b600082620004bf575060016200055e565b81620004ce575060006200055e565b8160018114620004e75760028114620004f25762000512565b60019150506200055e565b60ff84111562000506576200050662000427565b50506001821b6200055e565b5060208310610133831016604e8410600b841016171562000537575081810a6200055e565b62000543838362000465565b80600019048211156200055a576200055a62000427565b0290505b92915050565b60006200042060ff841683620004ae565b600060208083528351808285015260005b81811015620005a45785810183015185820160400152820162000586565b81811115620005b7576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620005ea57620005ea62000427565b500290565b60008282101562000604576200060462000427565b500390565b6000826200062757634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000642576200064262000427565b500190565b61133f80620006576000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103cb578063db1d0fd5146103d4578063dd62ed3e146103dc578063f2fde38b1461041557600080fd5b8063a457c2d714610375578063a9059cbb14610388578063bdfeb1e51461039b57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031457806395d89b411461032f5780639dc29fac1461034f578063a150da2a1461036257600080fd5b806370a08231146102f1578063715018a614610304578063739572891461030c57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a557806357627e93146102d857806366666aa9146102e05780636863909e146102e957600080fd5b806332cb6b0c14610275578063395093511461027d57806340c10f191461029057600080fd5b806323b872dd116101a257806323b872dd146102395780632e0f26251461024c5780632ff2e9dc14610266578063313ce5671461026e57600080fd5b806306fdde03146101c9578063095ea7b31461020057806318160ddd14610223575b600080fd5b60408051808201909152600981526844697374547970654360b81b60208201525b6040516101f79190611011565b60405180910390f35b61021361020e366004611082565b610428565b60405190151581526020016101f7565b61022b61043f565b6040519081526020016101f7565b6102136102473660046110ac565b61044f565b610254601281565b60405160ff90911681526020016101f7565b61022b6104f1565b6012610254565b61022b61050b565b61021361028b366004611082565b61052d565b6102a361029e366004611082565b610541565b005b6102b86102b33660046110e8565b6105f1565b6040805194855260208501939093529183015260608201526080016101f7565b61022b601e81565b61022b60065481565b6102a3610632565b61022b6102ff3660046110e8565b6106cc565b6102a36106ea565b6102b8610720565b6000546040516001600160a01b0390911681526020016101f7565b60408051808201909152600481526354595f4360e01b60208201526101ea565b6102a361035d366004611082565b610830565b6102136103703660046110ac565b610864565b610213610383366004611082565b6108f0565b610213610396366004611082565b6108fd565b6103a361090a565b604080519586526020860194909452928401919091526060830152608082015260a0016101f7565b61022b60075481565b61022b600c81565b61022b6103ea366004611103565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a36104233660046110e8565b610929565b60006104353384846109c4565b5060015b92915050565b600061044a60035490565b905090565b60006001600160a01b03841633146104dc576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104da5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e7848484610a86565b5060019392505050565b6104fd6012600661114c565b61050890600a611255565b81565b6105176012600661114c565b61052290600a611255565b61050890600a611264565b600061053a338484610ba0565b9392505050565b6000546001600160a01b0316331461056b5760405162461bcd60e51b81526004016104d190611283565b6105776012600661114c565b61058290600a611255565b61058d90600a611264565b8161059760035490565b6105a191906112b8565b11156105e35760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d1565b6105ed8282610c27565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062985610c7e565b90509193509193565b60006004544361064291906112d0565b905060006005548261065491906112d0565b905080156105ed57600582905560035460009061067283600c611264565b61067c9190611264565b9050806006600082825461069091906112b8565b90915550506003546106a78264e8d4a51000611264565b6106b191906112e7565b600760008282546106c291906112b8565b9091555050505050565b6001600160a01b038116600090815260026020526040812054610439565b6000546001600160a01b031633146107145760405162461bcd60e51b81526004016104d190611283565b61071e6000610d47565b565b600080600080600654610731610d97565b61073b91906112b8565b935060006107596107546000546001600160a01b031690565b610c7e565b905061076581856112b8565b60095490945061077d906001600160a01b0316610c7e565b905061078981856112b8565b600a549094506107a1906001600160a01b0316610c7e565b90506107ad81856112b8565b600b549094506107c5906001600160a01b0316610c7e565b90506107d181856112b8565b9350838510156107ec576107e585856112d0565b92506107f9565b6107f684866112d0565b92505b84848110156108055750835b8015610828578061081b8564e8d4a51000611264565b61082591906112e7565b92505b505090919293565b6000546001600160a01b0316331461085a5760405162461bcd60e51b81526004016104d190611283565b6105ed8282610dd1565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108b15760405162461bcd60e51b81526004016104d19190611011565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e790859085906108eb9086906112d0565b6109c4565b600061053a338484610864565b6000610435338484610a86565b6003546005546007546006546000610920610d97565b90509091929394565b6000546001600160a01b031633146109535760405162461bcd60e51b81526004016104d190611283565b6001600160a01b0381166109b85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d1565b6109c181610d47565b50565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610a0e5760405162461bcd60e51b81526004016104d19190611011565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610a595760405162461bcd60e51b81526004016104d19190611011565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610ad05760405162461bcd60e51b81526004016104d19190611011565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610b1b5760405162461bcd60e51b81526004016104d19190611011565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610b815760405162461bcd60e51b81526004016104d19190611011565b50610b8e84836000610e93565b610b9a83836001610e93565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610bed5760405162461bcd60e51b81526004016104d19190611011565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e790859085906108eb9086906112b8565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c715760405162461bcd60e51b81526004016104d19190611011565b506105ed82826001610e93565b6001600160a01b0381166000908152600860209081526040808320546002909252822054600754839264e8d4a51000929091610cba9190611264565b610cc491906112d0565b610cce91906112e7565b9050600060045443610ce091906112d0565b9050600060055482610cf291906112d0565b6003546001600160a01b03871660009081526002602052604081205492935091610d1d84600c611264565b610d279190611264565b610d3191906112e7565b9050610d3d81856112b8565b9695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060045443610da891906112d0565b9050600060055482610dba91906112d0565b90506000610dc982600c611264565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e1b5760405162461bcd60e51b81526004016104d19190611011565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610e815760405162461bcd60e51b81526004016104d19190611011565b50610e8e83836000610e93565b505050565b610e9b610632565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ed391611264565b610edd91906112d0565b610ee791906112e7565b90508060066000828254610efb91906112d0565b90915550506001600160a01b03841660009081526008602052604081206001018054839290610f2b9084906112b8565b90915550508115610f82576001600160a01b03841660009081526002602052604081208054859290610f5e9084906112b8565b925050819055508260036000828254610f7791906112b8565b90915550610fc99050565b6001600160a01b03841660009081526002602052604081208054859290610faa9084906112d0565b925050819055508260036000828254610fc391906112d0565b90915550505b6001600160a01b038416600090815260026020526040902054600754610fef9190611264565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060208083528351808285015260005b8181101561103e57858101830151858201604001528201611022565b81811115611050576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461107d57600080fd5b919050565b6000806040838503121561109557600080fd5b61109e83611066565b946020939093013593505050565b6000806000606084860312156110c157600080fd5b6110ca84611066565b92506110d860208501611066565b9150604084013590509250925092565b6000602082840312156110fa57600080fd5b61053a82611066565b6000806040838503121561111657600080fd5b61111f83611066565b915061112d60208401611066565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561116957611169611136565b019392505050565b600181815b808511156111ac57816000190482111561119257611192611136565b8085161561119f57918102915b93841c9390800290611176565b509250929050565b6000826111c357506001610439565b816111d057506000610439565b81600181146111e657600281146111f05761120c565b6001915050610439565b60ff84111561120157611201611136565b50506001821b610439565b5060208310610133831016604e8410600b841016171561122f575081810a610439565b6112398383611171565b806000190482111561124d5761124d611136565b029392505050565b600061053a60ff8416836111b4565b600081600019048311821515161561127e5761127e611136565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112cb576112cb611136565b500190565b6000828210156112e2576112e2611136565b500390565b60008261130457634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122068f86294e4fc14e9104069c34b3bbad9f382443b7d3076ce00e54b2690764db364736f6c634300080e0033";

export class DistTypeC__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DistTypeC> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<DistTypeC>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): DistTypeC {
    return super.attach(address) as DistTypeC;
  }
  connect(signer: Signer): DistTypeC__factory {
    return super.connect(signer) as DistTypeC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistTypeCInterface {
    return new utils.Interface(_abi) as DistTypeCInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DistTypeC {
    return new Contract(address, _abi, signerOrProvider) as DistTypeC;
  }
}

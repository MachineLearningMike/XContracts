/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleExpBurn, SimpleExpBurnInterface } from "../SimpleExpBurn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200222338038062002223833981016040819052620000349162000780565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007c1565b620000ee90600a620008e6565b6200014b565b5062000a04565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b8152600401620001989190620008f7565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f8916200094f565b62000204919062000971565b620002109190620009a1565b9050806006600082825462000226919062000971565b90915550506001600160a01b0384166000908152600860205260408120600101805483929062000258908490620009c4565b90915550508115620002b5576001600160a01b038416600090815260026020526040812080548592906200028e908490620009c4565b925050819055508260036000828254620002a99190620009c4565b90915550620003009050565b6001600160a01b03841660009081526002602052604081208054859290620002df90849062000971565b925050819055508260036000828254620002fa919062000971565b90915550505b6001600160a01b0384166000908152600260205260409020546007546200032891906200094f565b6001600160a01b03909416600090815260086020526040902093909355505050565b6000600454436200035c919062000971565b905060006005548262000370919062000971565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003a5610309620186a062000971565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015620003f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200041e9190620009df565b9150915060006200043e6003548484620004b760201b62000a6a1760201c565b6003546200044d919062000971565b90508060066000828254620004639190620009c4565b925050819055506200048764e8d4a510008484620005b460201b62000b401760201c565b620004989064e8d4a5100062000971565b60076000828254620004ab9190620009c4565b90915550505050505050565b60008080620004c78686620005fa565b9150915081600003620004f157838181620004e657620004e66200098b565b0492505050620005ad565b83821015620005a8576000620005098787876200064e565b90506000806200051b8585856200066c565b915091508160000362000548578681816200053a576200053a6200098b565b0495505050505050620005ad565b600087620005578282620006a2565b169050600062000569848484620006b9565b905060006200058a838b816200058357620005836200098b565b0462000710565b905062000598828262000755565b98505050505050505050620005ad565b600080fd5b9392505050565b600080620005c4858585620004b7565b90506000620005d58686866200064e565b1115620005f257620005e981600162000763565b915050620005ad565b949350505050565b600080806200060a858562000771565b905060006200061a868662000755565b90508082106200063257908190039250905062000647565b6001620006408383620006a2565b0393509150505b9250929050565b600081806200066157620006616200098b565b838509949350505050565b6000808284106200068457508390508183036200069a565b6000198501620006958585620006a2565b915091505b935093915050565b6000620006b0828462000971565b90505b92915050565b600080620006e583620006cd8382620006a2565b81620006dd57620006dd6200098b565b506000919050565b9050828481620006f957620006f96200098b565b0462000706868362000755565b1795945050505050565b60006001815b60088110156200074e5762000743826200073d600262000737838962000755565b620006a2565b62000755565b915060010162000716565b5092915050565b6000620006b082846200094f565b6000620006b08284620009c4565b60006000198284099392505050565b6000602082840312156200079357600080fd5b81516001600160a01b0381168114620005ad57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620007e157620007e1620007ab565b019392505050565b600181815b808511156200082a5781600019048211156200080e576200080e620007ab565b808516156200081c57918102915b93841c9390800290620007ee565b509250929050565b6000826200084357506001620006b3565b816200085257506000620006b3565b81600181146200086b5760028114620008765762000896565b6001915050620006b3565b60ff8411156200088a576200088a620007ab565b50506001821b620006b3565b5060208310610133831016604e8410600b8410161715620008bb575081810a620006b3565b620008c78383620007e9565b8060001904821115620008de57620008de620007ab565b029392505050565b6000620006b060ff84168362000832565b600060208083528351808285015260005b81811015620009265785810183015185820160400152820162000908565b8181111562000939576000604083870101525b50601f01601f1916929092016040019392505050565b60008160001904831182151516156200096c576200096c620007ab565b500290565b600082821015620009865762000986620007ab565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009bf57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620009da57620009da620007ab565b500190565b60008060408385031215620009f357600080fd5b505080516020909101519092909150565b61180f8062000a146000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103cf578063db1d0fd5146103d8578063dd62ed3e146103e0578063f2fde38b1461041957600080fd5b8063a457c2d714610379578063a9059cbb1461038c578063bdfeb1e51461039f57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031857806395d89b41146103335780639dc29fac14610353578063a150da2a1461036657600080fd5b806370a08231146102f5578063715018a614610308578063739572891461031057600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a957806357627e93146102dc57806366666aa9146102e45780636863909e146102ed57600080fd5b806332cb6b0c14610279578063395093511461028157806340c10f191461029457600080fd5b806323b872dd116101a257806323b872dd1461023d5780632e0f2625146102505780632ff2e9dc1461026a578063313ce5671461027257600080fd5b806306fdde03146101c9578063095ea7b31461020457806318160ddd14610227575b600080fd5b60408051808201909152600d81526c29b4b6b83632a2bc38213ab93760991b60208201525b6040516101fb91906114a7565b60405180910390f35b610217610212366004611518565b61042c565b60405190151581526020016101fb565b61022f610443565b6040519081526020016101fb565b61021761024b366004611542565b610453565b610258601281565b60405160ff90911681526020016101fb565b61022f6104f6565b6012610258565b61022f610510565b61021761028f366004611518565b610533565b6102a76102a2366004611518565b610540565b005b6102bc6102b736600461157e565b6105f1565b6040805194855260208501939093529183015260608201526080016101fb565b61022f601e81565b61022f60065481565b6102a7610632565b61022f61030336600461157e565b610772565b6102a7610790565b6102bc6107c6565b6000546040516001600160a01b0390911681526020016101fb565b60408051808201909152600481526329a2a12760e11b60208201526101ee565b6102a7610361366004611518565b6108d6565b610217610374366004611542565b61090a565b610217610387366004611518565b610996565b61021761039a366004611518565b6109a3565b6103a76109b0565b604080519586526020860194909452928401919091526060830152608082015260a0016101fb565b61022f60075481565b61022f600c81565b61022f6103ee366004611599565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a761042736600461157e565b6109cf565b6000610439338484610b7e565b5060015b92915050565b600061044e60035490565b905090565b60006001600160a01b03841633146104e0576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104de5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104eb848484610c40565b5060015b9392505050565b610502601260066115e2565b61050d90600a6116eb565b81565b61051c601260066115e2565b61052790600a6116eb565b61050d906103e86116fa565b60006104ef338484610d5a565b6000546001600160a01b0316331461056a5760405162461bcd60e51b81526004016104d590611719565b610576601260066115e2565b61058190600a6116eb565b61058d906103e86116fa565b8161059760035490565b6105a1919061174e565b11156105e35760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d5565b6105ed8282610de1565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062985610e38565b90509193509193565b6000600454436106429190611766565b90506000600554826106549190611766565b905080156105ed576005829055600c5460009081906001600160a01b0316635aff34dc610686610309620186a0611766565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc919061177d565b91509150600061070f6003548484610a6a565b60035461071c9190611766565b90508060066000828254610730919061174e565b90915550610746905064e8d4a510008484610b40565b6107559064e8d4a51000611766565b60076000828254610766919061174e565b90915550505050505050565b6001600160a01b03811660009081526002602052604081205461043d565b6000546001600160a01b031633146107ba5760405162461bcd60e51b81526004016104d590611719565b6107c46000610fd6565b565b6000806000806006546107d7611026565b6107e1919061174e565b935060006107ff6107fa6000546001600160a01b031690565b610e38565b905061080b818561174e565b600954909450610823906001600160a01b0316610e38565b905061082f818561174e565b600a54909450610847906001600160a01b0316610e38565b9050610853818561174e565b600b5490945061086b906001600160a01b0316610e38565b9050610877818561174e565b9350838510156108925761088b8585611766565b925061089f565b61089c8486611766565b92505b84848110156108ab5750835b80156108ce57806108c18564e8d4a510006116fa565b6108cb91906117b7565b92505b505090919293565b6000546001600160a01b031633146109005760405162461bcd60e51b81526004016104d590611719565b6105ed8282611111565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166109575760405162461bcd60e51b81526004016104d591906114a7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104eb9085908590610991908690611766565b610b7e565b60006104ef33848461090a565b6000610439338484610c40565b60035460055460075460065460006109c6611026565b90509091929394565b6000546001600160a01b031633146109f95760405162461bcd60e51b81526004016104d590611719565b6001600160a01b038116610a5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d5565b610a6781610fd6565b50565b6000806000610a7986866111d3565b9150915081600003610a9e57838181610a9457610a946117a1565b04925050506104ef565b838210156101c4576000610ab3878787611220565b9050600080610ac385858561123b565b9150915081600003610aeb57868181610ade57610ade6117a1565b04955050505050506104ef565b600087610af960008a61126c565b1690506000610b09848484611278565b90506000610b25838b81610b1f57610b1f6117a1565b046112c5565b9050610b318282611302565b985050505050505050506104ef565b600080610b4e858585610a6a565b90506000610b5d868686611220565b1115610b7657610b6e81600161130e565b9150506104ef565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bc85760405162461bcd60e51b81526004016104d591906114a7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610c135760405162461bcd60e51b81526004016104d591906114a7565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c8a5760405162461bcd60e51b81526004016104d591906114a7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cd55760405162461bcd60e51b81526004016104d591906114a7565b506001600160a01b0383166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d3b5760405162461bcd60e51b81526004016104d591906114a7565b50610d488483600061131a565b610d548383600161131a565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610da75760405162461bcd60e51b81526004016104d591906114a7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104eb908590859061099190869061174e565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e2b5760405162461bcd60e51b81526004016104d591906114a7565b506105ed8282600161131a565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e7a57506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610eb2916116fa565b610ebc9190611766565b610ec691906117b7565b9050600060045443610ed89190611766565b9050600060055482610eea9190611766565b600c5490915060009081906001600160a01b0316635aff34dc610f12610309620186a061174e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f88919061177d565b6001600160a01b038a1660009081526002602052604081205492945090925090610fb3818585610b40565b610fbd9190611766565b9050610fc9818761174e565b9998505050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600454436110379190611766565b90506000600554826110499190611766565b600c5490915060009081906001600160a01b0316635aff34dc611071610309620186a061174e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e7919061177d565b9150915060006003546110fd6003548585610a6a565b6111079190611766565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661115b5760405162461bcd60e51b81526004016104d591906114a7565b506001600160a01b0382166000908152600260205260408120549050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111c15760405162461bcd60e51b81526004016104d591906114a7565b506111ce8383600061131a565b505050565b60008060006111e28585611498565b905060006111f08686611302565b9050808210611206579081900392509050611219565b6001611212838361126c565b0393509150505b9250929050565b60008180611230576112306117a1565b838509949350505050565b6000808284106112515750839050818303611264565b6001850361125f858561126c565b915091505b935093915050565b60006104ef8284611766565b60008061129f8361128a60008661126c565b81611297576112976117a1565b506000919050565b90508284816112b0576112b06117a1565b046112bb8683611302565b1795945050505050565b60006001815b60088110156112fb576112f1826112ec60026112e78689611302565b61126c565b611302565b91506001016112cb565b5092915050565b60006104ef82846116fa565b60006104ef828461174e565b611322610632565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a51000929161135a916116fa565b6113649190611766565b61136e91906117b7565b905080600660008282546113829190611766565b90915550506001600160a01b038416600090815260086020526040812060010180548392906113b290849061174e565b90915550508115611409576001600160a01b038416600090815260026020526040812080548592906113e590849061174e565b9250508190555082600360008282546113fe919061174e565b909155506114509050565b6001600160a01b03841660009081526002602052604081208054859290611431908490611766565b92505081905550826003600082825461144a9190611766565b90915550505b6001600160a01b03841660009081526002602052604090205460075461147691906116fa565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b600060208083528351808285015260005b818110156114d4578581018301518582016040015282016114b8565b818111156114e6576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461151357600080fd5b919050565b6000806040838503121561152b57600080fd5b611534836114fc565b946020939093013593505050565b60008060006060848603121561155757600080fd5b611560846114fc565b925061156e602085016114fc565b9150604084013590509250925092565b60006020828403121561159057600080fd5b6104ef826114fc565b600080604083850312156115ac57600080fd5b6115b5836114fc565b91506115c3602084016114fc565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156115ff576115ff6115cc565b019392505050565b600181815b80851115611642578160001904821115611628576116286115cc565b8085161561163557918102915b93841c939080029061160c565b509250929050565b6000826116595750600161043d565b816116665750600061043d565b816001811461167c5760028114611686576116a2565b600191505061043d565b60ff841115611697576116976115cc565b50506001821b61043d565b5060208310610133831016604e8410600b84101617156116c5575081810a61043d565b6116cf8383611607565b80600019048211156116e3576116e36115cc565b029392505050565b60006104ef60ff84168361164a565b6000816000190483118215151615611714576117146115cc565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611761576117616115cc565b500190565b600082821015611778576117786115cc565b500390565b6000806040838503121561179057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b6000826117d457634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122020ee71f530190ddf14a434fb657b1ca680eb9331bfb1a603d4e5cdeedf16a8f664736f6c634300080e0033";

export class SimpleExpBurn__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleExpBurn> {
    return super.deploy(
      _analyticMath,
      overrides || {}
    ) as Promise<SimpleExpBurn>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): SimpleExpBurn {
    return super.attach(address) as SimpleExpBurn;
  }
  connect(signer: Signer): SimpleExpBurn__factory {
    return super.connect(signer) as SimpleExpBurn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleExpBurnInterface {
    return new utils.Interface(_abi) as SimpleExpBurnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleExpBurn {
    return new Contract(address, _abi, signerOrProvider) as SimpleExpBurn;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DistTypeF, DistTypeFInterface } from "../DistTypeF";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002277380380620022778339810160408190526200003491620007a4565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007e5565b620000ee90600a6200090a565b6200014b565b5062000a28565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b81526004016200019891906200091b565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be6200034e565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f89162000973565b62000204919062000995565b620002109190620009c5565b90506200022660065482620004bb60201b60201c565b6006556001600160a01b0384166000908152600860205260408120600101805483929062000256908490620009e8565b90915550508115620002b3576001600160a01b038416600090815260026020526040812080548592906200028c908490620009e8565b925050819055508260036000828254620002a79190620009e8565b90915550620003049050565b6001600160a01b038416600090815260026020526040902054620002d89084620004bb565b6001600160a01b038516600090815260026020526040902055600354620003009084620004bb565b6003555b6001600160a01b0384166000908152600260205260409020546007546200032c919062000973565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006004544362000360919062000995565b905060006005548262000374919062000995565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003a9610309620186a062000995565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015620003fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000422919062000a03565b915091506000620004426003548484620004e460201b62000a4f1760201c565b60035462000451919062000995565b90508060066000828254620004679190620009e8565b925050819055506200048b64e8d4a510008484620005e160201b62000b251760201c565b6200049c9064e8d4a5100062000995565b60076000828254620004af9190620009e8565b90915550505050505050565b600081831115620004da57620004d2828462000995565b9050620004de565b5060005b92915050565b60008080620004f4868662000627565b91509150816000036200051e57838181620005135762000513620009af565b0492505050620005da565b83821015620005d5576000620005368787876200067b565b90506000806200054885858562000699565b91509150816000036200057557868181620005675762000567620009af565b0495505050505050620005da565b600087620005848282620006cf565b169050600062000596848484620006dd565b90506000620005b7838b81620005b057620005b0620009af565b0462000734565b9050620005c5828262000779565b98505050505050505050620005da565b600080fd5b9392505050565b600080620005f1858585620004e4565b90506000620006028686866200067b565b11156200061f576200061681600162000787565b915050620005da565b949350505050565b6000808062000637858562000795565b9050600062000647868662000779565b90508082106200065f57908190039250905062000674565b60016200066d8383620006cf565b0393509150505b9250929050565b600081806200068e576200068e620009af565b838509949350505050565b600080828410620006b15750839050818303620006c7565b6000198501620006c28585620006cf565b915091505b935093915050565b6000620005da828462000995565b6000806200070983620006f18382620006cf565b81620007015762000701620009af565b506000919050565b90508284816200071d576200071d620009af565b046200072a868362000779565b1795945050505050565b60006001815b6008811015620007725762000767826200076160026200075b838962000779565b620006cf565b62000779565b91506001016200073a565b5092915050565b6000620005da828462000973565b6000620005da8284620009e8565b60006000198284099392505050565b600060208284031215620007b757600080fd5b81516001600160a01b0381168114620005da57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff03821115620008055762000805620007cf565b019392505050565b600181815b808511156200084e578160001904821115620008325762000832620007cf565b808516156200084057918102915b93841c939080029062000812565b509250929050565b6000826200086757506001620004de565b816200087657506000620004de565b81600181146200088f57600281146200089a57620008ba565b6001915050620004de565b60ff841115620008ae57620008ae620007cf565b50506001821b620004de565b5060208310610133831016604e8410600b8410161715620008df575081810a620004de565b620008eb83836200080d565b8060001904821115620009025762000902620007cf565b029392505050565b6000620005da60ff84168362000856565b600060208083528351808285015260005b818110156200094a578581018301518582016040015282016200092c565b818111156200095d576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009905762000990620007cf565b500290565b600082821015620009aa57620009aa620007cf565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009e357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115620009fe57620009fe620007cf565b500190565b6000806040838503121562000a1757600080fd5b505080516020909101519092909150565b61183f8062000a386000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103cb578063db1d0fd5146103d4578063dd62ed3e146103dc578063f2fde38b1461041557600080fd5b8063a457c2d714610375578063a9059cbb14610388578063bdfeb1e51461039b57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031457806395d89b411461032f5780639dc29fac1461034f578063a150da2a1461036257600080fd5b806370a08231146102f1578063715018a614610304578063739572891461030c57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a557806357627e93146102d857806366666aa9146102e05780636863909e146102e957600080fd5b806332cb6b0c14610275578063395093511461027d57806340c10f191461029057600080fd5b806323b872dd116101a257806323b872dd146102395780632e0f26251461024c5780632ff2e9dc14610266578063313ce5671461026e57600080fd5b806306fdde03146101c9578063095ea7b31461020057806318160ddd14610223575b600080fd5b6040805180820190915260098152682234b9ba2a3cb832a360b91b60208201525b6040516101f791906114d7565b60405180910390f35b61021361020e366004611548565b610428565b60405190151581526020016101f7565b61022b61043f565b6040519081526020016101f7565b610213610247366004611572565b61044e565b610254601281565b60405160ff90911681526020016101f7565b61022b6104f1565b6012610254565b61022b61050b565b61021361028b366004611548565b61052d565b6102a361029e366004611548565b61053a565b005b6102b86102b33660046115ae565b6105e9565b6040805194855260208501939093529183015260608201526080016101f7565b61022b601e81565b61022b60065481565b6102a361062a565b61022b6102ff3660046115ae565b61076a565b6102a3610775565b6102b86107ab565b6000546040516001600160a01b0390911681526020016101f7565b6040805180820190915260048152632a2cafa360e11b60208201526101ea565b6102a361035d366004611548565b6108bb565b610213610370366004611572565b6108ef565b610213610383366004611548565b61097b565b610213610396366004611548565b610988565b6103a3610995565b604080519586526020860194909452928401919091526060830152608082015260a0016101f7565b61022b60075481565b61022b600c81565b61022b6103ea3660046115c9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a36104233660046115ae565b6109b4565b6000610435338484610b63565b5060015b92915050565b6000610449610c25565b905090565b60006001600160a01b03841633146104db576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d95760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e6848484610c3c565b5060015b9392505050565b6104fd60126006611612565b61050890600a61171b565b81565b61051760126006611612565b61052290600a61171b565b61050890600a61172a565b60006104ea338484610d48565b6000546001600160a01b031633146105645760405162461bcd60e51b81526004016104d090611749565b61057060126006611612565b61057b90600a61171b565b61058690600a61172a565b8161058f610c25565b610599919061177e565b11156105db5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104d0565b6105e58282610dcf565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062185610e26565b90509193509193565b60006004544361063a9190611796565b905060006005548261064c9190611796565b905080156105e5576005829055600c5460009081906001600160a01b0316635aff34dc61067e610309620186a0611796565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f491906117ad565b9150915060006107076003548484610a4f565b6003546107149190611796565b90508060066000828254610728919061177e565b9091555061073e905064e8d4a510008484610b25565b61074d9064e8d4a51000611796565b6007600082825461075e919061177e565b90915550505050505050565b600061043982610fc4565b6000546001600160a01b0316331461079f5760405162461bcd60e51b81526004016104d090611749565b6107a96000610ff2565b565b6000806000806006546107bc611042565b6107c6919061177e565b935060006107e46107df6000546001600160a01b031690565b610e26565b90506107f0818561177e565b600954909450610808906001600160a01b0316610e26565b9050610814818561177e565b600a5490945061082c906001600160a01b0316610e26565b9050610838818561177e565b600b54909450610850906001600160a01b0316610e26565b905061085c818561177e565b935083851015610877576108708585611796565b9250610884565b6108818486611796565b92505b84848110156108905750835b80156108b357806108a68564e8d4a5100061172a565b6108b091906117e7565b92505b505090919293565b6000546001600160a01b031633146108e55760405162461bcd60e51b81526004016104d090611749565b6105e5828261112d565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661093c5760405162461bcd60e51b81526004016104d091906114d7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e69085908590610976908690611796565b610b63565b60006104ea3384846108ef565b6000610435338484610c3c565b60035460055460075460065460006109ab611042565b90509091929394565b6000546001600160a01b031633146109de5760405162461bcd60e51b81526004016104d090611749565b6001600160a01b038116610a435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d0565b610a4c81610ff2565b50565b6000806000610a5e86866111e1565b9150915081600003610a8357838181610a7957610a796117d1565b04925050506104ea565b838210156101c4576000610a9887878761122e565b9050600080610aa8858585611249565b9150915081600003610ad057868181610ac357610ac36117d1565b04955050505050506104ea565b600087610ade60008a61127a565b1690506000610aee848484611286565b90506000610b0a838b81610b0457610b046117d1565b046112d3565b9050610b168282611310565b985050505050505050506104ea565b600080610b33858585610a4f565b90506000610b4286868661122e565b1115610b5b57610b5381600161131c565b9150506104ea565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bad5760405162461bcd60e51b81526004016104d091906114d7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf85760405162461bcd60e51b81526004016104d091906114d7565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c2f611042565b6003546104499190611796565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c865760405162461bcd60e51b81526004016104d091906114d7565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cd15760405162461bcd60e51b81526004016104d091906114d7565b506000610cdd84610fc4565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d295760405162461bcd60e51b81526004016104d091906114d7565b50610d3684836000611328565b610d4283836001611328565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d955760405162461bcd60e51b81526004016104d091906114d7565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e6908590859061097690869061177e565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e195760405162461bcd60e51b81526004016104d091906114d7565b506105e582826001611328565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e6857506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610ea09161172a565b610eaa9190611796565b610eb491906117e7565b9050600060045443610ec69190611796565b9050600060055482610ed89190611796565b600c5490915060009081906001600160a01b0316635aff34dc610f00610309620186a061177e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7691906117ad565b6001600160a01b038a1660009081526002602052604081205492945090925090610fa1818585610b25565b610fab9190611796565b9050610fb7818761177e565b9998505050505050505050565b6000610fcf82610e26565b6001600160a01b0383166000908152600260205260409020546104399190611796565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600454436110539190611796565b90506000600554826110659190611796565b600c5490915060009081906001600160a01b0316635aff34dc61108d610309620186a061177e565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110391906117ad565b9150915060006003546111196003548585610a4f565b6111239190611796565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166111775760405162461bcd60e51b81526004016104d091906114d7565b50600061118383610fc4565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111cf5760405162461bcd60e51b81526004016104d091906114d7565b506111dc83836000611328565b505050565b60008060006111f085856114a4565b905060006111fe8686611310565b9050808210611214579081900392509050611227565b6001611220838361127a565b0393509150505b9250929050565b6000818061123e5761123e6117d1565b838509949350505050565b60008082841061125f5750839050818303611272565b6001850361126d858561127a565b915091505b935093915050565b60006104ea8284611796565b6000806112ad8361129860008661127a565b816112a5576112a56117d1565b506000919050565b90508284816112be576112be6117d1565b046112c98683611310565b1795945050505050565b60006001815b6008811015611309576112ff826112fa60026112f58689611310565b61127a565b611310565b91506001016112d9565b5092915050565b60006104ea828461172a565b60006104ea828461177e565b61133061062a565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a5100092916113689161172a565b6113729190611796565b61137c91906117e7565b905061138a600654826114b3565b6006556001600160a01b038416600090815260086020526040812060010180548392906113b890849061177e565b9091555050811561140f576001600160a01b038416600090815260026020526040812080548592906113eb90849061177e565b925050819055508260036000828254611404919061177e565b9091555061145c9050565b6001600160a01b03841660009081526002602052604090205461143290846114b3565b6001600160a01b03851660009081526002602052604090205560035461145890846114b3565b6003555b6001600160a01b038416600090815260026020526040902054600754611482919061172a565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b6000818311156114ce576114c78284611796565b9050610439565b50600092915050565b600060208083528351808285015260005b81811015611504578581018301518582016040015282016114e8565b81811115611516576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461154357600080fd5b919050565b6000806040838503121561155b57600080fd5b6115648361152c565b946020939093013593505050565b60008060006060848603121561158757600080fd5b6115908461152c565b925061159e6020850161152c565b9150604084013590509250925092565b6000602082840312156115c057600080fd5b6104ea8261152c565b600080604083850312156115dc57600080fd5b6115e58361152c565b91506115f36020840161152c565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561162f5761162f6115fc565b019392505050565b600181815b80851115611672578160001904821115611658576116586115fc565b8085161561166557918102915b93841c939080029061163c565b509250929050565b60008261168957506001610439565b8161169657506000610439565b81600181146116ac57600281146116b6576116d2565b6001915050610439565b60ff8411156116c7576116c76115fc565b50506001821b610439565b5060208310610133831016604e8410600b84101617156116f5575081810a610439565b6116ff8383611637565b8060001904821115611713576117136115fc565b029392505050565b60006104ea60ff84168361167a565b6000816000190483118215151615611744576117446115fc565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611791576117916115fc565b500190565b6000828210156117a8576117a86115fc565b500390565b600080604083850312156117c057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261180457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c5ddc48f1ba69b801798831f4836b11981ee1adc3411076553a4ace55552699864736f6c634300080e0033";

export class DistTypeF__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DistTypeF> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<DistTypeF>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): DistTypeF {
    return super.attach(address) as DistTypeF;
  }
  connect(signer: Signer): DistTypeF__factory {
    return super.connect(signer) as DistTypeF__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DistTypeFInterface {
    return new utils.Interface(_abi) as DistTypeFInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DistTypeF {
    return new Contract(address, _abi, signerOrProvider) as DistTypeF;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundExpReward, CompoundExpRewardInterface } from "../CompoundExpReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "accRewardPerShare12",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "alpha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [
      {
        internalType: "uint256",
        name: "pending_collective",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_marginal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abs_error",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "error_rate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distCycle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_latestBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_accRewardPerShare12",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewordPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upadateWithTotalShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022bd380380620022bd8339810160408190526200003491620007bc565b6200003f33620000fb565b600c80546001600160a01b0383166001600160a01b031991821617909155436004556009805482167370997970c51812dc3a010c7d01b50e0d17dc79c8179055600a80548216733c44cdddb6a900fa2b585dd299e03d12fa4293bc179055600b80549091167390f79bf6eb2c4f870365e785982e1f101e93b906179055620000f4620000d36000546001600160a01b031690565b620000e160126006620007fd565b620000ee90600a62000922565b6200014b565b5062000a40565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620001a15760405162461bcd60e51b815260040162000198919062000933565b60405180910390fd5b50620001b082826001620001b4565b5050565b620001be62000366565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291620001f8916200098b565b620002049190620009ad565b620002109190620009dd565b90506200022660065482620004d360201b60201c565b6006556001600160a01b0384166000908152600260205260408120805483929062000253908490620009ad565b9250508190555080600360008282546200026e9190620009ad565b90915550508115620002cb576001600160a01b03841660009081526002602052604081208054859290620002a490849062000a00565b925050819055508260036000828254620002bf919062000a00565b909155506200031c9050565b6001600160a01b038416600090815260026020526040902054620002f09084620004d3565b6001600160a01b038516600090815260026020526040902055600354620003189084620004d3565b6003555b6001600160a01b0384166000908152600260205260409020546007546200034491906200098b565b6001600160a01b03909416600090815260086020526040902093909355505050565b600060045443620003789190620009ad565b90506000600554826200038c9190620009ad565b90508015620001b0576005829055600c5460009081906001600160a01b0316635aff34dc620003c1610309620186a0620009ad565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa15801562000414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200043a919062000a1b565b9150915060006200045a6003548484620004fc60201b62000a4e1760201c565b600354620004699190620009ad565b905080600660008282546200047f919062000a00565b92505081905550620004a364e8d4a510008484620005f960201b62000b241760201c565b620004b49064e8d4a51000620009ad565b60076000828254620004c7919062000a00565b90915550505050505050565b600081831115620004f257620004ea8284620009ad565b9050620004f6565b5060005b92915050565b600080806200050c86866200063f565b915091508160000362000536578381816200052b576200052b620009c7565b0492505050620005f2565b83821015620005ed5760006200054e87878762000693565b905060008062000560858585620006b1565b91509150816000036200058d578681816200057f576200057f620009c7565b0495505050505050620005f2565b6000876200059c8282620006e7565b1690506000620005ae848484620006f5565b90506000620005cf838b81620005c857620005c8620009c7565b046200074c565b9050620005dd828262000791565b98505050505050505050620005f2565b600080fd5b9392505050565b60008062000609858585620004fc565b905060006200061a86868662000693565b111562000637576200062e8160016200079f565b915050620005f2565b949350505050565b600080806200064f8585620007ad565b905060006200065f868662000791565b9050808210620006775790819003925090506200068c565b6001620006858383620006e7565b0393509150505b9250929050565b60008180620006a657620006a6620009c7565b838509949350505050565b600080828410620006c95750839050818303620006df565b6000198501620006da8585620006e7565b915091505b935093915050565b6000620005f28284620009ad565b6000806200072183620007098382620006e7565b81620007195762000719620009c7565b506000919050565b9050828481620007355762000735620009c7565b0462000742868362000791565b1795945050505050565b60006001815b60088110156200078a576200077f8262000779600262000773838962000791565b620006e7565b62000791565b915060010162000752565b5092915050565b6000620005f282846200098b565b6000620005f2828462000a00565b60006000198284099392505050565b600060208284031215620007cf57600080fd5b81516001600160a01b0381168114620005f257600080fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156200081d576200081d620007e7565b019392505050565b600181815b80851115620008665781600019048211156200084a576200084a620007e7565b808516156200085857918102915b93841c93908002906200082a565b509250929050565b6000826200087f57506001620004f6565b816200088e57506000620004f6565b8160018114620008a75760028114620008b257620008d2565b6001915050620004f6565b60ff841115620008c657620008c6620007e7565b50506001821b620004f6565b5060208310610133831016604e8410600b8410161715620008f7575081810a620004f6565b62000903838362000825565b80600019048211156200091a576200091a620007e7565b029392505050565b6000620005f260ff8416836200086e565b600060208083528351808285015260005b81811015620009625785810183015185820160400152820162000944565b8181111562000975576000604083870101525b50601f01601f1916929092016040019392505050565b6000816000190483118215151615620009a857620009a8620007e7565b500290565b600082821015620009c257620009c2620007e7565b500390565b634e487b7160e01b600052601260045260246000fd5b600082620009fb57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000a165762000a16620007e7565b500190565b6000806040838503121562000a2f57600080fd5b505080516020909101519092909150565b61186d8062000a506000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d1daefb411610071578063d1daefb4146103ca578063db1d0fd5146103d3578063dd62ed3e146103db578063f2fde38b1461041457600080fd5b8063a457c2d714610374578063a9059cbb14610387578063bdfeb1e51461039a57600080fd5b80638da5cb5b116100d35780638da5cb5b1461031357806395d89b411461032e5780639dc29fac1461034e578063a150da2a1461036157600080fd5b806370a08231146102f0578063715018a614610303578063739572891461030b57600080fd5b806332cb6b0c11610166578063416ae76811610140578063416ae768146102a457806357627e93146102d757806366666aa9146102df5780636863909e146102e857600080fd5b806332cb6b0c14610274578063395093511461027c57806340c10f191461028f57600080fd5b806323b872dd116101a257806323b872dd146102385780632e0f26251461024b5780632ff2e9dc14610265578063313ce5671461026d57600080fd5b806306fdde03146101c9578063095ea7b3146101ff57806318160ddd14610222575b600080fd5b6040805180820190915260088152670a086a6a8f2e0ca960c31b60208201525b6040516101f69190611505565b60405180910390f35b61021261020d366004611576565b610427565b60405190151581526020016101f6565b61022a61043e565b6040519081526020016101f6565b6102126102463660046115a0565b61044d565b610253601281565b60405160ff90911681526020016101f6565b61022a6104f0565b6012610253565b61022a61050a565b61021261028a366004611576565b61052c565b6102a261029d366004611576565b610539565b005b6102b76102b23660046115dc565b6105e8565b6040805194855260208501939093529183015260608201526080016101f6565b61022a601e81565b61022a60065481565b6102a2610629565b61022a6102fe3660046115dc565b610769565b6102a2610774565b6102b76107aa565b6000546040516001600160a01b0390911681526020016101f6565b6040805180820190915260048152630a8a0be960e31b60208201526101e9565b6102a261035c366004611576565b6108ba565b61021261036f3660046115a0565b6108ee565b610212610382366004611576565b61097a565b610212610395366004611576565b610987565b6103a2610994565b604080519586526020860194909452928401919091526060830152608082015260a0016101f6565b61022a60075481565b61022a600c81565b61022a6103e93660046115f7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102a26104223660046115dc565b6109b3565b6000610434338484610b62565b5060015b92915050565b6000610448610c24565b905090565b60006001600160a01b03841633146104da576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104d85760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b505b6104e5848484610c3b565b5060015b9392505050565b6104fc60126006611640565b61050790600a611749565b81565b61051660126006611640565b61052190600a611749565b61050790600a611758565b60006104e9338484610d47565b6000546001600160a01b031633146105635760405162461bcd60e51b81526004016104cf90611777565b61056f60126006611640565b61057a90600a611749565b61058590600a611758565b8161058e610c24565b61059891906117ac565b11156105da5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b60448201526064016104cf565b6105e48282610dce565b5050565b6001600160a01b0381166000908152600260209081526040808320546008909252822060018101549054919290919061062085610e25565b90509193509193565b60006004544361063991906117c4565b905060006005548261064b91906117c4565b905080156105e4576005829055600c5460009081906001600160a01b0316635aff34dc61067d610309620186a06117c4565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f391906117db565b9150915060006107066003548484610a4e565b60035461071391906117c4565b9050806006600082825461072791906117ac565b9091555061073d905064e8d4a510008484610b24565b61074c9064e8d4a510006117c4565b6007600082825461075d91906117ac565b90915550505050505050565b600061043882610fdc565b6000546001600160a01b0316331461079e5760405162461bcd60e51b81526004016104cf90611777565b6107a8600061100a565b565b6000806000806006546107bb61105a565b6107c591906117ac565b935060006107e36107de6000546001600160a01b031690565b610e25565b90506107ef81856117ac565b600954909450610807906001600160a01b0316610e25565b905061081381856117ac565b600a5490945061082b906001600160a01b0316610e25565b905061083781856117ac565b600b5490945061084f906001600160a01b0316610e25565b905061085b81856117ac565b9350838510156108765761086f85856117c4565b9250610883565b61088084866117c4565b92505b848481101561088f5750835b80156108b257806108a58564e8d4a51000611758565b6108af9190611815565b92505b505090919293565b6000546001600160a01b031633146108e45760405162461bcd60e51b81526004016104cf90611777565b6105e48282611145565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661093b5760405162461bcd60e51b81526004016104cf9190611505565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e590859085906109759086906117c4565b610b62565b60006104e93384846108ee565b6000610434338484610c3b565b60035460055460075460065460006109aa61105a565b90509091929394565b6000546001600160a01b031633146109dd5760405162461bcd60e51b81526004016104cf90611777565b6001600160a01b038116610a425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b610a4b8161100a565b50565b6000806000610a5d86866111f9565b9150915081600003610a8257838181610a7857610a786117ff565b04925050506104e9565b838210156101c4576000610a97878787611246565b9050600080610aa7858585611261565b9150915081600003610acf57868181610ac257610ac26117ff565b04955050505050506104e9565b600087610add60008a611292565b1690506000610aed84848461129e565b90506000610b09838b81610b0357610b036117ff565b046112eb565b9050610b158282611328565b985050505050505050506104e9565b600080610b32858585610a4e565b90506000610b41868686611246565b1115610b5a57610b52816001611334565b9150506104e9565b949350505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610bac5760405162461bcd60e51b81526004016104cf9190611505565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610bf75760405162461bcd60e51b81526004016104cf9190611505565b506001600160a01b0392831660009081526001602090815260408083209490951682529290925291902055565b6000610c2e61105a565b60035461044891906117c4565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610c855760405162461bcd60e51b81526004016104cf9190611505565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610cd05760405162461bcd60e51b81526004016104cf9190611505565b506000610cdc84610fdc565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b81525090610d285760405162461bcd60e51b81526004016104cf9190611505565b50610d3584836000611340565b610d4183836001611340565b50505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610d945760405162461bcd60e51b81526004016104cf9190611505565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546104e590859085906109759086906117ac565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610e185760405162461bcd60e51b81526004016104cf9190611505565b506105e482826001611340565b6001600160a01b03811660009081526008602052604081205464e8d4a5100090811015610e6757506001600160a01b0382166000908152600860205260409020545b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a510009291610e9f91611758565b610ea991906117c4565b610eb39190611815565b9050600060045443610ec591906117c4565b9050600060055482610ed791906117c4565b600c5490915060009081906001600160a01b0316635aff34dc610eff610309620186a06117c4565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7591906117db565b6001600160a01b038a1660009081526002602052604081205492945090925090610fa0908484610a4e565b6001600160a01b038a16600090815260026020526040902054610fc391906117c4565b9050610fcf81876117ac565b9998505050505050505050565b6000610fe782610e25565b6001600160a01b03831660009081526002602052604090205461043891906117c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806004544361106b91906117c4565b905060006005548261107d91906117c4565b600c5490915060009081906001600160a01b0316635aff34dc6110a5610309620186a06117c4565b6040516001600160e01b031960e084901b1681526004810191909152620186a0602482015260448101869052601e60648201526084016040805180830381865afa1580156110f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111b91906117db565b91509150600061112e6003548484610b24565b60035461113b91906117c4565b9695505050505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661118f5760405162461bcd60e51b81526004016104cf9190611505565b50600061119b83610fdc565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111e75760405162461bcd60e51b81526004016104cf9190611505565b506111f483836000611340565b505050565b600080600061120885856114d2565b905060006112168686611328565b905080821061122c57908190039250905061123f565b60016112388383611292565b0393509150505b9250929050565b60008180611256576112566117ff565b838509949350505050565b600080828410611277575083905081830361128a565b600185036112858585611292565b915091505b935093915050565b60006104e982846117c4565b6000806112c5836112b0600086611292565b816112bd576112bd6117ff565b506000919050565b90508284816112d6576112d66117ff565b046112e18683611328565b1795945050505050565b60006001815b60088110156113215761131782611312600261130d8689611328565b611292565b611328565b91506001016112f1565b5092915050565b60006104e98284611758565b60006104e982846117ac565b611348610629565b6001600160a01b038316600090815260086020908152604080832054600290925282205460075464e8d4a51000929161138091611758565b61138a91906117c4565b6113949190611815565b90506113a2600654826114e1565b6006556001600160a01b038416600090815260026020526040812080548392906113cd9084906117c4565b9250508190555080600360008282546113e691906117c4565b9091555050811561143d576001600160a01b038416600090815260026020526040812080548592906114199084906117ac565b92505081905550826003600082825461143291906117ac565b9091555061148a9050565b6001600160a01b03841660009081526002602052604090205461146090846114e1565b6001600160a01b03851660009081526002602052604090205560035461148690846114e1565b6003555b6001600160a01b0384166000908152600260205260409020546007546114b09190611758565b6001600160a01b03909416600090815260086020526040902093909355505050565b60006000198284099392505050565b6000818311156114fc576114f582846117c4565b9050610438565b50600092915050565b600060208083528351808285015260005b8181101561153257858101830151858201604001528201611516565b81811115611544576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461157157600080fd5b919050565b6000806040838503121561158957600080fd5b6115928361155a565b946020939093013593505050565b6000806000606084860312156115b557600080fd5b6115be8461155a565b92506115cc6020850161155a565b9150604084013590509250925092565b6000602082840312156115ee57600080fd5b6104e98261155a565b6000806040838503121561160a57600080fd5b6116138361155a565b91506116216020840161155a565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561165d5761165d61162a565b019392505050565b600181815b808511156116a05781600019048211156116865761168661162a565b8085161561169357918102915b93841c939080029061166a565b509250929050565b6000826116b757506001610438565b816116c457506000610438565b81600181146116da57600281146116e457611700565b6001915050610438565b60ff8411156116f5576116f561162a565b50506001821b610438565b5060208310610133831016604e8410600b8410161715611723575081810a610438565b61172d8383611665565b80600019048211156117415761174161162a565b029392505050565b60006104e960ff8416836116a8565b60008160001904831182151516156117725761177261162a565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156117bf576117bf61162a565b500190565b6000828210156117d6576117d661162a565b500390565b600080604083850312156117ee57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b60008261183257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d1d310ed3b05ac6339c69bd005f85347f7b6790e35e649ff60fed8469c478c0364736f6c634300080e0033";

export class CompoundExpReward__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundExpReward> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<CompoundExpReward>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): CompoundExpReward {
    return super.attach(address) as CompoundExpReward;
  }
  connect(signer: Signer): CompoundExpReward__factory {
    return super.connect(signer) as CompoundExpReward__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundExpRewardInterface {
    return new utils.Interface(_abi) as CompoundExpRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundExpReward {
    return new Contract(address, _abi, signerOrProvider) as CompoundExpReward;
  }
}

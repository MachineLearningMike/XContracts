{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "8b58f0679da8b4d9d3a606cdfe52788da8f972d449fc2e5f7beaf00cf0ebcf47",
          "withoutMetadata": "682d216609e519b216d3293e24f03891a5b3bc781abf6eeb758385d4766bae58",
          "linkedWithoutMetadata": "682d216609e519b216d3293e24f03891a5b3bc781abf6eeb758385d4766bae58"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11924,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13507,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13689,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13876,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15577,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18794,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:205"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8018",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8012_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7986_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7958_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7936,t_struct(FeeRates)7955_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7936,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7936)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7952_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8161",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8131",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)2988_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)2988_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)2988_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)2993_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)5566",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:203"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7936)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5566": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8131": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8161": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7936": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7978": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8018": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7986_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2993_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7936,t_struct(FeeRates)7955_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7936,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7952_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7936",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7955_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7958_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8012_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7986_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7978",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2988_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)2993_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "65ffa1f3d8897e73b581355017637c43b8b7e5ab9104abd266bce2fe34d3d459",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8018",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8012_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7986_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7958_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7936,t_struct(FeeRates)7955_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7936": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7978": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8018": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7986_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7936,t_struct(FeeRates)7955_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7955_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7958_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8012_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7986_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7978",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7952_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8161",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8131",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8131": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8161": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7936": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7952_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7936",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7936,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7936)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7936)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7936": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7936,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "71fd1edb803efdfa5974a437532b27457f24b6334189ad83632350c9f4e00a4f",
          "withoutMetadata": "d9803bf335047ca90f4d9db52ef25f0040540b6888ffb6858dd04f39c1148456",
          "linkedWithoutMetadata": "d9803bf335047ca90f4d9db52ef25f0040540b6888ffb6858dd04f39c1148456"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11930,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13695,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13882,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15583,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18800,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:217"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8019",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8013_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7987_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7959_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7937,t_struct(FeeRates)7956_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7937,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7937)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7953_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8162",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8132",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)2989_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)2989_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)2989_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)2994_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)5567",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:215"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7937)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5567": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8132": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8162": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7937": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7979": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8019": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7987_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2994_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7937,t_struct(FeeRates)7956_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7937,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7953_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7937",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7956_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7959_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8013_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7987_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7979",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2989_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)2994_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "65ffa1f3d8897e73b581355017637c43b8b7e5ab9104abd266bce2fe34d3d459",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8019",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8013_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7987_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7959_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7937,t_struct(FeeRates)7956_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7937": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7979": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8019": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7987_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7937,t_struct(FeeRates)7956_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7956_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7959_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8013_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7987_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7979",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7953_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8162",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8132",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8132": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8162": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7937": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7953_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7937",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7937,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7937)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7937)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7937": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7937,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "ec6b28ded1958e1c65e614dadf6e7c6763a3892f4c36fa8e433542ac2776ef12",
          "withoutMetadata": "8d769cfb521e3874d2f7e8d8881fc81d7b8f0016d71e052165127984b9e8c375",
          "linkedWithoutMetadata": "8d769cfb521e3874d2f7e8d8881fc81d7b8f0016d71e052165127984b9e8c375"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "24cc5c3298c1b6e9d893589f7f0ab910fdd390e1452f4ca2cc4402d747ef4127",
          "withoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18",
          "linkedWithoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)18173",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "9acd3edafd81009d7af4a68cc423a240b66e628f1a5d0f0bf1fa5d74388d9240",
          "withoutMetadata": "415b44d02f4562ea2aa6abfa380f8f8dbf6b571d931935703896469e71ca15da",
          "linkedWithoutMetadata": "415b44d02f4562ea2aa6abfa380f8f8dbf6b571d931935703896469e71ca15da"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11930,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13695,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13882,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15583,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18861,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:217"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)18131,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)18131)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)18147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)18356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)18326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)6021_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)6021_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)6021_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)6026_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)9496",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:215"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)18131)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9496": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)18326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)6026_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)6021_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)6026_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "3034170a92bdb359d899556feed2daf5df3f3031b696fdf57ac1178ea933bbfc",
          "withoutMetadata": "24562864f9959ed487c65962d67463b39b470ccf5503fd944629d596f0737155",
          "linkedWithoutMetadata": "24562864f9959ed487c65962d67463b39b470ccf5503fd944629d596f0737155"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "65ffa1f3d8897e73b581355017637c43b8b7e5ab9104abd266bce2fe34d3d459",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "cfd87383677ed126186bc346fba6686ffd42ab96ecaad8b9e5714067aa7d1733",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ControlCenter": {
        "src": "contracts\\periphery\\ControlCenter.sol:14",
        "version": {
          "withMetadata": "51b197a14ef24a4a15960922161d6d124a7e9781a2d1f5daf3acd64ba6960aec",
          "withoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7",
          "linkedWithoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "Node",
          "INode",
          "IControlCenter"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOwner()",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "setLiquidityChangeLimit(uint256)",
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))",
          "setPriceChangeLimit(uint256)",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 29623,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30047,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31043,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31225,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31412,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31975,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ControlCenter",
            "src": "contracts\\periphery\\ControlCenter.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\periphery\\ControlCenter.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:116"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:118"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "pairStateAtSessionDetect",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)10673_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:29"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:30"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:32"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:116"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)10684_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:117"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CLFeed)10684_storage)": {
              "label": "mapping(address => struct ControlCenter.CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)10673_storage)": {
              "label": "mapping(address => struct ControlCenter.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)10684_storage": {
              "label": "struct ControlCenter.CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)18150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairStateSessionTagged)10673_storage": {
              "label": "struct ControlCenter.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "b9b7419cd06329161ac0a61581a42347b20c5fcb3e2af04de1fb5cdeabdafb29",
          "withoutMetadata": "b9b7419cd06329161ac0a61581a42347b20c5fcb3e2af04de1fb5cdeabdafb29",
          "linkedWithoutMetadata": "b9b7419cd06329161ac0a61581a42347b20c5fcb3e2af04de1fb5cdeabdafb29"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "537eede24df05fd3cd29245f75c27eb16111aa72f246dbb0e42e423ed28936e3",
          "withoutMetadata": "537eede24df05fd3cd29245f75c27eb16111aa72f246dbb0e42e423ed28936e3",
          "linkedWithoutMetadata": "537eede24df05fd3cd29245f75c27eb16111aa72f246dbb0e42e423ed28936e3"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18131,t_struct(FeeRates)18150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)18147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)18356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)18326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)18147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)18131,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)18131)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)18131)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)18131,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "0160b3ca0970fa055d2b93040d273a3943c38e6ec6e52a5b9bc54c97d2cceeb9",
          "withoutMetadata": "08b639896c9978b6f79ec6b45cac13e197e86f093c212a52121a8788a978a405",
          "linkedWithoutMetadata": "08b639896c9978b6f79ec6b45cac13e197e86f093c212a52121a8788a978a405"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "f85322d13d39b833ad3df7f696a8dbc01f24fbd3be19d8ccc07775ba2726f727",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "3cf858b3b659062582ba06fd33e02e406d8b53683dc6a1551bb9e8b839ac5482",
          "withoutMetadata": "3cf858b3b659062582ba06fd33e02e406d8b53683dc6a1551bb9e8b839ac5482",
          "linkedWithoutMetadata": "3cf858b3b659062582ba06fd33e02e406d8b53683dc6a1551bb9e8b839ac5482"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "4135eb84378cbfb3b048a63a67cdd07f40d9a6961904346940f5970ff5fc2a72",
          "withoutMetadata": "4135eb84378cbfb3b048a63a67cdd07f40d9a6961904346940f5970ff5fc2a72",
          "linkedWithoutMetadata": "4135eb84378cbfb3b048a63a67cdd07f40d9a6961904346940f5970ff5fc2a72"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "65b75192e531fd1e830e39f8e0f619589b9f0a52335bf34bb134465bd62c2aae",
          "withoutMetadata": "54d97fbd7f880d7ec704b64cdc7b911d739dda08ecfccee2a27c250224c170eb",
          "linkedWithoutMetadata": "54d97fbd7f880d7ec704b64cdc7b911d739dda08ecfccee2a27c250224c170eb"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "44b1cdaf1af10ffc1f9ac7cfd384f0da9de561c3c8bb5cd70ce609588113f93a",
          "withoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18",
          "linkedWithoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)16179",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "1a6f75e65401e99364196e8649a15959df7b668bbcde174acd1750738c124165",
          "withoutMetadata": "8c5bbb28229950f0c72389006eae1e33e98e0e4592f62975edc70a674a16aed9",
          "linkedWithoutMetadata": "8c5bbb28229950f0c72389006eae1e33e98e0e4592f62975edc70a674a16aed9"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11778,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13361,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13543,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13730,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15431,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18800,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)16137,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)16137)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)5951_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)9421",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)16137)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9421": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)5951_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)5946_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)5951_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "3a5b87fd220ada9fde676492b4f05d3871e53708d68caf3edd534f6ab5cb3123",
          "withoutMetadata": "71ddc48603dca82fe420a27dd193e54ef684b5692dc8c3ff3891fd39c3faba8f",
          "linkedWithoutMetadata": "71ddc48603dca82fe420a27dd193e54ef684b5692dc8c3ff3891fd39c3faba8f"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "43d3f0bc3fd644874b23ece71f6134d9da0d38dd80c66aee32c29c87c29f097e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "8ddca7584da258eef3b45866ca3f15df56b80f5e17b9929381333403239949d4",
          "withoutMetadata": "8ddca7584da258eef3b45866ca3f15df56b80f5e17b9929381333403239949d4",
          "linkedWithoutMetadata": "8ddca7584da258eef3b45866ca3f15df56b80f5e17b9929381333403239949d4"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "e08946b47234f7a7877237f904e020a407703a6f27b02357f48d1de8685ed765",
          "withoutMetadata": "e08946b47234f7a7877237f904e020a407703a6f27b02357f48d1de8685ed765",
          "linkedWithoutMetadata": "e08946b47234f7a7877237f904e020a407703a6f27b02357f48d1de8685ed765"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)16137,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)16137)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)16137)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)16137,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "21301b9a292330c572344839b1219be390ffbfc41034f6b91b3e5eeb2c883c6e",
          "withoutMetadata": "71ddc48603dca82fe420a27dd193e54ef684b5692dc8c3ff3891fd39c3faba8f",
          "linkedWithoutMetadata": "71ddc48603dca82fe420a27dd193e54ef684b5692dc8c3ff3891fd39c3faba8f"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "73977c6f6b02ae2deeed84c0840631fb05ff2f62940d858723b22be85ce630d0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "d7097c68992277bbf7a53e61bbfbb2033ce6fee3cb2cd3e9c93cf29b8508c941",
          "withoutMetadata": "d7097c68992277bbf7a53e61bbfbb2033ce6fee3cb2cd3e9c93cf29b8508c941",
          "linkedWithoutMetadata": "d7097c68992277bbf7a53e61bbfbb2033ce6fee3cb2cd3e9c93cf29b8508c941"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "a3faae6d57f615d53a458208c3183b182cedbaa0b6bc9b57c5df7377fd6b63cd",
          "withoutMetadata": "a3faae6d57f615d53a458208c3183b182cedbaa0b6bc9b57c5df7377fd6b63cd",
          "linkedWithoutMetadata": "a3faae6d57f615d53a458208c3183b182cedbaa0b6bc9b57c5df7377fd6b63cd"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "d4ea497c06d075e2f9a351f6aa54242ac872cd3ff5827b44694583c5b8625618",
          "withoutMetadata": "d7a431ecea4a8973465749658a89bf0c6b38972ed1ab0cd11551d02a9d9f37d3",
          "linkedWithoutMetadata": "d7a431ecea4a8973465749658a89bf0c6b38972ed1ab0cd11551d02a9d9f37d3"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "4a6504fcf6b4d5cbe6571f5c16f9d479d06f25f34f4a8e5edc05c5f81d1a5721",
          "withoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18",
          "linkedWithoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)16179",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "63de4c59725d0edff63c4f30a56500847f4cd19f4e8dd1f295964f5da6c148bb",
          "withoutMetadata": "8c5bbb28229950f0c72389006eae1e33e98e0e4592f62975edc70a674a16aed9",
          "linkedWithoutMetadata": "8c5bbb28229950f0c72389006eae1e33e98e0e4592f62975edc70a674a16aed9"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11778,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13361,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13543,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13730,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15431,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18800,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)16137,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)16137)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)5951_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)9421",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)16137)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9421": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)5951_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)5946_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)5951_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "639acd13b1a4e05c1705ad2eb0a09ea0a019d411331f5aeae7360b03df122288",
          "withoutMetadata": "294f4da4a2f36b47f00051c7cacf8495615ed426579cedf6df220b4ff7ae4234",
          "linkedWithoutMetadata": "294f4da4a2f36b47f00051c7cacf8495615ed426579cedf6df220b4ff7ae4234"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "ec0a71f4de7b19541e71b021f47970e5b0b431e2839c4a804f7bcad065a193ce",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "a1d45967cbf7765711e23cbdf401c3b87a951dee454c5bf1fae490b4f2a0df70",
          "withoutMetadata": "a1d45967cbf7765711e23cbdf401c3b87a951dee454c5bf1fae490b4f2a0df70",
          "linkedWithoutMetadata": "a1d45967cbf7765711e23cbdf401c3b87a951dee454c5bf1fae490b4f2a0df70"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "846ff609927d41c0ee6ec5ca3681c815906ac009b540462274ed712606a15bfc",
          "withoutMetadata": "846ff609927d41c0ee6ec5ca3681c815906ac009b540462274ed712606a15bfc",
          "linkedWithoutMetadata": "846ff609927d41c0ee6ec5ca3681c815906ac009b540462274ed712606a15bfc"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)16137,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)16137)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)16137)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)16137,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "7fd3bf6963d3943d8a289ea78feb675926eaf64466b18a3748b30b257cfd3c65",
          "withoutMetadata": "294f4da4a2f36b47f00051c7cacf8495615ed426579cedf6df220b4ff7ae4234",
          "linkedWithoutMetadata": "294f4da4a2f36b47f00051c7cacf8495615ed426579cedf6df220b4ff7ae4234"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "33e51fe7ef4b89b9e7000c69463351acf0539b246bbbbc0adc445f41fa69f485",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "86cd4809fa921a9478ec166887f0016641fc8ba67aa42b2929e45c1867e759e6",
          "withoutMetadata": "86cd4809fa921a9478ec166887f0016641fc8ba67aa42b2929e45c1867e759e6",
          "linkedWithoutMetadata": "86cd4809fa921a9478ec166887f0016641fc8ba67aa42b2929e45c1867e759e6"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "cb1befd48b570797d5313ac485c3f5196eb817998671ba0e4b7efaf53789c7b6",
          "withoutMetadata": "cb1befd48b570797d5313ac485c3f5196eb817998671ba0e4b7efaf53789c7b6",
          "linkedWithoutMetadata": "cb1befd48b570797d5313ac485c3f5196eb817998671ba0e4b7efaf53789c7b6"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "085fc7da3304fdc98ac24e7211bf874ce39e51aa656133de72255faf3f8f04c7",
          "withoutMetadata": "b5f2fd9a69178f3046c2b8dad6a948f24b4ff5770a768c3bc497c5c6c67889ba",
          "linkedWithoutMetadata": "b5f2fd9a69178f3046c2b8dad6a948f24b4ff5770a768c3bc497c5c6c67889ba"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "209f653ac81236b010ec6705a710d7a3f302c67dad52d21ce6acc25ecbdb68a6",
          "withoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18",
          "linkedWithoutMetadata": "a1c3876608fe8fcc3bef6da2cfd9d56581a75ded84fef47429cf438278d0be18"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)16179",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "986f4a22210674a5f794641b712b28fd356c06b215e8421c66846222e9e08847",
          "withoutMetadata": "8c5bbb28229950f0c72389006eae1e33e98e0e4592f62975edc70a674a16aed9",
          "linkedWithoutMetadata": "8c5bbb28229950f0c72389006eae1e33e98e0e4592f62975edc70a674a16aed9"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11778,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13361,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13543,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13730,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15431,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18800,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)16137,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)16137)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)5946_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)5951_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)9421",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)16137)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9421": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)5951_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)5946_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)5951_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "0b39f758e5a13ff07acd8384da4f86a700d31cd9c96885faaeef96c8c9f6d449",
          "withoutMetadata": "a93a44b89dd110efa68bb31a40ae9c7a06913191b07415a2a0c192aa7f1f5cce",
          "linkedWithoutMetadata": "a93a44b89dd110efa68bb31a40ae9c7a06913191b07415a2a0c192aa7f1f5cce"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "343fec5304e0309e63f17a9b255ddad0140eef25d6a4bcb0d45b87ca58913fe6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "34baa99601713afb2db550de858dec72d7c50a8f68c2685530b949f0d5c50059",
          "withoutMetadata": "34baa99601713afb2db550de858dec72d7c50a8f68c2685530b949f0d5c50059",
          "linkedWithoutMetadata": "34baa99601713afb2db550de858dec72d7c50a8f68c2685530b949f0d5c50059"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "5595a62b123d9abe9d5a710600a24784d36c9071d31a1354fde794017250c644",
          "withoutMetadata": "5595a62b123d9abe9d5a710600a24784d36c9071d31a1354fde794017250c644",
          "linkedWithoutMetadata": "5595a62b123d9abe9d5a710600a24784d36c9071d31a1354fde794017250c644"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16219",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16213_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16187_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16159_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16179": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16219": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16187_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16137,t_struct(FeeRates)16156_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16156_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16159_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16213_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16187_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16179",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)16153_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)16362",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)16332",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16332": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16362": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)16153_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16137",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)16137,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)16137)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)16137)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16137": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)16137,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "f9eda3113778fc9268aa9dbf4b9ab370b9951c599145b1e0585628efeb2df352",
          "withoutMetadata": "a93a44b89dd110efa68bb31a40ae9c7a06913191b07415a2a0c192aa7f1f5cce",
          "linkedWithoutMetadata": "a93a44b89dd110efa68bb31a40ae9c7a06913191b07415a2a0c192aa7f1f5cce"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "37f9d6c2f6dd769c09014e87cf95b88ec98274fb62c854eaa4638a0f8457d58b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "c835a064834688f72d402381faa625dfd54350258538b45afb5028a8a5049ba3",
          "withoutMetadata": "c835a064834688f72d402381faa625dfd54350258538b45afb5028a8a5049ba3",
          "linkedWithoutMetadata": "c835a064834688f72d402381faa625dfd54350258538b45afb5028a8a5049ba3"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "c76b49f4e134b94645e8d8abae5d1425154a9de18fdb70f4db2d6adcb7428ce9",
          "withoutMetadata": "c76b49f4e134b94645e8d8abae5d1425154a9de18fdb70f4db2d6adcb7428ce9",
          "linkedWithoutMetadata": "c76b49f4e134b94645e8d8abae5d1425154a9de18fdb70f4db2d6adcb7428ce9"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "97807805da61363cd77252e71906e47ddf0fbd2fcaae18d3c234c081c5ea4f06",
          "withoutMetadata": "398f75779f7bcb3241d459c26217a03b8db62c0ce2e587db5a5a040dc128addd",
          "linkedWithoutMetadata": "398f75779f7bcb3241d459c26217a03b8db62c0ce2e587db5a5a040dc128addd"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "6090d43ca95e62a38c500ba1f88467180e30dbc8933b61fecfd7f86497709d1c",
          "withoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88",
          "linkedWithoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112",
          "console"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)16188",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "358063c13a95cf3818dd1d617d07ac5c1e506f47c673f238b3740d6137fbb678",
          "withoutMetadata": "e0dc995eb1deaa05532f6e0df758e561c0fbcd0d97a39f1513ec592fb81516ca",
          "linkedWithoutMetadata": "e0dc995eb1deaa05532f6e0df758e561c0fbcd0d97a39f1513ec592fb81516ca"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11778,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13361,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13543,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13730,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15405,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)16146,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)16146)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)5955_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)5955_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)5955_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)5960_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)9430",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)16146)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9430": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)5960_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)5955_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)5960_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "228c42b239222ebaabfa803916e0e32bf1f3bdbae5a80decd66e2c61ec574815",
          "withoutMetadata": "1c0db43de3fb25610020083e1bc9bd10a3f2dd281ab060b75c7dab93c052c1fd",
          "linkedWithoutMetadata": "1c0db43de3fb25610020083e1bc9bd10a3f2dd281ab060b75c7dab93c052c1fd"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "8ea637e27c84018c9d76599da2e6d1d751c447aa9d86dd8ba06a2bf019b6c0d9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "18f4dbe18bb201a2fa1dcb501ff350aadfbe90cbd15693dde3dacf1db9ef1b66",
          "withoutMetadata": "18f4dbe18bb201a2fa1dcb501ff350aadfbe90cbd15693dde3dacf1db9ef1b66",
          "linkedWithoutMetadata": "18f4dbe18bb201a2fa1dcb501ff350aadfbe90cbd15693dde3dacf1db9ef1b66"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "fe0f7851ad3f890f020b83ef4ab4d5eec1b5e1a3d6d8521a391709689ddc51c4",
          "withoutMetadata": "fe0f7851ad3f890f020b83ef4ab4d5eec1b5e1a3d6d8521a391709689ddc51c4",
          "linkedWithoutMetadata": "fe0f7851ad3f890f020b83ef4ab4d5eec1b5e1a3d6d8521a391709689ddc51c4"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)16146,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)16146)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)16146)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)16146,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "94f419e26024adc6f7be1263879c09af25541d74d76df81a972a1bc54ba1707a",
          "withoutMetadata": "1c0db43de3fb25610020083e1bc9bd10a3f2dd281ab060b75c7dab93c052c1fd",
          "linkedWithoutMetadata": "1c0db43de3fb25610020083e1bc9bd10a3f2dd281ab060b75c7dab93c052c1fd"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "6283cc509d422fafa19ce02c8de227e24a6736d6a0499d455ddcc7f3ba906e06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "695573274da3493881d35ef20f5a709bfba4932c1ff1b46a7ae96b7fa77c60a8",
          "withoutMetadata": "695573274da3493881d35ef20f5a709bfba4932c1ff1b46a7ae96b7fa77c60a8",
          "linkedWithoutMetadata": "695573274da3493881d35ef20f5a709bfba4932c1ff1b46a7ae96b7fa77c60a8"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "62174ab004cb7f701cf6871a8c3ad0a31eef21ae7f68478ed9f53318ca6bd4ec",
          "withoutMetadata": "62174ab004cb7f701cf6871a8c3ad0a31eef21ae7f68478ed9f53318ca6bd4ec",
          "linkedWithoutMetadata": "62174ab004cb7f701cf6871a8c3ad0a31eef21ae7f68478ed9f53318ca6bd4ec"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8221",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8215_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8189_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8161_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8181": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8221": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8189_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8139,t_struct(FeeRates)8158_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8158_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8161_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8215_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8189_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8181",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8155_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8364",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8334",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8334": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8364": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8139": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8155_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8139",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "33dd36670f1872fdd78c3e894f58d312af72db019d973bff451a21591c1edd83",
          "withoutMetadata": "56f464499d6f8ea1c99f4bc73f91dd9d0c44b3511830e57de6d07d5aaae9a07f",
          "linkedWithoutMetadata": "56f464499d6f8ea1c99f4bc73f91dd9d0c44b3511830e57de6d07d5aaae9a07f"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "7bc36750d2d7c647325d1dbf6c9bfb6cb25a932dd66546ebfd4ff1f8b878fb51",
          "withoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88",
          "linkedWithoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112",
          "console"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)16188",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "fddeb0620d18fe020cd9550f084dc6e4f4769d12c3e45bd52779b805f676aede",
          "withoutMetadata": "e0dc995eb1deaa05532f6e0df758e561c0fbcd0d97a39f1513ec592fb81516ca",
          "linkedWithoutMetadata": "e0dc995eb1deaa05532f6e0df758e561c0fbcd0d97a39f1513ec592fb81516ca"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11778,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13361,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13543,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13730,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15405,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)16146,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)16146)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)5955_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "42",
              "type": "t_struct(Pulse)5955_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "52",
              "type": "t_struct(Pulse)5955_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "62",
              "type": "t_mapping(t_address,t_struct(User)5960_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "63",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "64",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "66",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "67",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "68",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "70",
              "type": "t_contract(AnalyticMath)9430",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)16146)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9430": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)5960_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)5955_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(User)5960_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "0b2c32bfb12bd924fa90d2494cd4ff82c89fcb93e7699675b6b17359d4748aea",
          "withoutMetadata": "44b802d1947015aee356133e71f9187767196330e93768aa6e7c80776475c67d",
          "linkedWithoutMetadata": "44b802d1947015aee356133e71f9187767196330e93768aa6e7c80776475c67d"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "1ee995a90bfcc1a1dca9c605d9183d429da4a36d7b9d13c0e12bc0947dafc78b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "f96381d0ae5a88a607ab4c46b3868f5e43d2532b8052a24216730d60d3b00a77",
          "withoutMetadata": "f96381d0ae5a88a607ab4c46b3868f5e43d2532b8052a24216730d60d3b00a77",
          "linkedWithoutMetadata": "f96381d0ae5a88a607ab4c46b3868f5e43d2532b8052a24216730d60d3b00a77"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "eb339e97a1de0de92a2f5f71b8b01c0fd0239766669f5aed5a4e4df93526aadc",
          "withoutMetadata": "eb339e97a1de0de92a2f5f71b8b01c0fd0239766669f5aed5a4e4df93526aadc",
          "linkedWithoutMetadata": "eb339e97a1de0de92a2f5f71b8b01c0fd0239766669f5aed5a4e4df93526aadc"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)16228",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)16222_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)16196_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)16168_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)16188": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)16228": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)16196_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)16146,t_struct(FeeRates)16165_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)16165_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)16168_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)16222_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)16196_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)16188",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)16162_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)16371",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)16341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)16341": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)16371": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)16162_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)16146",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)16146,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)16146)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)16146)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)16146": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)16146,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "9ba3a7e9451dfa5d76e64979ecb59bb101401967bc66fab26fc3e2c6930fadc8",
          "withoutMetadata": "44b802d1947015aee356133e71f9187767196330e93768aa6e7c80776475c67d",
          "linkedWithoutMetadata": "44b802d1947015aee356133e71f9187767196330e93768aa6e7c80776475c67d"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "c95b8b1af1d511737b0f8da34a8e0f4465bbd441d2013038850e283d22b1bb4d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "9fb4611d122cc65b1a7ec78de12d1e19f5bf9939c1e44a2bb5a45d01c75871d5",
          "withoutMetadata": "9fb4611d122cc65b1a7ec78de12d1e19f5bf9939c1e44a2bb5a45d01c75871d5",
          "linkedWithoutMetadata": "9fb4611d122cc65b1a7ec78de12d1e19f5bf9939c1e44a2bb5a45d01c75871d5"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8223",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8217_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8191_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8163_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8141,t_struct(FeeRates)8160_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8157_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8366",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8336",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8336": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8366": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8141": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8183": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8223": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8191_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8141,t_struct(FeeRates)8160_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8157_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8141",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8160_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8163_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8217_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8191_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8183",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "27f1d4a0d6d7347b3820755c81d13c21b04aa2cbb6a3941506d15b078e136d6b",
          "withoutMetadata": "27f1d4a0d6d7347b3820755c81d13c21b04aa2cbb6a3941506d15b078e136d6b",
          "linkedWithoutMetadata": "27f1d4a0d6d7347b3820755c81d13c21b04aa2cbb6a3941506d15b078e136d6b"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8223",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8217_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8191_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8163_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8141,t_struct(FeeRates)8160_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8157_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8366",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8336",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8336": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8366": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8141": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8183": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8223": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8191_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8141,t_struct(FeeRates)8160_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8157_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8141",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8160_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8163_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8217_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8191_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8183",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8223",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8217_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8191_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8163_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8141,t_struct(FeeRates)8160_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8141": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8183": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8223": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8191_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8141,t_struct(FeeRates)8160_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8160_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8163_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8217_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8191_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8183",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8157_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8366",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8336",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8336": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8366": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8141": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8157_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8141",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "f57b932023e0c57b26c1e191dad94b0dd1873e65e15b91e05f7fae18cb55499f",
          "withoutMetadata": "b84118d8b661bec10ae6e1843d5642ab9d2cbb20b835ee04d2ea13b8d54c261b",
          "linkedWithoutMetadata": "b84118d8b661bec10ae6e1843d5642ab9d2cbb20b835ee04d2ea13b8d54c261b"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11855,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13438,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13620,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13807,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15482,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18859,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8003",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7997_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7971_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7943_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7921,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7921)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7937_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8146",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8116",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)2973_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)2973_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)2973_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)2978_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5551",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7921)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5551": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8116": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8146": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7963": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8003": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7971_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2978_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7921,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7937_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7921",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7940_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7943_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7997_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7971_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7963",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2973_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)2978_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8003",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7997_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7971_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7943_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7963": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8003": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7971_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7940_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7943_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7997_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7971_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7963",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7937_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8146",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8116",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8116": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8146": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7937_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7921",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7921,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7921)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7921)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7921,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "8f16a3798eca6e805e62da4f4d578a20d3a849b3a159b7f9a2ee0b1441840068",
          "withoutMetadata": "3a6a1f8a070a281a6a96fa77de39eed9f54793577d4f8e914177edbead3e8959",
          "linkedWithoutMetadata": "3a6a1f8a070a281a6a96fa77de39eed9f54793577d4f8e914177edbead3e8959"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11855,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13438,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13620,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13807,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15482,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18859,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8003",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7997_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7971_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7943_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7921,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7921)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7937_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8146",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8116",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)2973_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)2973_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)2973_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)2978_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5551",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7921)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5551": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8116": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8146": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7963": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8003": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7971_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2978_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7921,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7937_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7921",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7940_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7943_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7997_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7971_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7963",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2973_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)2978_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8003",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7997_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7971_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7943_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7963": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8003": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7971_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7921,t_struct(FeeRates)7940_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7940_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7943_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7997_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7971_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7963",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7937_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8146",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8116",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8116": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8146": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7937_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7921",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7921,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7921)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7921)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7921": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7921,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "c87a2ddfd8fce291f3d9d4db97b2a0ce96cacd68ebaec157f98a8b1215aefcbb",
          "withoutMetadata": "720b8a4a9c9b91b79a29454180f1e7d822e589bf180797964d3ed9d7c043fd83",
          "linkedWithoutMetadata": "720b8a4a9c9b91b79a29454180f1e7d822e589bf180797964d3ed9d7c043fd83"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11864,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13447,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13629,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13816,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15491,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18880,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8009",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8003_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7977_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7949_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7927,t_struct(FeeRates)7946_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7927,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7927)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7943_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8152",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8122",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)2979_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)2979_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)2979_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)2984_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5557",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7927)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5557": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8122": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8152": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7927": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7969": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8009": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7977_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2984_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7927,t_struct(FeeRates)7946_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7927,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7943_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7927",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7946_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7949_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8003_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7977_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7969",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2979_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)2984_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8009",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8003_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7977_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7949_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7927,t_struct(FeeRates)7946_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7927": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7969": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8009": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7977_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7927,t_struct(FeeRates)7946_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7946_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7949_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8003_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7977_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7969",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7943_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8152",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8122",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8122": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8152": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7927": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7943_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7927",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7927,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7927)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7927)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7927": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7927,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "c2aaf453535c335976c0dd0a53fb469cb782816ded8bea4e245c3ef2a6cb25a3",
          "withoutMetadata": "4c4b96b8c1c9e206597ec798dbd00e851693a85965eee68c7f731c2013879ec5",
          "linkedWithoutMetadata": "4c4b96b8c1c9e206597ec798dbd00e851693a85965eee68c7f731c2013879ec5"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11864,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13447,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13629,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13816,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15491,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18954,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8030",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8024_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7998_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7970_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7948,t_struct(FeeRates)7967_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7948,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7948)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7964_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8173",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8143",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3000_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3000_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3000_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3005_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5578",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7948)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5578": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8143": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8173": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7948": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7990": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8030": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7998_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3005_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7948,t_struct(FeeRates)7967_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7948,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7964_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7948",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7967_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7970_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8024_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7998_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7990",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3000_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3005_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8030",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8024_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7998_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7970_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7948,t_struct(FeeRates)7967_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7948": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7990": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8030": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7998_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7948,t_struct(FeeRates)7967_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7967_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7970_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8024_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7998_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7990",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7964_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8173",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8143",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8143": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8173": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7948": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7964_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7948",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7948,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7948)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7948)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7948": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7948,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "5889f4cb277b53107151891a1b2df30ed75a037777b569b5dfcf9f331524d28c",
          "withoutMetadata": "462c5e5a1d302e4051ff32fc13c4c717c30cad59d4b79229f2f13088901afa65",
          "linkedWithoutMetadata": "462c5e5a1d302e4051ff32fc13c4c717c30cad59d4b79229f2f13088901afa65"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11864,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13447,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13629,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13816,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15491,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18956,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8029",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8023_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7997_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7969_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7947,t_struct(FeeRates)7966_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7947,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7947)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7963_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8172",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8142",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)2999_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)2999_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)2999_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3004_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5577",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7947)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5577": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8142": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8172": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7947": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7989": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8029": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7997_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3004_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7947,t_struct(FeeRates)7966_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7947,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7963_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7947",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7966_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7969_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8023_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7997_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7989",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2999_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3004_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8029",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8023_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7997_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7969_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7947,t_struct(FeeRates)7966_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7947": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7989": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8029": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7997_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7947,t_struct(FeeRates)7966_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7966_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7969_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8023_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7997_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7989",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7963_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8172",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8142",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8142": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8172": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7947": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7963_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7947",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7947,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7947)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7947)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7947": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7947,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "0c1c739d0193348bb83f8b16a4b5d28caf3ee9a6ca9e4c4650d7f5ec03512984",
          "withoutMetadata": "462c5e5a1d302e4051ff32fc13c4c717c30cad59d4b79229f2f13088901afa65",
          "linkedWithoutMetadata": "462c5e5a1d302e4051ff32fc13c4c717c30cad59d4b79229f2f13088901afa65"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11864,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13447,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13629,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13816,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15491,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18956,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:211"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8101",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8095_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8069_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8041_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8019,t_struct(FeeRates)8038_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8019,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8019)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8035_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8244",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8214",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3071_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3071_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3071_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3076_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5649",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:209"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8019)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5649": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8214": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8244": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8019": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8061": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8101": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8069_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3076_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8019,t_struct(FeeRates)8038_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8019,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8035_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8019",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8038_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8041_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8095_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8069_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8061",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3071_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3076_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8101",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8095_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8069_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8041_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8019,t_struct(FeeRates)8038_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8019": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8061": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8101": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8069_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8019,t_struct(FeeRates)8038_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8038_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8041_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8095_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8069_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8061",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8035_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8244",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8214",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8214": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8244": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8019": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8035_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8019",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8019,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8019)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8019)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8019": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8019,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "3efc0ad262f8856a10f7ce1e188b55dadfd97c1058ca43eda74ea3e0be2e84e3",
          "withoutMetadata": "12a67b10590d6553bb9c65ec6783c8c03da015869828707486cfd42b5704c0d0",
          "linkedWithoutMetadata": "12a67b10590d6553bb9c65ec6783c8c03da015869828707486cfd42b5704c0d0"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11893,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13476,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13658,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13845,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15520,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18727,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8046",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8040_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8014_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7986_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7964,t_struct(FeeRates)7983_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7964,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7964)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7980_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8189",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8159",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3016_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3016_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3016_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3021_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5594",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7964)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5594": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8159": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8189": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7964": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8006": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8046": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8014_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3021_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7964,t_struct(FeeRates)7983_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7964,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7980_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7964",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7983_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7986_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8040_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8014_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8006",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3016_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3021_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8046",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8040_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8014_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7986_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7964,t_struct(FeeRates)7983_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7964": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8006": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8046": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8014_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7964,t_struct(FeeRates)7983_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7983_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7986_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8040_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8014_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8006",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7980_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8189",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8159",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8159": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8189": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7964": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7980_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7964",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7964,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7964)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7964)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7964": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7964,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "e6585feca4131bdd29f878a6968fc62049f07d445b8eec71ee03969c96a98d45",
          "withoutMetadata": "8ca3b3f871a4e771eb56cd8477754a6c087e8f7c985a4cc3de33d3d9433b68cd",
          "linkedWithoutMetadata": "8ca3b3f871a4e771eb56cd8477754a6c087e8f7c985a4cc3de33d3d9433b68cd"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11254,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12837,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13019,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13206,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14881,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17874,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8049",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8043_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8017_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7989_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7967,t_struct(FeeRates)7986_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7967,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7967)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7983_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8192",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8162",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3019_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3019_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3019_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3024_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5597",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7967)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5597": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8162": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8192": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7967": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8009": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8049": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8017_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3024_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7967,t_struct(FeeRates)7986_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7967,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7983_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7967",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7986_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7989_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8043_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8017_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8009",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3019_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3024_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8049",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8043_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8017_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7989_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7967,t_struct(FeeRates)7986_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7967": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8009": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8049": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8017_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7967,t_struct(FeeRates)7986_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7986_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7989_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8043_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8017_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8009",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7983_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8192",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8162",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8162": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8192": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7967": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7983_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7967",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7967,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7967)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7967)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7967": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7967,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "0bd54150f708fa8769596292bf74980c2e6d35befbfa15d73e02a329091f6dc7",
          "withoutMetadata": "3f07af75048fbbdb2c9998c61454aaa3fd7c9b9f7e6c0b79534ddf4cb6d30076",
          "linkedWithoutMetadata": "3f07af75048fbbdb2c9998c61454aaa3fd7c9b9f7e6c0b79534ddf4cb6d30076"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18329",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18323_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18297_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18269_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18329": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18297_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18266_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18269_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18323_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18297_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18289",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "d82e73093d46f060c180d378416756fe20aa9237c7f9887d5e34bb579687a121",
          "withoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88",
          "linkedWithoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112",
          "console"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)18289",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "4fa14a15e01ca7f237427c48048ebc2a5b5b3e041b9cee02839ed00a0a06214c",
          "withoutMetadata": "6653dbb7079c334f2fb5a0f3faeea28c10b19470c03603119879e59b07cea60e",
          "linkedWithoutMetadata": "6653dbb7079c334f2fb5a0f3faeea28c10b19470c03603119879e59b07cea60e"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11256,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12839,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13021,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13208,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14883,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18136,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18329",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18323_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18297_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18269_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)18247,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)18247)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)18263_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)18472",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)18442",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)6142_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)9612",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)18247)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9612": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)18442": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18472": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18329": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18297_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)6142_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18263_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18247",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18266_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18269_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18323_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18297_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18289",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)6137_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)6142_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "35ab87b78c1f3d23c87db140336cef276a47fae8f77fb7d8a6139f46f5fe8d41",
          "withoutMetadata": "f829ffa5d8f10627bad019d57abed214a1e5a10e49142c007a507cbd2369b669",
          "linkedWithoutMetadata": "f829ffa5d8f10627bad019d57abed214a1e5a10e49142c007a507cbd2369b669"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "f3c21fad47b1fec00cfecc2ae61eab6f0c458a062d499452faaf6e6c44ab7dd2",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "18e18535976e8729192945860118ca5dfbde1a25dbe9d3feeea5d56ec95cbbc6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ControlCenter": {
        "src": "contracts\\periphery\\ControlCenter.sol:14",
        "version": {
          "withMetadata": "8b479ffe94bf1037ef2a7be17d1d4bba401efe6ceeb61e343430488144c1be7c",
          "withoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7",
          "linkedWithoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "Node",
          "INode",
          "IControlCenter"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOwner()",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "setLiquidityChangeLimit(uint256)",
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))",
          "setPriceChangeLimit(uint256)",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 29623,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30047,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31043,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31225,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31412,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31975,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ControlCenter",
            "src": "contracts\\periphery\\ControlCenter.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\periphery\\ControlCenter.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:116"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:118"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18329",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18323_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18297_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18269_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "pairStateAtSessionDetect",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)10789_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:29"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:30"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:32"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:116"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)10800_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:117"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18329": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CLFeed)10800_storage)": {
              "label": "mapping(address => struct ControlCenter.CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18297_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)10789_storage)": {
              "label": "mapping(address => struct ControlCenter.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)10800_storage": {
              "label": "struct ControlCenter.CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)18266_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18269_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18323_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18297_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18289",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairStateSessionTagged)10789_storage": {
              "label": "struct ControlCenter.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "bd9e1323c3404780367bc9e58de8c35d3fdef2b26df993db251bb8ccac05cd47",
          "withoutMetadata": "bd9e1323c3404780367bc9e58de8c35d3fdef2b26df993db251bb8ccac05cd47",
          "linkedWithoutMetadata": "bd9e1323c3404780367bc9e58de8c35d3fdef2b26df993db251bb8ccac05cd47"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18329",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18323_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18297_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18269_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18263_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18472",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18442",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18442": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18472": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18329": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18297_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18263_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18247",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18266_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18269_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18323_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18297_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18289",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "9a7ec36433cb908a4225ebda2726e33cd370d6510ce5984f8343b8c9d7f57e14",
          "withoutMetadata": "9a7ec36433cb908a4225ebda2726e33cd370d6510ce5984f8343b8c9d7f57e14",
          "linkedWithoutMetadata": "9a7ec36433cb908a4225ebda2726e33cd370d6510ce5984f8343b8c9d7f57e14"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18329",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18323_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18297_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18269_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18263_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18472",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18442",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18442": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18472": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18329": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18297_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18263_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18247",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18266_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18269_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18323_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18297_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18289",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18329",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18323_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18297_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18269_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18289": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18329": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18297_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18247,t_struct(FeeRates)18266_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18266_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18269_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18323_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18297_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18289",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)18263_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)18472",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)18442",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18442": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18472": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)18263_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18247",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)18247,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)18247)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)18247)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18247": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)18247,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "44d8d7d82c8424f9772208cb1f7b7ae0dfedc95b8f104a10436e25c9c41ce0f5",
          "withoutMetadata": "58909788ac511389d2ea7c36bb8ddf0cf5d9ef8695dc30ee10a146d777b9f5d5",
          "linkedWithoutMetadata": "58909788ac511389d2ea7c36bb8ddf0cf5d9ef8695dc30ee10a146d777b9f5d5"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "08a709d188361c2ff9dc5e4f6fe4c9c36c8b90b49216eb9ab00989fe3e73a229",
          "withoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88",
          "linkedWithoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112",
          "console"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)18281",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "28d51d0099c9a9380da958bd51f98e896720ac8b143acbaff47c268644c20a96",
          "withoutMetadata": "505544bb11b4fa1d4ddf15f43e4c945c4b9cffc9d4d78471554789c6938998a3",
          "linkedWithoutMetadata": "505544bb11b4fa1d4ddf15f43e4c945c4b9cffc9d4d78471554789c6938998a3"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11262,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12845,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13027,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13214,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14889,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18142,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)18239,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)18239)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)6142_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)9612",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)18239)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9612": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)6142_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)6137_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)6142_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "fccc75a7c8e6be036eeec11a3de7c9795b8622062d8975b57d3d0f6209a2c929",
          "withoutMetadata": "f829ffa5d8f10627bad019d57abed214a1e5a10e49142c007a507cbd2369b669",
          "linkedWithoutMetadata": "f829ffa5d8f10627bad019d57abed214a1e5a10e49142c007a507cbd2369b669"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "d739684bb8ef7eddbd2bd6b31394931e5bf4c1eabbbee48af3880c776164efd4",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "7ce7df25939f14d0f2991157d1c2d095417f7fdf430cc58dcfc70cc15b38bc44",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ControlCenter": {
        "src": "contracts\\periphery\\ControlCenter.sol:14",
        "version": {
          "withMetadata": "cd3ff676a1f3dcc357e55ed5f512c5d5c9923e7aec1ea850f6d227917aca6012",
          "withoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7",
          "linkedWithoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "Node",
          "INode",
          "IControlCenter"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOwner()",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "setLiquidityChangeLimit(uint256)",
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))",
          "setPriceChangeLimit(uint256)",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 29623,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30047,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31043,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31225,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31412,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31975,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ControlCenter",
            "src": "contracts\\periphery\\ControlCenter.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\periphery\\ControlCenter.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:116"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:118"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "pairStateAtSessionDetect",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)10789_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:29"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:30"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:32"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:116"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)10800_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:117"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CLFeed)10800_storage)": {
              "label": "mapping(address => struct ControlCenter.CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)10789_storage)": {
              "label": "mapping(address => struct ControlCenter.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)10800_storage": {
              "label": "struct ControlCenter.CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairStateSessionTagged)10789_storage": {
              "label": "struct ControlCenter.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "66a5df011bf06bb4f348790e3ac7ec4f2f6ddc0f5b76453d91ae44581070ee28",
          "withoutMetadata": "66a5df011bf06bb4f348790e3ac7ec4f2f6ddc0f5b76453d91ae44581070ee28",
          "linkedWithoutMetadata": "66a5df011bf06bb4f348790e3ac7ec4f2f6ddc0f5b76453d91ae44581070ee28"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "83989cb524578cc1505d6afec6b7a9d45150c821d1d1b006a85f4e0574ac0b8b",
          "withoutMetadata": "83989cb524578cc1505d6afec6b7a9d45150c821d1d1b006a85f4e0574ac0b8b",
          "linkedWithoutMetadata": "83989cb524578cc1505d6afec6b7a9d45150c821d1d1b006a85f4e0574ac0b8b"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)18239,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)18239)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)18239)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)18239,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "ec3c0eaa353bf127d8859450b295a649340ff48fbbffd8da64c899048219512b",
          "withoutMetadata": "f829ffa5d8f10627bad019d57abed214a1e5a10e49142c007a507cbd2369b669",
          "linkedWithoutMetadata": "f829ffa5d8f10627bad019d57abed214a1e5a10e49142c007a507cbd2369b669"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "059978eabc86e7beeaba190adf4bf8ec05321477d814304e00202546cfb45aae",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "325cca1f1266743455bcda2d77393f6b5582bce540b7440ea7e637a7338dde11",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "b14cedd87a501ae805e5d6eac1c31c613de4baa2c92f14f451373ce58c75c137",
          "withoutMetadata": "b14cedd87a501ae805e5d6eac1c31c613de4baa2c92f14f451373ce58c75c137",
          "linkedWithoutMetadata": "b14cedd87a501ae805e5d6eac1c31c613de4baa2c92f14f451373ce58c75c137"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8215",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8209_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8183_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8155_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8133,t_struct(FeeRates)8152_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8149_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8358",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8328",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8328": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8358": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8133": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8175": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8215": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8183_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8133,t_struct(FeeRates)8152_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8149_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8133",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8152_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8155_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8209_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8183_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8175",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "47c79cfb0363087dbde4430c7c3822ca1f4361b177b79ea21a84d6c2860787ad",
          "withoutMetadata": "47c79cfb0363087dbde4430c7c3822ca1f4361b177b79ea21a84d6c2860787ad",
          "linkedWithoutMetadata": "47c79cfb0363087dbde4430c7c3822ca1f4361b177b79ea21a84d6c2860787ad"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8215",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8209_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8183_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8155_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8133,t_struct(FeeRates)8152_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8149_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8358",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8328",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8328": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8358": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8133": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8175": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8215": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8183_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8133,t_struct(FeeRates)8152_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8149_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8133",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8152_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8155_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8209_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8183_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8175",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8215",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8209_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8183_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8155_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8133,t_struct(FeeRates)8152_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8133": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8175": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8215": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8183_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8133,t_struct(FeeRates)8152_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8152_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8155_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8209_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8183_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8175",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8149_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8358",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8328",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8328": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8358": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8133": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8149_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8133",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "a09c6f95f9f1c8b5ecdbbc3c4f0b414c8b5718fab3b970a9e71c1d17d244e301",
          "withoutMetadata": "9626949e2b4609affcfede17dabe209cbaf4e9ba9f392f2ac14f8805dbb1304f",
          "linkedWithoutMetadata": "9626949e2b4609affcfede17dabe209cbaf4e9ba9f392f2ac14f8805dbb1304f"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "83f7a38f3a7b7a879a0539343d4cbd6011a05fc183159988fd73a5a4712f74b2",
          "withoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88",
          "linkedWithoutMetadata": "5f1050575609d2ebd014763d72536391b96950ff0c03cf13c633827cb3076f88"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112",
          "console"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)18281",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "d6163895b027fce9e705f206517ea16d237904a8fe5c6f413e289a6cb41ecab9",
          "withoutMetadata": "983171f7e714bf9ada5d67c14357ae6a115bfccd23e13c27bf5bdbf1b386aeef",
          "linkedWithoutMetadata": "983171f7e714bf9ada5d67c14357ae6a115bfccd23e13c27bf5bdbf1b386aeef"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11268,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12851,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13033,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13220,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14895,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18148,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)18239,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)18239)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)6137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)6142_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)9612",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)18239)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)9612": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)6142_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)6137_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)6142_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "e055a6d4559812e761498d78c880a0a5927a17882066c9d2e6a3c93e045303db",
          "withoutMetadata": "3b07a95f82954463a839c9ff3a0ff52302e7e20ef974ff6e43e4ac87a20521ea",
          "linkedWithoutMetadata": "3b07a95f82954463a839c9ff3a0ff52302e7e20ef974ff6e43e4ac87a20521ea"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "059978eabc86e7beeaba190adf4bf8ec05321477d814304e00202546cfb45aae",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "a2dea70c5863261eb68164d3a568ebbf1b9b6d7ac46343f93468c4a34f61bbe2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ControlCenter": {
        "src": "contracts\\periphery\\ControlCenter.sol:14",
        "version": {
          "withMetadata": "bc3c7f727b5a0ff3ee294e33c81d93a02ab471a1abead096e10100ef94a218e0",
          "withoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7",
          "linkedWithoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "Node",
          "INode",
          "IControlCenter"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOwner()",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "setLiquidityChangeLimit(uint256)",
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))",
          "setPriceChangeLimit(uint256)",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 29623,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30047,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31043,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31225,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31412,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31975,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ControlCenter",
            "src": "contracts\\periphery\\ControlCenter.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\periphery\\ControlCenter.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:116"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:118"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "pairStateAtSessionDetect",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)10789_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:29"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:30"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:32"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:116"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)10800_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:117"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CLFeed)10800_storage)": {
              "label": "mapping(address => struct ControlCenter.CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)10789_storage)": {
              "label": "mapping(address => struct ControlCenter.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)10800_storage": {
              "label": "struct ControlCenter.CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairStateSessionTagged)10789_storage": {
              "label": "struct ControlCenter.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "232758333829766266bcd11a5474d08739e3d09734c4767c5955e1a66ff34add",
          "withoutMetadata": "232758333829766266bcd11a5474d08739e3d09734c4767c5955e1a66ff34add",
          "linkedWithoutMetadata": "232758333829766266bcd11a5474d08739e3d09734c4767c5955e1a66ff34add"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "411e8172bd5e77e811740919e28a5dc715c2925c3006d41a404940a29f9164c6",
          "withoutMetadata": "411e8172bd5e77e811740919e28a5dc715c2925c3006d41a404940a29f9164c6",
          "linkedWithoutMetadata": "411e8172bd5e77e811740919e28a5dc715c2925c3006d41a404940a29f9164c6"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)18321",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)18315_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)18289_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)18261_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)18281": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)18321": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)18289_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)18239,t_struct(FeeRates)18258_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)18258_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)18261_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)18315_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)18289_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)18281",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)18255_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)18464",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)18434",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)18434": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)18464": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)18255_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)18239",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)18239,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)18239)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)18239)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)18239": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)18239,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "540102e0c0c68326a1a8d5c60c7f2c6c70083bd005c26ad6ecd103b950a94dc4",
          "withoutMetadata": "9cefab58f0d53bb3a9943e34c5010cbf89e75e0130930fce450ebee3ee275e4e",
          "linkedWithoutMetadata": "9cefab58f0d53bb3a9943e34c5010cbf89e75e0130930fce450ebee3ee275e4e"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11234,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12817,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12999,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13186,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14861,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18145,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8117",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8111_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8085_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8057_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8035,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8035)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8051_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8260",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8230",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3112_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3112_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3112_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3117_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5690",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8035)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5690": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8230": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8260": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8077": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8117": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8085_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3117_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8035,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8051_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8035",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8054_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8057_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8111_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8085_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8077",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3112_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3117_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8117",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8111_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8085_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8057_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8077": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8117": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8085_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8054_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8057_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8111_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8085_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8077",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8051_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8260",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8230",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8230": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8260": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8051_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8035",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8035,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8035)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8035)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8035,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "39bb545fe81d0af195b9531932fdcb9bfe4fb22eafe88989d693695d3e51d219",
          "withoutMetadata": "127678248532c92a86858c099563efd8420282c1ac12f7978b055479f28dbd3a",
          "linkedWithoutMetadata": "127678248532c92a86858c099563efd8420282c1ac12f7978b055479f28dbd3a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11244,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12827,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13009,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13196,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14871,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18299,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8142",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8136_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8110_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8082_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8060,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8060)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8076_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8285",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8255",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3142_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5715",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8060)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5715": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8255": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8285": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8102": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8142": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8110_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3142_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8076_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8060",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8079_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8082_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8136_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8110_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8102",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3137_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3142_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8142",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8136_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8110_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8082_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8102": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8142": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8110_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8079_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8082_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8136_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8110_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8102",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8076_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8285",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8255",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8255": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8285": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8076_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8060",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8060,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8060)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8060)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8060,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "34c917d44c5305348cd07d4bbdaca3ac7923a762519dc8523c29a2f3c9053a66",
          "withoutMetadata": "323c85b64214bcea3fd12d5f586df94b5861ace31c264ea94b476fe9351b6b13",
          "linkedWithoutMetadata": "323c85b64214bcea3fd12d5f586df94b5861ace31c264ea94b476fe9351b6b13"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11244,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12827,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13009,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13196,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14871,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18299,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8142",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8136_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8110_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8082_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8060,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8060)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8076_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8285",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8255",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3142_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5715",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8060)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5715": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8255": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8285": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8102": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8142": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8110_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3142_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8076_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8060",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8079_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8082_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8136_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8110_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8102",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3137_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3142_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8142",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8136_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8110_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8082_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8102": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8142": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8110_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8079_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8082_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8136_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8110_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8102",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8076_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8285",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8255",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8255": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8285": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8076_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8060",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8060,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8060)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8060)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8060,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "4703ffeeaad46a270fea072e9bc65c99763aad02818fa3fdfc12f64644426532",
          "withoutMetadata": "00518cdb209952f77d575a87f783a0885f19638144792b617f04381d2949064d",
          "linkedWithoutMetadata": "00518cdb209952f77d575a87f783a0885f19638144792b617f04381d2949064d"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11247,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12830,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13012,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13199,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14874,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18302,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8142",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8136_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8110_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8082_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8060,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8060)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8076_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8285",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8255",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3137_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3142_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5715",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8060)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5715": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8255": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8285": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8102": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8142": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8110_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3142_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8076_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8060",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8079_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8082_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8136_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8110_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8102",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3137_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3142_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8142",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8136_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8110_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8082_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8102": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8142": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8110_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8060,t_struct(FeeRates)8079_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8079_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8082_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8136_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8110_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8102",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8076_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8285",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8255",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8255": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8285": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8076_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8060",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8060,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8060)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8060)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8060": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8060,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "dea331aff6d4c297c5c197a2fed510679698e68e34e1f20cad19693de2904c69",
          "withoutMetadata": "75713caf93a9efd04953a6ccebca9aa38d959d21237e53cf7f1d3549f4e8f212",
          "linkedWithoutMetadata": "75713caf93a9efd04953a6ccebca9aa38d959d21237e53cf7f1d3549f4e8f212"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12820,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13002,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13189,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14864,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18221,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8135",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8129_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8103_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8075_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8053,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8053)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8069_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8278",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8248",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3130_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3130_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3130_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3135_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5708",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8053)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5708": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8248": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8278": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8095": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8135": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8103_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3135_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8053,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8069_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8053",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8072_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8075_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8129_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8103_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8095",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3130_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3135_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8135",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8129_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8103_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8075_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8095": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8135": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8103_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8072_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8075_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8129_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8103_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8095",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8069_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8278",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8248",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8248": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8278": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8069_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8053",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8053,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8053)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8053)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8053,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "b108239cb14c922f3c93b6e8baac4dee729a20faef76c5eece4f5df22b48a9be",
          "withoutMetadata": "4fc533df335d9be94bd81407a603658fb6f0f4cf5136b64fab4dfcbed57eacbe",
          "linkedWithoutMetadata": "4fc533df335d9be94bd81407a603658fb6f0f4cf5136b64fab4dfcbed57eacbe"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12820,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13002,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13189,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14864,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18148,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8117",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8111_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8085_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8057_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8035,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8035)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8051_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8260",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8230",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3112_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3112_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3112_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3117_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5690",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:195"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8035)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5690": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8230": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8260": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8077": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8117": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8085_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3117_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8035,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8051_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8035",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8054_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8057_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8111_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8085_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8077",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3112_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3117_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8117",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8111_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8085_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8057_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8077": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8117": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8085_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8035,t_struct(FeeRates)8054_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8054_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8057_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8111_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8085_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8077",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8051_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8260",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8230",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8230": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8260": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8051_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8035",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8035,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8035)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8035)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8035": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8035,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "39c240e95b1097aaee809ddbe10e4baeccdcc1710c01840de3ba54dc96d8fcbf",
          "withoutMetadata": "ced0b7e6a94e5897ec5dd18114fd3dac5211f83195bbcc59977105cbbd3df907",
          "linkedWithoutMetadata": "ced0b7e6a94e5897ec5dd18114fd3dac5211f83195bbcc59977105cbbd3df907"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11255,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12838,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13020,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13207,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14882,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18166,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8127",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8121_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8095_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8067_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8045,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8045)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8061_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8270",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8240",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3122_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3122_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3122_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3127_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5700",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:195"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8045)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5700": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8240": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8270": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8087": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8127": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8095_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3127_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8045,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8061_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8045",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8064_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8067_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8121_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8095_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8087",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3122_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3127_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8127",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8121_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8095_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8067_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8087": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8127": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8095_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8064_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8067_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8121_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8095_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8087",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8061_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8270",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8240",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8240": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8270": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8061_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8045",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8045,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8045)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8045)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8045,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "806742f17196ee53c1a59d0bf3d09a50285da7fe68fb589e01ed9e1dbc4e01de",
          "withoutMetadata": "9d4e664a2c5265c31bc329d428e0f215afcdb5e3f03aa9d18f7b8c1d8150a79f",
          "linkedWithoutMetadata": "9d4e664a2c5265c31bc329d428e0f215afcdb5e3f03aa9d18f7b8c1d8150a79f"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11215,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12798,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12980,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13167,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18126,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8127",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8121_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8095_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8067_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8045,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8045)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8061_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8270",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8240",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3122_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3122_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3122_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3127_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5700",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:195"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8045)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5700": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8240": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8270": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8087": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8127": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8095_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3127_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8045,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8061_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8045",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8064_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8067_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8121_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8095_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8087",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3122_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3127_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8127",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8121_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8095_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8067_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8087": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8127": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8095_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8045,t_struct(FeeRates)8064_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8064_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8067_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8121_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8095_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8087",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8061_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8270",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8240",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8240": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8270": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8061_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8045",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8045,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8045)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8045)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8045": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8045,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "ee6ebf3b09cc30d57b1807be86010b8028e6efeb3a9a007755d24e36b7a6c59c",
          "withoutMetadata": "b3869a5d089b020b733accb8fcee2254e93ba729253fbf121313a2c9eb69e1d8",
          "linkedWithoutMetadata": "b3869a5d089b020b733accb8fcee2254e93ba729253fbf121313a2c9eb69e1d8"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "IntegralMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11215,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12798,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12980,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13167,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18111,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:197"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8124",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8118_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8092_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8064_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8042,t_struct(FeeRates)8061_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8042,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8042)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8058_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8267",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8237",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3119_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3119_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3119_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3124_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5697",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:195"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8042)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5697": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8237": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8267": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8042": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8084": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8124": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8092_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3124_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8042,t_struct(FeeRates)8061_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8042,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8058_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8042",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8061_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8064_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8118_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8092_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8084",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3119_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3124_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8124",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8118_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8092_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8064_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8042,t_struct(FeeRates)8061_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8042": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8084": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8124": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8092_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8042,t_struct(FeeRates)8061_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8061_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8064_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8118_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8092_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8084",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8058_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8267",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8237",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8237": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8267": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8042": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8058_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8042",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8042,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8042)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8042)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8042": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8042,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "df7b55b403acadb3ddb949dff1cf499c5ec694802c8e80a2d1fcc0c93aae7ca8",
          "withoutMetadata": "df7b55b403acadb3ddb949dff1cf499c5ec694802c8e80a2d1fcc0c93aae7ca8",
          "linkedWithoutMetadata": "df7b55b403acadb3ddb949dff1cf499c5ec694802c8e80a2d1fcc0c93aae7ca8"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11510,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13093,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13275,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13462,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15137,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18573,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:198"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8135",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8129_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8103_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8075_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8053,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8053)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8069_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8278",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8248",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3130_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3130_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3130_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3135_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5708",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:196"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8053)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5708": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8248": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8278": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8095": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8135": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8103_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3135_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8053,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8069_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8053",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8072_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8075_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8129_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8103_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8095",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3130_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3135_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8135",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8129_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8103_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8075_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8095": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8135": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8103_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8053,t_struct(FeeRates)8072_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8072_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8075_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8129_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8103_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8095",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8069_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8278",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8248",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8248": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8278": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8069_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8053",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8053,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8053)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8053)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8053": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8053,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "e0803272075caaff82183f94225f0cb9ad21089dca662f90b4f248766ed03086",
          "withoutMetadata": "e0803272075caaff82183f94225f0cb9ad21089dca662f90b4f248766ed03086",
          "linkedWithoutMetadata": "e0803272075caaff82183f94225f0cb9ad21089dca662f90b4f248766ed03086"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12148,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13731,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13913,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14100,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15775,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19271,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:198"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8131,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8131)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3208_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3208_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3208_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3213_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5786",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:196"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8131)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5786": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3213_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8131,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3208_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3213_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8131,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8131)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8131)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8131,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "03e91b27e97847a8968768bd44a8fe18812e704f6ba591b517158a278906a22e",
          "withoutMetadata": "03e91b27e97847a8968768bd44a8fe18812e704f6ba591b517158a278906a22e",
          "linkedWithoutMetadata": "03e91b27e97847a8968768bd44a8fe18812e704f6ba591b517158a278906a22e"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12146,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13729,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13911,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14098,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15773,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19269,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:198"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8131,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8131)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3208_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3208_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3208_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3213_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5786",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:196"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8131)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5786": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3213_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8131,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3208_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3213_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8213",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8207_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8181_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8153_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8173": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8213": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8181_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8131,t_struct(FeeRates)8150_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8150_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8153_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8207_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8181_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8173",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8147_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8356",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8326",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8326": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8356": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8147_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8131",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8131,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8131)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8131)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8131": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8131,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "1a1ceb0ad33a9a2175d1aa812d7de2a49128d6572c183ca364baa17325114d24",
          "withoutMetadata": "3b07a95f82954463a839c9ff3a0ff52302e7e20ef974ff6e43e4ac87a20521ea",
          "linkedWithoutMetadata": "3b07a95f82954463a839c9ff3a0ff52302e7e20ef974ff6e43e4ac87a20521ea"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "0b6a02c74af7c646563de7fe78268b4cdde96a2566be55c6221d6d1acd8d4b03",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "3a8baa8ccb344b37b563e74ac47e02ecd6c892296bd35c8db3c43746ac82452c",
          "withoutMetadata": "3a8baa8ccb344b37b563e74ac47e02ecd6c892296bd35c8db3c43746ac82452c",
          "linkedWithoutMetadata": "3a8baa8ccb344b37b563e74ac47e02ecd6c892296bd35c8db3c43746ac82452c"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8198",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8192_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8166_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8138_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8116,t_struct(FeeRates)8135_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8132_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8311",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8311": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8341": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8116": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8158": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8198": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8166_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8116,t_struct(FeeRates)8135_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8132_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8116",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8135_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8138_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8192_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8166_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8158",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "11cd1d173d15bf90caed19d8dff5153d14370dc5191348cbdb03d30c7e5024bd",
          "withoutMetadata": "11cd1d173d15bf90caed19d8dff5153d14370dc5191348cbdb03d30c7e5024bd",
          "linkedWithoutMetadata": "11cd1d173d15bf90caed19d8dff5153d14370dc5191348cbdb03d30c7e5024bd"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8198",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8192_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8166_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8138_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8116,t_struct(FeeRates)8135_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)8132_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)8341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)8311",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8311": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8341": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8116": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8158": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8198": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8166_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8116,t_struct(FeeRates)8135_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8132_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8116",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8135_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8138_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8192_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8166_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8158",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8198",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8192_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8166_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8138_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8116,t_struct(FeeRates)8135_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8116": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8158": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8198": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8166_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8116,t_struct(FeeRates)8135_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8135_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8138_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8192_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8166_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8158",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8132_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8341",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8311",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8311": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8341": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8116": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8132_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8116",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "5f05576d83d908dd7adaa32d9ae86ecd2ded11b779296dbb931064b62f38f8fb",
          "withoutMetadata": "72a2b399c39dbce572ceae77b711f585e11ee50d831897d971a5c395baeb5987",
          "linkedWithoutMetadata": "72a2b399c39dbce572ceae77b711f585e11ee50d831897d971a5c395baeb5987"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12118,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13701,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13883,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14070,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15745,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19245,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:198"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8210",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8204_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8178_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8150_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8128,t_struct(FeeRates)8147_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8128,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8128)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8144_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8353",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8323",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3205_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3205_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3205_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "65",
              "type": "t_mapping(t_address,t_struct(User)3210_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "_nonUserSumTokens",
              "offset": 0,
              "slot": "66",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "_buysell_burn_rate",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "_shift_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "69",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "73",
              "type": "t_contract(AnalyticMath)5783",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:196"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8128)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5783": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8323": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8353": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8128": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8170": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8210": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8178_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3210_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8128,t_struct(FeeRates)8147_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8128,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8144_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8147_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8150_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8204_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8178_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8170",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3205_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3210_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8210",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8204_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8178_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8150_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8128,t_struct(FeeRates)8147_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8128": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8170": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8210": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8178_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8128,t_struct(FeeRates)8147_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8147_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8150_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8204_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8178_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8170",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8144_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8353",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8323",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8323": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8353": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8128": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8144_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8128,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8128)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8128)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8128": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8128,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "824d5d01f348e214d016d2987adb02cc8ad084d785775e3adbe41d8a88faca1a",
          "withoutMetadata": "a34f13a6122bd5230cb8e7e091865aa76b915003eed9e6181f729dd239a35fd5",
          "linkedWithoutMetadata": "a34f13a6122bd5230cb8e7e091865aa76b915003eed9e6181f729dd239a35fd5"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12120,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13714,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13896,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14083,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15758,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19258,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:199"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8212",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8206_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8180_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8152_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8130,t_struct(FeeRates)8149_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8130,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8130)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8146_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8355",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8325",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3207_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3207_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3207_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3212_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5785",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:197"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8130)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5785": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8325": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8355": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8130": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8172": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8212": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8180_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3212_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8130,t_struct(FeeRates)8149_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8130,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8146_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8130",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8149_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8152_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8206_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8180_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8172",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3207_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3212_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8212",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8206_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8180_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8152_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8130,t_struct(FeeRates)8149_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8130": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8172": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8212": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8180_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8130,t_struct(FeeRates)8149_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8149_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8152_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8206_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8180_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8172",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8146_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8355",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8325",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8325": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8355": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8130": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8146_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8130",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8130,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8130)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8130)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8130": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8130,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "40be9da3f16b147e1aa2194445dbe4a929e8ba72e3d0ff38016024a065743213",
          "withoutMetadata": "db58492670de5d824da8f896107f77c9ace90f826a33d931deeff293899503b7",
          "linkedWithoutMetadata": "db58492670de5d824da8f896107f77c9ace90f826a33d931deeff293899503b7"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12104,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13698,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13880,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14067,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15742,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19242,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:198"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8209",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8203_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8177_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8149_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8127,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8127)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8143_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8352",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8322",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3204_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3204_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3204_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3209_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5782",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:196"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8127)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5782": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8322": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8352": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8169": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8209": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8177_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3209_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8127,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8143_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8127",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8146_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8149_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8203_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8177_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8169",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3204_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3209_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8209",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8203_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8177_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8149_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8169": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8209": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8177_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8146_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8149_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8203_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8177_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8169",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8143_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8352",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8322",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8322": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8352": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8143_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8127",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8127,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8127)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8127)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8127,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "f8043459ab23e2d26175666fdd32239558247b114c725923b71d5846ad0296f5",
          "withoutMetadata": "db58492670de5d824da8f896107f77c9ace90f826a33d931deeff293899503b7",
          "linkedWithoutMetadata": "db58492670de5d824da8f896107f77c9ace90f826a33d931deeff293899503b7"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12104,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13698,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13880,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14067,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15742,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19242,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:198"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8209",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8203_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8177_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8149_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8127,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8127)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8143_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8352",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8322",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3204_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3204_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3204_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3209_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5782",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:196"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8127)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5782": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8322": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8352": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8169": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8209": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8177_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3209_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8127,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8143_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8127",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8146_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8149_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8203_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8177_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8169",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3204_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3209_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8209",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8203_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8177_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8149_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8169": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8209": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8177_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8127,t_struct(FeeRates)8146_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8146_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8149_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8203_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8177_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8169",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8143_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8352",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8322",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8322": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8352": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8143_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8127",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8127,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8127)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8127)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8127": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8127,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "b701c417b65f910f96a4f1a3dbea388d393042a0d673156b623fbe13db84d89c",
          "withoutMetadata": "070ec8b17d75537d1f0b4fb46aea965a42c5800b2ac95dabeb0168837ae7c224",
          "linkedWithoutMetadata": "070ec8b17d75537d1f0b4fb46aea965a42c5800b2ac95dabeb0168837ae7c224"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11977,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13571,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13753,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13940,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15615,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18990,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:196"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8199",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8193_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8167_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8139_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8117,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8117)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8133_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8342",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8312",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3194_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3194_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3194_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3199_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5772",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8117)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5772": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8312": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8342": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8159": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8199": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8167_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3199_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8117,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8133_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8117",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8136_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8139_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8193_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8167_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8159",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3194_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3199_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8199",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8193_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8167_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8139_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8159": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8199": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8167_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8136_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8139_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8193_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8167_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8159",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8133_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8342",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8312",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8312": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8342": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8133_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8117",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8117,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8117)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8117)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8117,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "5d16bc14399d03f102c3bc978a29c7bbd9479f03fae7e62c3d68cc48cccfa3cb",
          "withoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a",
          "linkedWithoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11974,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13568,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13750,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13937,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15612,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18748,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:196"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8199",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8193_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8167_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8139_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8117,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8117)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8133_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8342",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8312",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3194_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3194_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3194_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3199_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5772",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:194"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8117)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5772": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8312": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8342": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8159": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8199": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8167_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3199_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8117,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8133_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8117",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8136_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8139_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8193_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8167_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8159",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3194_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3199_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8199",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8193_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8167_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8139_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8159": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8199": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8167_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8117,t_struct(FeeRates)8136_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8136_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8139_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8193_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8167_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8159",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8133_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8342",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8312",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8312": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8342": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8133_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8117",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8117,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8117)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8117)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8117": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8117,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "5a1a8d1c7652152e3204176cbcf53bdb17f233a010d981012349da90788b192a",
          "withoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a",
          "linkedWithoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console",
          "IntegralMath"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11974,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13568,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13750,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13937,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15612,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18748,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:195"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8192",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8186_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8160_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8132_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8110,t_struct(FeeRates)8129_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8110,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8110)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8126_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8335",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8305",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3187_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3187_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3187_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3192_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5765",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:193"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8110)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5765": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8305": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8335": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8110": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8152": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8192": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8160_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3192_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8110,t_struct(FeeRates)8129_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8110,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8126_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8110",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8129_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8132_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8186_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8160_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8152",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3187_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3192_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8192",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8186_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8160_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8132_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8110,t_struct(FeeRates)8129_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8110": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8152": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8192": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8160_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8110,t_struct(FeeRates)8129_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8129_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8132_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8186_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8160_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8152",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8126_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8335",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8305",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8305": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8335": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8110": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8126_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8110",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8110,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8110)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8110)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8110": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8110,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:25",
        "version": {
          "withMetadata": "e4c98e2bdb1b1ccb0720e38d2508bd3684bc6e3d7db4ef4ca95772953a67ba43",
          "withoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a",
          "linkedWithoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11974,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13568,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13750,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13937,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15612,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18748,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:195"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:53"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8187",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8181_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8155_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8127_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8105,t_struct(FeeRates)8124_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8105,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8105)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8121_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8330",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8300",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:46"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3182_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3182_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3182_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3187_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:68"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5760",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:193"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8105)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5760": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8300": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8330": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8105": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8147": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8187": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8155_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3187_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8105,t_struct(FeeRates)8124_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8105,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8121_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8105",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8124_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8127_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8181_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8155_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8147",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3182_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3187_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8187",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8181_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8155_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8127_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8105,t_struct(FeeRates)8124_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8105": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8147": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8187": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8155_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8105,t_struct(FeeRates)8124_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8124_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8127_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8181_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8155_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8147",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8121_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8330",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8300",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8300": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8330": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8105": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8121_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8105",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8105,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8105)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8105)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8105": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8105,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "56fc72185e316acaf2821c7e6eb38df0533667fa9cb7e9cc039876376f5fbc2c",
          "withoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a",
          "linkedWithoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11974,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13568,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13750,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13937,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15612,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18748,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:194"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8186",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8180_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8154_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8126_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8104,t_struct(FeeRates)8123_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8104,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8104)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8120_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8329",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8299",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:53"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3181_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3181_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3181_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3186_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5759",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:192"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8104)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5759": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8299": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8329": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8104": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8146": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8186": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8154_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3186_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8104,t_struct(FeeRates)8123_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8104,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8120_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8104",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8123_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8126_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8180_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8154_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8146",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3181_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3186_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8186",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8180_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8154_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8126_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8104,t_struct(FeeRates)8123_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8104": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8146": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8186": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8154_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8104,t_struct(FeeRates)8123_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8123_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8126_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8180_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8154_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8146",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8120_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8329",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8299",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8299": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8329": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8104": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8120_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8104",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8104,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8104)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8104)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8104": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8104,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "3f6edd7df0278bbce887f250a0313f013bd2d4925c87b70440ac7479a7835a4a",
          "withoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a",
          "linkedWithoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11974,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13568,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13750,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13937,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15612,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18748,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:188"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8163",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8157_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8131_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8103_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8081,t_struct(FeeRates)8100_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)8081,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)8081)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)8097_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)8306",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)8276",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:53"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)3158_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)3158_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)3158_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)3163_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)5736",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)8081)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5736": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)8276": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8306": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8081": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8123": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8163": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8131_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)3163_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8081,t_struct(FeeRates)8100_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8081,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)8097_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8081",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)8100_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8103_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8157_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8131_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8123",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)3158_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)3163_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)8163",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)8157_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)8131_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)8103_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)8081,t_struct(FeeRates)8100_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8081": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)8123": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)8163": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)8131_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)8081,t_struct(FeeRates)8100_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)8100_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)8103_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)8157_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)8131_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)8123",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)8097_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)8306",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)8276",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)8276": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)8306": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)8081": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)8097_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)8081",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)8081,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)8081)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)8081)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)8081": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)8081,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "67ebaa443506466efe7ee5835353ca7caa5c3485ca8418de8d21b2b39179c2f5",
          "withoutMetadata": "7eaf6e2da372192c65ae6dd6fa3ba2298f35fb14a7a18391f0b8200e2d1c6918",
          "linkedWithoutMetadata": "7eaf6e2da372192c65ae6dd6fa3ba2298f35fb14a7a18391f0b8200e2d1c6918"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "284a66646cd8d6d6a48c7bb7054d6e0b4fbb4b2b4ea0188bb3cfcc3af85c808f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:30",
        "version": {
          "withMetadata": "44dee444022ed31117597d649624b24a06b8359f7623f4487eb1f33558fda0ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Minimal": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3Pool": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\IUniswapV3Pool.sol:15",
        "inherit": [
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolActions": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolDerivedState": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolEvents": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolImmutables": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolOwnerActions": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolState": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Keep3r": {
        "src": "contracts\\agency\\Keep3r.sol:36",
        "version": {
          "withMetadata": "247a2f0e9e0f5abfc5ff12aab20ddc0255e37385381a1f94598b1eab541f8638",
          "withoutMetadata": "bcc7fdb52a9c0ba7bfe97bb9e0c51f1b88c3447170911177441e1e675329a342",
          "linkedWithoutMetadata": "bcc7fdb52a9c0ba7bfe97bb9e0c51f1b88c3447170911177441e1e675329a342"
        },
        "inherit": [
          "Keep3rKeepers",
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rJobs",
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobManager",
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "DustCollector",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IDustCollector",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rJobManager",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3r",
            "src": "contracts\\agency\\Keep3r.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rHelper": {
        "src": "contracts\\agency\\Keep3rHelper.sol:61",
        "version": {
          "withMetadata": "7551209577430ef46dc55ebde41c04124c5f7d5068fbe5c1ec9c196a77cc2ba1",
          "withoutMetadata": "088ae58818229a4235f06f9af49b31ed1999613fd64cdc2c5393d4183b049e29",
          "linkedWithoutMetadata": "088ae58818229a4235f06f9af49b31ed1999613fd64cdc2c5393d4183b049e29"
        },
        "inherit": [
          "Keep3rHelperParameters",
          "Governable",
          "IGovernable",
          "IKeep3rHelperParameters",
          "IKeep3rHelper"
        ],
        "libraries": [
          "Math"
        ],
        "methods": [
          "(address,address)",
          "quote(uint256)",
          "bonds(address)",
          "getRewardAmountFor(address,uint256)",
          "getRewardAmount(uint256)",
          "getRewardBoostFor(uint256)",
          "getPoolTokens(address)",
          "isKP3RToken0(address)",
          "getPaymentParams(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rHelper",
            "src": "contracts\\agency\\Keep3rHelper.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "minBoost",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
            },
            {
              "label": "maxBoost",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
            },
            {
              "label": "targetBond",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
            },
            {
              "label": "workExtraGas",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
            },
            {
              "label": "keep3rV2",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:38"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Kp3rWethPool)15678_storage",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(Kp3rWethPool)15678_storage": {
              "label": "struct IKeep3rHelperParameters.Kp3rWethPool",
              "members": [
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isKP3RToken0",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rHelperParameters": {
        "src": "contracts\\agency\\Keep3rHelperParameters.sol:15",
        "version": {
          "withMetadata": "280489bd37363cfe5b6cc1b6d28cdf9478a1e1d82a5856a0c233d66b32eb5527",
          "withoutMetadata": "5c6c1bfe73641d4a6f17cb8cc9de628dff7580698cc3a9384e90e7b0b02bed6a",
          "linkedWithoutMetadata": "5c6c1bfe73641d4a6f17cb8cc9de628dff7580698cc3a9384e90e7b0b02bed6a"
        },
        "inherit": [
          "Governable",
          "IGovernable",
          "IKeep3rHelperParameters"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setKp3rWethPool(address)",
          "setMinBoost(uint256)",
          "setMaxBoost(uint256)",
          "setTargetBond(uint256)",
          "setKeep3rV2(address)",
          "setWorkExtraGas(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rHelperParameters",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "minBoost",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxBoost",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "targetBond",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "workExtraGas",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "minBoost",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
            },
            {
              "label": "maxBoost",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
            },
            {
              "label": "targetBond",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
            },
            {
              "label": "workExtraGas",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
            },
            {
              "label": "keep3rV2",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:38"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Kp3rWethPool)15678_storage",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(Kp3rWethPool)15678_storage": {
              "label": "struct IKeep3rHelperParameters.Kp3rWethPool",
              "members": [
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isKP3RToken0",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniV3PairManager": {
        "src": "contracts\\agency\\UniV3PairManager.sol:79",
        "version": {
          "withMetadata": "b0f83baceba991984a3babc74950c1ccf8dfb72d27bcd72a1ffffcd5d7ce2c15",
          "withoutMetadata": "3a14169a35133af152528b4f6168a738b0fe6a61e15baa6f16d9a3c118659970",
          "linkedWithoutMetadata": "3a14169a35133af152528b4f6168a738b0fe6a61e15baa6f16d9a3c118659970"
        },
        "inherit": [
          "Governable",
          "IUniV3PairManager",
          "IPairManager",
          "IERC20Metadata",
          "IERC20",
          "IGovernable"
        ],
        "libraries": [
          "TickMath",
          "PoolAddress",
          "LiquidityAmounts"
        ],
        "methods": [
          "(address,address)",
          "mint(uint256,uint256,uint256,uint256,address)",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "burn(uint128,uint256,uint256,address)",
          "collect()",
          "position()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniV3PairManager",
            "src": "contracts\\agency\\UniV3PairManager.sol:124"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts\\agency\\UniV3PairManager.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token0",
            "src": "contracts\\agency\\UniV3PairManager.sol:89"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token1",
            "src": "contracts\\agency\\UniV3PairManager.sol:91"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts\\agency\\UniV3PairManager.sol:93"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fee",
            "src": "contracts\\agency\\UniV3PairManager.sol:94"
          },
          {
            "kind": "state-variable-immutable",
            "name": "sqrtRatioAX96",
            "src": "contracts\\agency\\UniV3PairManager.sol:96"
          },
          {
            "kind": "state-variable-immutable",
            "name": "sqrtRatioBX96",
            "src": "contracts\\agency\\UniV3PairManager.sol:99"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickLower",
            "src": "contracts\\agency\\UniV3PairManager.sol:102"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickUpper",
            "src": "contracts\\agency\\UniV3PairManager.sol:106"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickSpacing",
            "src": "contracts\\agency\\UniV3PairManager.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:82"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:83"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:86"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:115"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:119"
            },
            {
              "label": "_poolKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PoolKey)5348_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolKey)5348_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniV3PairManagerFactory": {
        "src": "contracts\\agency\\UniV3PairManagerFactory.sol:39",
        "version": {
          "withMetadata": "d8ccf8da17633a252e5f1e857684099cd2e9ec506b4bb1db57aa2c54bb85bffc",
          "withoutMetadata": "0b0c6944f44f67682c3c3d999cf094179410e7b642163571f019f7c9c13f6c7e",
          "linkedWithoutMetadata": "0b0c6944f44f67682c3c3d999cf094179410e7b642163571f019f7c9c13f6c7e"
        },
        "inherit": [
          "Governable",
          "IPairManagerFactory",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createPairManager(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniV3PairManagerFactory",
            "src": "contracts\\agency\\UniV3PairManagerFactory.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "pairManagers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UniV3PairManagerFactory",
              "src": "contracts\\agency\\UniV3PairManagerFactory.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FixedPoint96": {
        "src": "contracts\\agency\\libraries\\FixedPoint96.sol:4",
        "version": {
          "withMetadata": "29939713173e7e7679834a8843370e60798d034e7278544d7974c5cbe7bbb519",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FullMath": {
        "src": "contracts\\agency\\libraries\\FullMath.sol:7",
        "version": {
          "withMetadata": "8aa882f6d7f920fbe9ccb3b79b4bc2196cdd3952fef747afaf19b1c10807fa4a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LiquidityAmounts": {
        "src": "contracts\\agency\\libraries\\LiquidityAmounts.sol:8",
        "version": {
          "withMetadata": "8dba1070f17e00f4fcd2d38d4ed3169060aa3d5e5c3632423f310d51b8c15223",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint96",
          "FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PoolAddress": {
        "src": "contracts\\agency\\libraries\\PoolAddress.sol:4",
        "version": {
          "withMetadata": "f512f345c3a59738d9ab7e54428e066a5fa7c53a8ff6762f9b591dc57566cc90",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TickMath": {
        "src": "contracts\\agency\\libraries\\TickMath.sol:9",
        "version": {
          "withMetadata": "2f3beeaacd26e9c7a6b9ce59baf144f0b55cb58ab890c0f256de5ae61afbdbef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DustCollector": {
        "src": "contracts\\agency\\peripherals\\DustCollector.sol:10",
        "inherit": [
          "Governable",
          "IGovernable",
          "IDustCollector",
          "IBaseErrors"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "sendDust(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Governable": {
        "src": "contracts\\agency\\peripherals\\Governable.sol:6",
        "inherit": [
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "setGovernance(address)",
          "acceptGovernance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Governable",
            "src": "contracts\\agency\\peripherals\\Governable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rAccountance": {
        "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:7",
        "inherit": [
          "IKeep3rAccountance"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "jobs()",
          "keepers()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rDisputable": {
        "src": "contracts\\agency\\peripherals\\Keep3rDisputable.sol:8",
        "inherit": [
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rDisputable"
        ],
        "libraries": [],
        "methods": [
          "dispute(address)",
          "resolve(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rParameters": {
        "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:9",
        "inherit": [
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "setKeep3rHelper(address)",
          "setKeep3rV1(address)",
          "setKeep3rV1Proxy(address)",
          "setKp3rWethPool(address)",
          "setBondTime(uint256)",
          "setUnbondTime(uint256)",
          "setFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rParameters",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "bondTime",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unbondTime",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rRoles": {
        "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:8",
        "version": {
          "withMetadata": "45ee6e6c05c256ee0803915c3b5eb0bde0e3ea2bf6d62dda60d12767b9ebd6b7",
          "withoutMetadata": "0880a2db7b8b8d9a4dbe3b5ff3d889ba2d42d671a5d6d3708a36b0f48ac5eb96",
          "linkedWithoutMetadata": "0880a2db7b8b8d9a4dbe3b5ff3d889ba2d42d671a5d6d3708a36b0f48ac5eb96"
        },
        "inherit": [
          "Governable",
          "IGovernable",
          "IKeep3rRoles"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addSlasher(address)",
          "removeSlasher(address)",
          "addDisputer(address)",
          "removeDisputer(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rRoles",
            "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobDisputable": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobDisputable.sol:9",
        "inherit": [
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "slashTokenFromJob(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobFundableCredits": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:14",
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "addTokenCreditsToJob(address,address,uint256)",
          "withdrawTokenCreditsFromJob(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobManager": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobManager.sol:9",
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "IKeep3rJobManager"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "addJob(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "20",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobMigration": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:9",
        "inherit": [
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "migrateJob(address,address)",
          "acceptJobMigration(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobOwnership": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:6",
        "inherit": [
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [
          "changeJobOwnership(address,address)",
          "acceptJobOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobWorkable": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:11",
        "inherit": [
          "Keep3rJobMigration",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "isKeeper(address)",
          "isBondedKeeper(address,address,uint256,uint256,uint256)",
          "worked(address)",
          "bondedPayment(address,uint256)",
          "directTokenPayment(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobs": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobs.sol:8",
        "inherit": [
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobManager",
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobManager",
          "IKeep3rDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperDisputable": {
        "src": "contracts\\agency\\peripherals\\keepers\\Keep3rKeeperDisputable.sol:9",
        "inherit": [
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "slash(address,address,uint256,uint256)",
          "revoke(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperFundable": {
        "src": "contracts\\agency\\peripherals\\keepers\\Keep3rKeeperFundable.sol:15",
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "bond(address,uint256)",
          "activate(address)",
          "unbond(address,uint256)",
          "withdraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeepers": {
        "src": "contracts\\agency\\peripherals\\keepers\\Keep3rKeepers.sol:6",
        "inherit": [
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "000e7e9767510d4263d22330f3b4853a36ec710c407fb75a2c34721e32bd05ce",
          "withoutMetadata": "de17a0621650562271cd2c6303c6aada1db6aa53df1a95a0628b681d483c8667",
          "linkedWithoutMetadata": "de17a0621650562271cd2c6303c6aada1db6aa53df1a95a0628b681d483c8667"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30962",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30956_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30930_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30902_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30962": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30930_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)30899_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30902_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30956_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30930_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30922",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "0e0fc2abaeb52a3dbf82fcd6b414a08c8fbef76d2f668d76a2f1f172719ccaf1",
          "withoutMetadata": "ea7c5f970f6696cf4fe401973d55b4e4f11b97f10fcae5e4e29796698b45e90d",
          "linkedWithoutMetadata": "ea7c5f970f6696cf4fe401973d55b4e4f11b97f10fcae5e4e29796698b45e90d"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112",
          "console"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)30922",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockNumberLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Referral": {
        "src": "contracts\\farm\\Referral.sol:7",
        "version": {
          "withMetadata": "c6162edf527a939050aae575259960852679d865f2afdafcefc3ae0f7b3c3398",
          "withoutMetadata": "82fac4bd7405e54edcc5ead934551bd2d56200bd94ba1d12b80d1db09965997b",
          "linkedWithoutMetadata": "82fac4bd7405e54edcc5ead934551bd2d56200bd94ba1d12b80d1db09965997b"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IReferral"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setPayer(address)",
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getOutstandingCommission(address)",
          "debitOutstandingCommission(address,uint256)",
          "getReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Referral",
            "src": "contracts\\farm\\Referral.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "referrers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:8"
            },
            {
              "label": "countReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:9"
            },
            {
              "label": "totalReferralCommissions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:10"
            },
            {
              "label": "outstandingCommissions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:11"
            },
            {
              "label": "payer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "a49789a23ffdef7d078ca641773d85d7a9be1bc8957063a87ed53fb7d962c6c7",
          "withoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a",
          "linkedWithoutMetadata": "ea597396b704adb4fe8eb3b33422acae91d6e8509481a8856ee7a7e1e5e85f7a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "getStatus(address)",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "takeVotes(uint256)",
          "returnVotes(uint256)",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11974,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13568,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13750,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13937,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15612,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 18748,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:188"
          },
          {
            "kind": "state-variable-immutable",
            "name": "voteAccount",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30962",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30956_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30930_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30902_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)30880,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)30880)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)30896_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)31105",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)31075",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "_votes",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:53"
            },
            {
              "label": "_totalVotes",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "32",
              "type": "t_struct(Pulse)13927_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "43",
              "type": "t_struct(Pulse)13927_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:57"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "54",
              "type": "t_struct(Pulse)13927_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "avgNetAtAvgLastRound",
              "offset": 0,
              "slot": "65",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:60"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "66",
              "type": "t_mapping(t_address,t_struct(User)13932_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "67",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "68",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:63"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "69",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:64"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "70",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "71",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "72",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "73",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:67"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "74",
              "type": "t_contract(AnalyticMath)21312",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:186"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)30880)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)21312": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)31075": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)31105": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30962": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30930_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)13932_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)30896_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30880",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)30899_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30902_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30956_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30930_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30922",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)13927_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestBNumber",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycleBlocks",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "burnDone",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "initialRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "latestNet",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_struct(User)13932_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "VIRTUAL",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IReferral": {
        "src": "contracts\\farm\\interfaces\\IReferral.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getReferrer(address)",
          "getOutstandingCommission(address)",
          "debitOutstandingCommission(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "MAX_SUPPLY()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)",
          "takeVotes(uint256)",
          "returnVotes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BasicJob": {
        "src": "contracts\\for-test\\BasicJob.sol:6",
        "version": {
          "withMetadata": "2caf7b470391014a3f4163f9c03d8a3b4148cd89ed5b227c2baacdb0bdb435d4",
          "withoutMetadata": "a157dbbfbeac0008898705284ba68d43035dcf64ff8ac6e3c009f7b7f5a9ea38",
          "linkedWithoutMetadata": "a157dbbfbeac0008898705284ba68d43035dcf64ff8ac6e3c009f7b7f5a9ea38"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "work()",
          "workHard(uint256)",
          "workRefund(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicJob",
            "src": "contracts\\for-test\\BasicJob.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "keep3r",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BasicJob",
              "src": "contracts\\for-test\\BasicJob.sol:9"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BasicJob",
              "src": "contracts\\for-test\\BasicJob.sol:10"
            },
            {
              "label": "array",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BasicJob",
              "src": "contracts\\for-test\\BasicJob.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20ForTest": {
        "src": "contracts\\for-test\\ERC20ForTest.sol:6",
        "version": {
          "withMetadata": "03556eeeca281f3e148576eadfaea202a4f9d06fc229ac1277287a2c610f1d9f",
          "withoutMetadata": "8031c6d6a61864e0b1654e3d4b52962445ecc2b45907531c980f6e1463341160",
          "linkedWithoutMetadata": "8031c6d6a61864e0b1654e3d4b52962445ecc2b45907531c980f6e1463341160"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferInternal(address,address,uint256)",
          "approveInternal(address,address,uint256)",
          "deposit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20ForTest",
            "src": "contracts\\for-test\\ERC20ForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV3PoolForTest": {
        "src": "contracts\\for-test\\IUniswapV3PoolForTest.sol:8",
        "inherit": [
          "IUniswapV3Pool",
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables",
          "IERC20Minimal"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "JobForTest": {
        "src": "contracts\\for-test\\JobForTest.sol:6",
        "version": {
          "withMetadata": "ce4a212488210bb1d8374faf59970057810c3a2da8a8dac5b485ddd07fce515e",
          "withoutMetadata": "e79aa8d000e3f8fa95d0cbc93d3c3203f1e662fb862d8cabb8e83eb6b36da32d",
          "linkedWithoutMetadata": "e79aa8d000e3f8fa95d0cbc93d3c3203f1e662fb862d8cabb8e83eb6b36da32d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "work()",
          "workHard(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "JobForTest",
            "src": "contracts\\for-test\\JobForTest.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "keep3r",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "JobForTest",
              "src": "contracts\\for-test\\JobForTest.sol:8"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "JobForTest",
              "src": "contracts\\for-test\\JobForTest.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rForTest": {
        "src": "contracts\\for-test\\Keep3rForTest.sol:6",
        "version": {
          "withMetadata": "9d5e97cb79e70efb8f3841949150c22630b1c03cbdf5b9e77d8937cc09f8425e",
          "withoutMetadata": "ce49f0e4c7a80092e15c8966176acbf1c3f59c58b1ea1b5112b5fe0fb0d7ccdb",
          "linkedWithoutMetadata": "ce49f0e4c7a80092e15c8966176acbf1c3f59c58b1ea1b5112b5fe0fb0d7ccdb"
        },
        "inherit": [
          "Keep3r",
          "Keep3rKeepers",
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rJobs",
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobManager",
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "DustCollector",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IDustCollector",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rJobManager",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "viewTickOrder(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rForTest",
            "src": "contracts\\for-test\\Keep3rForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rHelperForTest": {
        "src": "contracts\\for-test\\Keep3rHelperForTest.sol:6",
        "version": {
          "withMetadata": "cd7c44a5a588c6371d972f7f67c00711caf25373045de24e7d178e15d317397e",
          "withoutMetadata": "23246aa1724553d0d56d31bfe00881fe6a62a083cb991c34f87c751402802da4",
          "linkedWithoutMetadata": "23246aa1724553d0d56d31bfe00881fe6a62a083cb991c34f87c751402802da4"
        },
        "inherit": [
          "Keep3rHelper",
          "Keep3rHelperParameters",
          "Governable",
          "IGovernable",
          "IKeep3rHelperParameters",
          "IKeep3rHelper"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setBaseFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rHelperForTest",
            "src": "contracts\\for-test\\Keep3rHelperForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "minBoost",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
            },
            {
              "label": "maxBoost",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
            },
            {
              "label": "targetBond",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
            },
            {
              "label": "workExtraGas",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
            },
            {
              "label": "keep3rV2",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:38"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Kp3rWethPool)15678_storage",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:41"
            },
            {
              "label": "basefee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Keep3rHelperForTest",
              "src": "contracts\\for-test\\Keep3rHelperForTest.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(Kp3rWethPool)15678_storage": {
              "label": "struct IKeep3rHelperParameters.Kp3rWethPool",
              "members": [
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isKP3RToken0",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniV3PairManagerForTest": {
        "src": "contracts\\for-test\\UniV3PairManagerForTest.sol:16",
        "version": {
          "withMetadata": "e48eef2d35336891dcb6f0b5bb769a3fdee51859b15917250aa79dfe3db05be9",
          "withoutMetadata": "b38dc91d1570ba1e443d76c72b04a1490e0e3765b85403a357e8ab0ef9d57d1e",
          "linkedWithoutMetadata": "b38dc91d1570ba1e443d76c72b04a1490e0e3765b85403a357e8ab0ef9d57d1e"
        },
        "inherit": [
          "UniV3PairManager",
          "Governable",
          "IUniV3PairManager",
          "IPairManager",
          "IERC20Metadata",
          "IERC20",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "internalAddLiquidity(uint256,uint256,uint256,uint256)",
          "internalPay(address,address,address,uint256)",
          "internalMint(address,uint256)",
          "internalBurn(address,uint256)",
          "internalTransferTokens(address,address,uint256)",
          "internalSafeTransferFrom(address,address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniV3PairManagerForTest",
            "src": "contracts\\for-test\\UniV3PairManagerForTest.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:82"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:83"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:86"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:115"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:119"
            },
            {
              "label": "_poolKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PoolKey)5348_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolKey)5348_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LiquidityAmountsForTest": {
        "src": "contracts\\for-test\\libraries\\LiquidityAmountsForTest.sol:10",
        "version": {
          "withMetadata": "5456f20dc5acd8983b47c4c67d2f8ce5aec1c36d0ccc8cbfa1e45c4b5839b51a",
          "withoutMetadata": "fabcf183a59141af743645791ebd037c74bf22b862b6e4b20b1901fba9d76b53",
          "linkedWithoutMetadata": "fabcf183a59141af743645791ebd037c74bf22b862b6e4b20b1901fba9d76b53"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint96",
          "FullMath"
        ],
        "methods": [
          "getLiquidityForAmount0(uint160,uint160,uint256)",
          "getLiquidityForAmount1(uint160,uint160,uint256)",
          "getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)",
          "getAmount0ForLiquidity(uint160,uint160,uint128)",
          "getAmount1ForLiquidity(uint160,uint160,uint128)",
          "getAmountsForLiquidity(uint160,uint160,uint160,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DustCollectorForTest": {
        "src": "contracts\\for-test\\peripherals\\DustCollectorForTest.sol:6",
        "version": {
          "withMetadata": "2dff10dd8063108f11cfa48c181abba6b65b192fef43d74fc11c08a1603207ed",
          "withoutMetadata": "e0829387857986b50707e60f236966d4bea0bebd6f20e039a8c5fe3f07f49201",
          "linkedWithoutMetadata": "e0829387857986b50707e60f236966d4bea0bebd6f20e039a8c5fe3f07f49201"
        },
        "inherit": [
          "DustCollector",
          "Governable",
          "IGovernable",
          "IDustCollector",
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DustCollectorForTest",
            "src": "contracts\\for-test\\peripherals\\DustCollectorForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernableForTest": {
        "src": "contracts\\for-test\\peripherals\\GovernableForTest.sol:6",
        "version": {
          "withMetadata": "d56f60d00aef7999501235b83bba83fea6b4eb73566eba9d984bbed387b5b9cd",
          "withoutMetadata": "d9968478e30c31f68c70ce5da20e7c00f2f23052ed8c59cd6299b2f8cd27279b",
          "linkedWithoutMetadata": "d9968478e30c31f68c70ce5da20e7c00f2f23052ed8c59cd6299b2f8cd27279b"
        },
        "inherit": [
          "Governable",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GovernableForTest",
            "src": "contracts\\for-test\\peripherals\\GovernableForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rAccountanceForTest": {
        "src": "contracts\\for-test\\peripherals\\Keep3rAccountanceForTest.sol:6",
        "version": {
          "withMetadata": "28c7634e9ad6cdcb43ac14108c2f1fc13c6e53796ac0fd93b7d9f804d3ba8fcc",
          "withoutMetadata": "338e3aa563f99a0da74a1ecdc0d6f41bbaaf06fce51d522914759dd923f4cd44",
          "linkedWithoutMetadata": "338e3aa563f99a0da74a1ecdc0d6f41bbaaf06fce51d522914759dd923f4cd44"
        },
        "inherit": [
          "Keep3rAccountance",
          "IKeep3rAccountance"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "setJob(address)",
          "setKeeper(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rDisputableForTest": {
        "src": "contracts\\for-test\\peripherals\\Keep3rDisputableForTest.sol:6",
        "version": {
          "withMetadata": "84d73ba503682c7ef166f6aad113154f6db2fc8941f08d0f01989dd44d2c747e",
          "withoutMetadata": "9af1007dc257ffde2ab885a7119b00a062b5a2c2f137da7b73dc13ffa2aac8a8",
          "linkedWithoutMetadata": "9af1007dc257ffde2ab885a7119b00a062b5a2c2f137da7b73dc13ffa2aac8a8"
        },
        "inherit": [
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rDisputable"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rDisputableForTest",
            "src": "contracts\\for-test\\peripherals\\Keep3rDisputableForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rParametersForTest": {
        "src": "contracts\\for-test\\peripherals\\Keep3rParametersForTest.sol:6",
        "version": {
          "withMetadata": "544ee97f97ca84810625c19432908e39b104c747867284af16098b74242f1772",
          "withoutMetadata": "22c33b8bc08c35ec2f4001aa946ac5ec031e5a657e09f0b97057757972333d1b",
          "linkedWithoutMetadata": "22c33b8bc08c35ec2f4001aa946ac5ec031e5a657e09f0b97057757972333d1b"
        },
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "viewLiquidityPool(address)",
          "viewIsKP3RToken0(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rParametersForTest",
            "src": "contracts\\for-test\\peripherals\\Keep3rParametersForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobDisputableForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobDisputableForTest.sol:6",
        "version": {
          "withMetadata": "654b568d4645add6db5f10e308d26a5b742dca6af691d480785575ff54462217",
          "withoutMetadata": "6785a273a010ee7d2fb6da03788041193b8159094c3f7debfa51063c1ecbe803",
          "linkedWithoutMetadata": "6785a273a010ee7d2fb6da03788041193b8159094c3f7debfa51063c1ecbe803"
        },
        "inherit": [
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJobToken(address,address)",
          "internalJobTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobDisputableForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobDisputableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobFundableCreditsForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobFundableCreditsForTest.sol:6",
        "version": {
          "withMetadata": "3aa7503483869a643788a2f302468e8b92dce5972844a542e0c5ca1d157ab236",
          "withoutMetadata": "1be3c47c9b34fe9725851cbd9b7eba73fa89115bea7e034335fd5cdcb42c7ff0",
          "linkedWithoutMetadata": "1be3c47c9b34fe9725851cbd9b7eba73fa89115bea7e034335fd5cdcb42c7ff0"
        },
        "inherit": [
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJob(address,address)",
          "setJobToken(address,address)",
          "isJobToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobFundableCreditsForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobFundableCreditsForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobManagerForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobManagerForTest.sol:6",
        "version": {
          "withMetadata": "6953c5e12db47e2104b20b99cbcab1ccc4893b2fbe5b6dd1f166ae12ae76b250",
          "withoutMetadata": "cfc8c444c26635d88d326f01d68ae96497a7eb40c76f851628cea19a6deecc9d",
          "linkedWithoutMetadata": "cfc8c444c26635d88d326f01d68ae96497a7eb40c76f851628cea19a6deecc9d"
        },
        "inherit": [
          "Keep3rJobManager",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "IKeep3rJobManager"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "isJob(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobManagerForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobManagerForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "20",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobMigrationForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobMigrationForTest.sol:6",
        "version": {
          "withMetadata": "952ed3037d29cae939226db43a07c5da086a3f9b7d9ba1557dabd28b9c3ea7a8",
          "withoutMetadata": "da36f19cada5286ff8df4f6548424a6b91ed4c2ca6d9069bf82bb5c428ce0960",
          "linkedWithoutMetadata": "da36f19cada5286ff8df4f6548424a6b91ed4c2ca6d9069bf82bb5c428ce0960"
        },
        "inherit": [
          "Keep3rJobMigration",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJobToken(address,address)",
          "setJobLiquidity(address,address)",
          "viewJobTokenListLength(address)",
          "viewJobLiquidityList(address)",
          "viewJobPeriodCredits(address)",
          "viewJobLiquidityCredits(address)",
          "viewMigrationCreatedAt(address,address)",
          "isJob(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobMigrationForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobMigrationForTest.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "settleJobAccountanceCallCount",
              "offset": 0,
              "slot": "37",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rJobMigrationForTest",
              "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobMigrationForTest.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobOwnershipForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobOwnershipForTest.sol:6",
        "version": {
          "withMetadata": "9c4172473cbec288fee19d04ead1be93b612e92faefec3c34de4e9c6b8358a91",
          "withoutMetadata": "29a97d5285b9a0b7822ec752a79ef97c7d49f5f19c138241f02ba5a53a57e4a0",
          "linkedWithoutMetadata": "29a97d5285b9a0b7822ec752a79ef97c7d49f5f19c138241f02ba5a53a57e4a0"
        },
        "inherit": [
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobWorkableForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobWorkableForTest.sol:6",
        "version": {
          "withMetadata": "69e7861e7997c41c258e5625d8e303ae37865f27ba6e31940109ae28d45641cc",
          "withoutMetadata": "254c736d3665a1975808fb028a91f9a8d5eae499051ebc6dc8ef9b306402d331",
          "linkedWithoutMetadata": "254c736d3665a1975808fb028a91f9a8d5eae499051ebc6dc8ef9b306402d331"
        },
        "inherit": [
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJob(address)",
          "setKeeper(address)",
          "viewGas()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobWorkableForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobWorkableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperDisputableForTest": {
        "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperDisputableForTest.sol:6",
        "version": {
          "withMetadata": "e26474ecaf03f1ea0e9e8fa7e088cd3c09643ce34fed62caa46bac6176e50e70",
          "withoutMetadata": "994b0456f2e6b37f5479c11f9a4c885194f2c6da16f778962f3cb551fb01ebfb",
          "linkedWithoutMetadata": "994b0456f2e6b37f5479c11f9a4c885194f2c6da16f778962f3cb551fb01ebfb"
        },
        "inherit": [
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setKeeper(address)",
          "internalSlash(address,address,uint256,uint256)",
          "isKeeper(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rKeeperDisputableForTest",
            "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperDisputableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperFundableForTest": {
        "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperFundableForTest.sol:6",
        "version": {
          "withMetadata": "2cced955b540e2477c07afdeda5f0077785591326e19e88f7ecf7363b8f661bd",
          "withoutMetadata": "d6047526434427982f293f7446afe3d78362d821911759e8c80112ba83c0da78",
          "linkedWithoutMetadata": "d6047526434427982f293f7446afe3d78362d821911759e8c80112ba83c0da78"
        },
        "inherit": [
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "isKeeper(address)",
          "setJob(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rKeeperFundableForTest",
            "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperFundableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyForTest": {
        "src": "contracts\\for-test\\utils\\ProxyForTest.sol:4",
        "version": {
          "withMetadata": "c42b2481ebed7c74ae4cf5b04d4440daaf5fa55db41a6342ef4cb232aac86bd0",
          "withoutMetadata": "1283072a057d354eceec2eb342d09da8bacb7d089f72f2bee03c9b245c8a9b4f",
          "linkedWithoutMetadata": "1283072a057d354eceec2eb342d09da8bacb7d089f72f2bee03c9b245c8a9b4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3r": {
        "src": "contracts\\interfaces\\IKeep3r.sol:14",
        "inherit": [
          "IKeep3rParameters",
          "IBaseErrors",
          "IKeep3rRoles",
          "IKeep3rAccountance",
          "IKeep3rKeepers",
          "IKeep3rKeeperDisputable",
          "IKeep3rJobs",
          "IKeep3rJobWorkable",
          "IKeep3rJobManager",
          "IKeep3rJobMigration",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rHelper": {
        "src": "contracts\\interfaces\\IKeep3rHelper.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quote(uint256)",
          "bonds(address)",
          "getRewardAmountFor(address,uint256)",
          "getRewardBoostFor(uint256)",
          "getRewardAmount(uint256)",
          "getPoolTokens(address)",
          "isKP3RToken0(address)",
          "getPaymentParams(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rHelperParameters": {
        "src": "contracts\\interfaces\\IKeep3rHelperParameters.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "KP3R()",
          "BOOST_BASE()",
          "kp3rWethPool()",
          "minBoost()",
          "maxBoost()",
          "targetBond()",
          "workExtraGas()",
          "keep3rV2()",
          "setKp3rWethPool(address)",
          "setMinBoost(uint256)",
          "setMaxBoost(uint256)",
          "setTargetBond(uint256)",
          "setKeep3rV2(address)",
          "setWorkExtraGas(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPairManager": {
        "src": "contracts\\interfaces\\IPairManager.sol:8",
        "inherit": [
          "IERC20Metadata",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "factory()",
          "pool()",
          "token0()",
          "token1()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPairManagerFactory": {
        "src": "contracts\\interfaces\\IPairManagerFactory.sol:8",
        "inherit": [
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "pairManagers(address)",
          "createPairManager(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniV3PairManager": {
        "src": "contracts\\interfaces\\IUniV3PairManager.sol:12",
        "inherit": [
          "IPairManager",
          "IERC20Metadata",
          "IERC20",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "fee()",
          "tickUpper()",
          "tickLower()",
          "tickSpacing()",
          "sqrtRatioAX96()",
          "sqrtRatioBX96()",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "mint(uint256,uint256,uint256,uint256,address)",
          "position()",
          "collect()",
          "burn(uint128,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAggregatorV3": {
        "src": "contracts\\interfaces\\external\\IAggregatorV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKasparov": {
        "src": "contracts\\interfaces\\external\\IKasparov.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "governor()",
          "work()",
          "setKeep3r(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rV1": {
        "src": "contracts\\interfaces\\external\\IKeep3rV1.sol:8",
        "inherit": [
          "IERC20Metadata",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "KPRH()",
          "delegates(address)",
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "DOMAIN_TYPEHASH()",
          "DOMAINSEPARATOR()",
          "DELEGATION_TYPEHASH()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "BOND()",
          "UNBOND()",
          "LIQUIDITYBOND()",
          "FEE()",
          "BASE()",
          "ETH()",
          "bondings(address,address)",
          "canWithdrawAfter(address,address)",
          "pendingUnbonds(address,address)",
          "pendingbonds(address,address)",
          "bonds(address,address)",
          "votes(address)",
          "firstSeen(address)",
          "disputes(address)",
          "lastJob(address)",
          "workCompleted(address)",
          "jobs(address)",
          "credits(address,address)",
          "liquidityProvided(address,address,address)",
          "liquidityUnbonding(address,address,address)",
          "liquidityAmountsUnbonding(address,address,address)",
          "jobProposalDelay(address)",
          "liquidityApplied(address,address,address)",
          "liquidityAmount(address,address,address)",
          "keepers(address)",
          "blacklist(address)",
          "keeperList(uint256)",
          "jobList(uint256)",
          "governance()",
          "pendingGovernance()",
          "liquidityAccepted(address)",
          "liquidityPairs(uint256)",
          "getCurrentVotes(address)",
          "addCreditETH(address)",
          "addCredit(address,address,uint256)",
          "addVotes(address,uint256)",
          "removeVotes(address,uint256)",
          "addKPRCredit(address,uint256)",
          "approveLiquidity(address)",
          "revokeLiquidity(address)",
          "pairs()",
          "addLiquidityToJob(address,address,uint256)",
          "applyCreditToJob(address,address,address)",
          "unbondLiquidityFromJob(address,address,uint256)",
          "removeLiquidityFromJob(address,address)",
          "mint(uint256)",
          "burn(uint256)",
          "worked(address)",
          "receipt(address,address,uint256)",
          "receiptETH(address,uint256)",
          "addJob(address)",
          "getJobs()",
          "removeJob(address)",
          "setKeep3rHelper(address)",
          "setGovernance(address)",
          "acceptGovernance()",
          "isKeeper(address)",
          "isMinKeeper(address,uint256,uint256,uint256)",
          "isBondedKeeper(address,address,uint256,uint256,uint256)",
          "bond(address,uint256)",
          "getKeepers()",
          "activate(address)",
          "unbond(address,uint256)",
          "slash(address,address,uint256)",
          "withdraw(address)",
          "dispute(address)",
          "revoke(address)",
          "resolve(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rV1Proxy": {
        "src": "contracts\\interfaces\\external\\IKeep3rV1Proxy.sol:6",
        "inherit": [
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "keep3rV1()",
          "minter()",
          "next(address)",
          "caps(address)",
          "recipients()",
          "recipientsCaps()",
          "addRecipient(address,uint256)",
          "removeRecipient(address)",
          "draw()",
          "setKeep3rV1(address)",
          "setMinter(address)",
          "mint(uint256)",
          "mint(address,uint256)",
          "setKeep3rV1Governance(address)",
          "acceptKeep3rV1Governance()",
          "dispute(address)",
          "slash(address,address,uint256)",
          "revoke(address)",
          "resolve(address)",
          "addJob(address)",
          "removeJob(address)",
          "addKPRCredit(address,uint256)",
          "approveLiquidity(address)",
          "revokeLiquidity(address)",
          "setKeep3rHelper(address)",
          "addVotes(address,uint256)",
          "removeVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWeth9": {
        "src": "contracts\\interfaces\\external\\IWeth9.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBaseErrors": {
        "src": "contracts\\interfaces\\peripherals\\IBaseErrors.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDustCollector": {
        "src": "contracts\\interfaces\\peripherals\\IDustCollector.sol:7",
        "inherit": [
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "sendDust(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGovernable": {
        "src": "contracts\\interfaces\\peripherals\\IGovernable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "governance()",
          "pendingGovernance()",
          "setGovernance(address)",
          "acceptGovernance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rAccountance": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rAccountance.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "workCompleted(address)",
          "firstSeen(address)",
          "disputes(address)",
          "bonds(address,address)",
          "jobTokenCredits(address,address)",
          "pendingBonds(address,address)",
          "canActivateAfter(address,address)",
          "canWithdrawAfter(address,address)",
          "pendingUnbonds(address,address)",
          "hasBonded(address)",
          "jobs()",
          "keepers()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rDisputable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rDisputable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dispute(address)",
          "resolve(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobDisputable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:427",
        "inherit": [
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [],
        "methods": [
          "slashTokenFromJob(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobFundableCredits": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jobTokenCreditsAddedAt(address,address)",
          "addTokenCreditsToJob(address,address,uint256)",
          "withdrawTokenCreditsFromJob(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobFundableLiquidity": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:69",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobManager": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:234",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addJob(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobMigration": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:380",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pendingJobMigrations(address)",
          "migrateJob(address,address)",
          "acceptJobMigration(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobOwnership": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:331",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jobOwner(address)",
          "jobPendingOwner(address)",
          "changeJobOwnership(address,address)",
          "acceptJobOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobWorkable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isKeeper(address)",
          "isBondedKeeper(address,address,uint256,uint256,uint256)",
          "worked(address)",
          "bondedPayment(address,uint256)",
          "directTokenPayment(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobs": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:477",
        "inherit": [
          "IKeep3rJobWorkable",
          "IKeep3rJobManager",
          "IKeep3rJobMigration",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rKeeperDisputable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rKeepers.sol:49",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slash(address,address,uint256,uint256)",
          "revoke(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rKeeperFundable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rKeepers.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "bond(address,uint256)",
          "unbond(address,uint256)",
          "activate(address)",
          "withdraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rKeepers": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rKeepers.sol:85",
        "inherit": [
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rParameters": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rParameters.sol:9",
        "inherit": [
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "keep3rHelper()",
          "keep3rV1()",
          "keep3rV1Proxy()",
          "kp3rWethPool()",
          "bondTime()",
          "unbondTime()",
          "fee()",
          "setKeep3rHelper(address)",
          "setKeep3rV1(address)",
          "setKeep3rV1Proxy(address)",
          "setKp3rWethPool(address)",
          "setBondTime(uint256)",
          "setUnbondTime(uint256)",
          "setFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rRoles": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rRoles.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slashers(address)",
          "disputers(address)",
          "addSlasher(address)",
          "removeSlasher(address)",
          "addDisputer(address)",
          "removeDisputer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "b1a30964a6664b86d9d163f8237915410332e5faf65fc1e7898793960de597b7",
          "withoutMetadata": "881c67acbb3a194bc4b416f18b915a5b87b5efef0b8ca3ed0d943c6215ff21e4",
          "linkedWithoutMetadata": "881c67acbb3a194bc4b416f18b915a5b87b5efef0b8ca3ed0d943c6215ff21e4"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "78e68a7c8e7236aac40392b3b7a0f7edfc3120be03d62896f7514e19984e4c2c",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "c8d3c0f035672cb36d4b7849e2d1e8d69906fca9c9f40d8eabc1dcc377c079c9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WBNB": {
        "src": "contracts\\libraries\\token\\WBNB.sol:4",
        "version": {
          "withMetadata": "4137980e7feb19254f66e0bc26ee0f8141c5d33855c1ab986adfdc701c088a3d",
          "withoutMetadata": "fcb77ab56b90e071f2d777a7dbb80067acc8829bd99d89d1ac086c784c4bb4d0",
          "linkedWithoutMetadata": "fcb77ab56b90e071f2d777a7dbb80067acc8829bd99d89d1ac086c784c4bb4d0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "a()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\libraries\\token\\WBNB.sol:5"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\libraries\\token\\WBNB.sol:6"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\libraries\\token\\WBNB.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:5"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:6"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:7"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:14"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FixedPoint": {
        "src": "contracts\\libraries\\utils\\FixedPoint.sol:8",
        "version": {
          "withMetadata": "0ca57a2ac15ce888e7c35a130c2973c5ee7ab89d4c670c6008db0045002f043f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockToken": {
        "src": "contracts\\mock\\MockToken.sol:7",
        "version": {
          "withMetadata": "607b7f1b2670362741b43e3c293bc911c46d34bef171537b8e1cf9039e32c457",
          "withoutMetadata": "5165fe718d786b30a22bfb757a9cc99863eeb8706e4557374deec3905cd3f266",
          "linkedWithoutMetadata": "5165fe718d786b30a22bfb757a9cc99863eeb8706e4557374deec3905cd3f266"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts\\mock\\MockToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ControlCenter": {
        "src": "contracts\\periphery\\ControlCenter.sol:14",
        "version": {
          "withMetadata": "c197f600f3bf8021bdbef0a99aea8a3c997b347d741e81ae18546d8e30a726f9",
          "withoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7",
          "linkedWithoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "Node",
          "INode",
          "IControlCenter"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOwner()",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "setLiquidityChangeLimit(uint256)",
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))",
          "setPriceChangeLimit(uint256)",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 29623,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30047,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31043,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31225,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31412,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31975,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ControlCenter",
            "src": "contracts\\periphery\\ControlCenter.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\periphery\\ControlCenter.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:116"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:118"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30962",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30956_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30930_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30902_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "pairStateAtSessionDetect",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)23043_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:29"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:30"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:32"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:116"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)23054_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:117"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30962": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CLFeed)23054_storage)": {
              "label": "mapping(address => struct ControlCenter.CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30930_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)23043_storage)": {
              "label": "mapping(address => struct ControlCenter.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)23054_storage": {
              "label": "struct ControlCenter.CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)30899_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30902_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30956_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30930_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30922",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairStateSessionTagged)23043_storage": {
              "label": "struct ControlCenter.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "5c179abccf7bd253690127ef5474002277f2372ea6540bbb73f1c84959ea867a",
          "withoutMetadata": "5c179abccf7bd253690127ef5474002277f2372ea6540bbb73f1c84959ea867a",
          "linkedWithoutMetadata": "5c179abccf7bd253690127ef5474002277f2372ea6540bbb73f1c84959ea867a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13685,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30962",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30956_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30930_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30902_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)30896_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)31105",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)31075",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)31075": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)31105": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30962": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30930_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)30896_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30880",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)30899_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30902_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30956_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30930_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30922",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "16f87e01df4812fc51b8ba231875bf05f0012c88920ac3eb1c5a272fb9ee106c",
          "withoutMetadata": "16f87e01df4812fc51b8ba231875bf05f0012c88920ac3eb1c5a272fb9ee106c",
          "linkedWithoutMetadata": "16f87e01df4812fc51b8ba231875bf05f0012c88920ac3eb1c5a272fb9ee106c"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30962",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30956_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30930_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30902_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)30896_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)31105",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)31075",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)31075": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)31105": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30962": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30930_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)30896_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30880",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)30899_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30902_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30956_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30930_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30922",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXRouter": {
        "src": "contracts\\periphery\\interfaces\\ICrossRouter.sol:6",
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter02.sol:6",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30962",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30956_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30930_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30902_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30922": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30962": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30930_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30880,t_struct(FeeRates)30899_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)30899_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30902_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30956_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30930_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30922",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)30896_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)31105",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)31075",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)31075": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)31105": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)30896_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30880",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)30880,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)30880)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)30880)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30880": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)30880,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "c14e740e5948185e46262620d3426425af20df495a7326a7a6a67ccc97946cc4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "53ac28de475ca0830e154a7ac46e8e69e1506a5c852e9b962de2d64f12cf9891",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XdaoAgency": {
        "src": "contracts\\farm\\XdaoAgency.sol:48",
        "version": {
          "withMetadata": "604d076badefbe325082a2b7efce064670a11a157a72d5b3990bca2649978b67",
          "withoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0",
          "linkedWithoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "setNumVerificationsNeeded(uint256)",
          "setSlashImpactPeriod(uint256)",
          "initialize(address)",
          "submitTask((string,string,uint256,uint256,uint8,uint8,uint8,uint8,uint8[],address,uint256,uint256))",
          "verifyTask(uint256)",
          "requestRevalidation(uint256,string)",
          "postTask(uint256)",
          "placeBid(uint256)",
          "assignTask(uint256,uint256[])",
          "_isTaskCompletedByUser(uint256,address)",
          "compeletTask(uint256)",
          "_isTaskEndVerifiedByUser(uint256,address)",
          "verifyTaskCompletion(uint256)",
          "stake(uint256)",
          "updateAgentLevel(address)",
          "unStake(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "currentTaskId",
            "src": "contracts\\farm\\XdaoAgency.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "NumVerificationsNeeded",
            "src": "contracts\\farm\\XdaoAgency.sol:69"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SlashImpactPeriod",
            "src": "contracts\\farm\\XdaoAgency.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "tgr",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)778",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:49"
            },
            {
              "label": "isAgent",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:51"
            },
            {
              "label": "agentInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Agent)1168_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:52"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:53"
            },
            {
              "label": "taskVerifiersCount",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:54"
            },
            {
              "label": "userTasks",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:55"
            },
            {
              "label": "agentVerifiedTask",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:56"
            },
            {
              "label": "doers",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:57"
            },
            {
              "label": "bidders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:59"
            },
            {
              "label": "bidden",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:60"
            },
            {
              "label": "taskCompleters",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:62"
            },
            {
              "label": "taskEndVerifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:64"
            },
            {
              "label": "agentLastSlashTime",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:66"
            },
            {
              "label": "currentTaskId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:68"
            },
            {
              "label": "NumVerificationsNeeded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:69"
            },
            {
              "label": "SlashImpactPeriod",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)778": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(JobBidType)1181": {
              "label": "enum JobBidType",
              "members": [
                "FirstPerson",
                "OneWinner",
                "MultiWinner"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TaskStatus)1177": {
              "label": "enum TaskStatus",
              "members": [
                "Pending",
                "Verified",
                "Posted",
                "Assigned",
                "Delivered",
                "Complete",
                "Incomplete",
                "Cancelled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Agent)1168_storage)": {
              "label": "mapping(address => struct Agent)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)": {
              "label": "mapping(uint256 => struct TaskDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Agent)1168_storage": {
              "label": "struct Agent",
              "members": [
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TaskDetails)1209_storage": {
              "label": "struct TaskDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "summary",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minCompletions",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "jobType",
                  "type": "t_enum(JobBidType)1181",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(TaskStatus)1177",
                  "offset": 3,
                  "slot": "4"
                },
                {
                  "label": "skillSet",
                  "type": "t_array(t_uint8)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "dueTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "verifiedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "c14e740e5948185e46262620d3426425af20df495a7326a7a6a67ccc97946cc4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "53ac28de475ca0830e154a7ac46e8e69e1506a5c852e9b962de2d64f12cf9891",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XdaoAgency": {
        "src": "contracts\\farm\\XdaoAgency.sol:48",
        "version": {
          "withMetadata": "604d076badefbe325082a2b7efce064670a11a157a72d5b3990bca2649978b67",
          "withoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0",
          "linkedWithoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "setNumVerificationsNeeded(uint256)",
          "setSlashImpactPeriod(uint256)",
          "initialize(address)",
          "submitTask((string,string,uint256,uint256,uint8,uint8,uint8,uint8,uint8[],address,uint256,uint256))",
          "verifyTask(uint256)",
          "requestRevalidation(uint256,string)",
          "postTask(uint256)",
          "placeBid(uint256)",
          "assignTask(uint256,uint256[])",
          "_isTaskCompletedByUser(uint256,address)",
          "compeletTask(uint256)",
          "_isTaskEndVerifiedByUser(uint256,address)",
          "verifyTaskCompletion(uint256)",
          "stake(uint256)",
          "updateAgentLevel(address)",
          "unStake(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "currentTaskId",
            "src": "contracts\\farm\\XdaoAgency.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "NumVerificationsNeeded",
            "src": "contracts\\farm\\XdaoAgency.sol:69"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SlashImpactPeriod",
            "src": "contracts\\farm\\XdaoAgency.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "tgr",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)778",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:49"
            },
            {
              "label": "isAgent",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:51"
            },
            {
              "label": "agentInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Agent)1168_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:52"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:53"
            },
            {
              "label": "taskVerifiersCount",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:54"
            },
            {
              "label": "userTasks",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:55"
            },
            {
              "label": "agentVerifiedTask",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:56"
            },
            {
              "label": "doers",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:57"
            },
            {
              "label": "bidders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:59"
            },
            {
              "label": "bidden",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:60"
            },
            {
              "label": "taskCompleters",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:62"
            },
            {
              "label": "taskEndVerifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:64"
            },
            {
              "label": "agentLastSlashTime",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:66"
            },
            {
              "label": "currentTaskId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:68"
            },
            {
              "label": "NumVerificationsNeeded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:69"
            },
            {
              "label": "SlashImpactPeriod",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)778": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(JobBidType)1181": {
              "label": "enum JobBidType",
              "members": [
                "FirstPerson",
                "OneWinner",
                "MultiWinner"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TaskStatus)1177": {
              "label": "enum TaskStatus",
              "members": [
                "Pending",
                "Verified",
                "Posted",
                "Assigned",
                "Delivered",
                "Complete",
                "Incomplete",
                "Cancelled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Agent)1168_storage)": {
              "label": "mapping(address => struct Agent)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)": {
              "label": "mapping(uint256 => struct TaskDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Agent)1168_storage": {
              "label": "struct Agent",
              "members": [
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TaskDetails)1209_storage": {
              "label": "struct TaskDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "summary",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minCompletions",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "jobType",
                  "type": "t_enum(JobBidType)1181",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(TaskStatus)1177",
                  "offset": 3,
                  "slot": "4"
                },
                {
                  "label": "skillSet",
                  "type": "t_array(t_uint8)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "dueTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "verifiedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "c14e740e5948185e46262620d3426425af20df495a7326a7a6a67ccc97946cc4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "53ac28de475ca0830e154a7ac46e8e69e1506a5c852e9b962de2d64f12cf9891",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XdaoAgency": {
        "src": "contracts\\farm\\XdaoAgency.sol:48",
        "version": {
          "withMetadata": "604d076badefbe325082a2b7efce064670a11a157a72d5b3990bca2649978b67",
          "withoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0",
          "linkedWithoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "setNumVerificationsNeeded(uint256)",
          "setSlashImpactPeriod(uint256)",
          "initialize(address)",
          "submitTask((string,string,uint256,uint256,uint8,uint8,uint8,uint8,uint8[],address,uint256,uint256))",
          "verifyTask(uint256)",
          "requestRevalidation(uint256,string)",
          "postTask(uint256)",
          "placeBid(uint256)",
          "assignTask(uint256,uint256[])",
          "_isTaskCompletedByUser(uint256,address)",
          "compeletTask(uint256)",
          "_isTaskEndVerifiedByUser(uint256,address)",
          "verifyTaskCompletion(uint256)",
          "stake(uint256)",
          "updateAgentLevel(address)",
          "unStake(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "currentTaskId",
            "src": "contracts\\farm\\XdaoAgency.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "NumVerificationsNeeded",
            "src": "contracts\\farm\\XdaoAgency.sol:69"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SlashImpactPeriod",
            "src": "contracts\\farm\\XdaoAgency.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "tgr",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)778",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:49"
            },
            {
              "label": "isAgent",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:51"
            },
            {
              "label": "agentInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Agent)1168_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:52"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:53"
            },
            {
              "label": "taskVerifiersCount",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:54"
            },
            {
              "label": "userTasks",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:55"
            },
            {
              "label": "agentVerifiedTask",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:56"
            },
            {
              "label": "doers",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:57"
            },
            {
              "label": "bidders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:59"
            },
            {
              "label": "bidden",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:60"
            },
            {
              "label": "taskCompleters",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:62"
            },
            {
              "label": "taskEndVerifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:64"
            },
            {
              "label": "agentLastSlashTime",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:66"
            },
            {
              "label": "currentTaskId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:68"
            },
            {
              "label": "NumVerificationsNeeded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:69"
            },
            {
              "label": "SlashImpactPeriod",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)778": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(JobBidType)1181": {
              "label": "enum JobBidType",
              "members": [
                "FirstPerson",
                "OneWinner",
                "MultiWinner"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TaskStatus)1177": {
              "label": "enum TaskStatus",
              "members": [
                "Pending",
                "Verified",
                "Posted",
                "Assigned",
                "Delivered",
                "Complete",
                "Incomplete",
                "Cancelled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Agent)1168_storage)": {
              "label": "mapping(address => struct Agent)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)": {
              "label": "mapping(uint256 => struct TaskDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Agent)1168_storage": {
              "label": "struct Agent",
              "members": [
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TaskDetails)1209_storage": {
              "label": "struct TaskDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "summary",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minCompletions",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "jobType",
                  "type": "t_enum(JobBidType)1181",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(TaskStatus)1177",
                  "offset": 3,
                  "slot": "4"
                },
                {
                  "label": "skillSet",
                  "type": "t_array(t_uint8)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "dueTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "verifiedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "c14e740e5948185e46262620d3426425af20df495a7326a7a6a67ccc97946cc4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "53ac28de475ca0830e154a7ac46e8e69e1506a5c852e9b962de2d64f12cf9891",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XdaoAgency": {
        "src": "contracts\\farm\\XdaoAgency.sol:48",
        "version": {
          "withMetadata": "604d076badefbe325082a2b7efce064670a11a157a72d5b3990bca2649978b67",
          "withoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0",
          "linkedWithoutMetadata": "d2fcfdb509f06d3fe711c6b57ad386623a5168ff492324504c4d4783a23189b0"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "setNumVerificationsNeeded(uint256)",
          "setSlashImpactPeriod(uint256)",
          "initialize(address)",
          "submitTask((string,string,uint256,uint256,uint8,uint8,uint8,uint8,uint8[],address,uint256,uint256))",
          "verifyTask(uint256)",
          "requestRevalidation(uint256,string)",
          "postTask(uint256)",
          "placeBid(uint256)",
          "assignTask(uint256,uint256[])",
          "_isTaskCompletedByUser(uint256,address)",
          "compeletTask(uint256)",
          "_isTaskEndVerifiedByUser(uint256,address)",
          "verifyTaskCompletion(uint256)",
          "stake(uint256)",
          "updateAgentLevel(address)",
          "unStake(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "currentTaskId",
            "src": "contracts\\farm\\XdaoAgency.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "NumVerificationsNeeded",
            "src": "contracts\\farm\\XdaoAgency.sol:69"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SlashImpactPeriod",
            "src": "contracts\\farm\\XdaoAgency.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "tgr",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)778",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:49"
            },
            {
              "label": "isAgent",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:51"
            },
            {
              "label": "agentInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Agent)1168_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:52"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:53"
            },
            {
              "label": "taskVerifiersCount",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:54"
            },
            {
              "label": "userTasks",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:55"
            },
            {
              "label": "agentVerifiedTask",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:56"
            },
            {
              "label": "doers",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:57"
            },
            {
              "label": "bidders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:59"
            },
            {
              "label": "bidden",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:60"
            },
            {
              "label": "taskCompleters",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:62"
            },
            {
              "label": "taskEndVerifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:64"
            },
            {
              "label": "agentLastSlashTime",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:66"
            },
            {
              "label": "currentTaskId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:68"
            },
            {
              "label": "NumVerificationsNeeded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:69"
            },
            {
              "label": "SlashImpactPeriod",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)778": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(JobBidType)1181": {
              "label": "enum JobBidType",
              "members": [
                "FirstPerson",
                "OneWinner",
                "MultiWinner"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TaskStatus)1177": {
              "label": "enum TaskStatus",
              "members": [
                "Pending",
                "Verified",
                "Posted",
                "Assigned",
                "Delivered",
                "Complete",
                "Incomplete",
                "Cancelled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Agent)1168_storage)": {
              "label": "mapping(address => struct Agent)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)": {
              "label": "mapping(uint256 => struct TaskDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Agent)1168_storage": {
              "label": "struct Agent",
              "members": [
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TaskDetails)1209_storage": {
              "label": "struct TaskDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "summary",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minCompletions",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "jobType",
                  "type": "t_enum(JobBidType)1181",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(TaskStatus)1177",
                  "offset": 3,
                  "slot": "4"
                },
                {
                  "label": "skillSet",
                  "type": "t_array(t_uint8)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "dueTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "verifiedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}
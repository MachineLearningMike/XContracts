{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "20b984ca31d865f9782a8945ec393552657074bda69fc558fcaccd064ba16a8d",
          "withoutMetadata": "fb9688c33a96750ab02d33d44dcf43737ed911c88971c931b30a4581a746f813",
          "linkedWithoutMetadata": "fb9688c33a96750ab02d33d44dcf43737ed911c88971c931b30a4581a746f813"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9577,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10860,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11042,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11229,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12898,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15365,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7540",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7534_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7508_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7480_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7458,t_struct(FeeRates)7477_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7458,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7458)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7474_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7683",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7653",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2550_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2550_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2550_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2553_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5116",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7458)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5116": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7653": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7683": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7458": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7500": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7540": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7508_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2553_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7458,t_struct(FeeRates)7477_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7458,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7474_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7458",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7477_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7480_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7534_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7508_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7500",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2550_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2553_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7540",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7534_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7508_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7480_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7458,t_struct(FeeRates)7477_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7458": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7500": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7540": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7508_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7458,t_struct(FeeRates)7477_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7477_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7480_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7534_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7508_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7500",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7474_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7683",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7653",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7653": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7683": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7458": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7474_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7458",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7458,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7458)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7458)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7458": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7458,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "8aa479d932492563edf3646e8d8eb0fae5d0cab6657f2a046db47bede81042db",
          "withoutMetadata": "da337b01bff44c43038b7edc1fa178e48f240bf336205ca36f76780687e52b96",
          "linkedWithoutMetadata": "da337b01bff44c43038b7edc1fa178e48f240bf336205ca36f76780687e52b96"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9816,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11099,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11281,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11468,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13143,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15545,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7557",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7551_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7525_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7497_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7475,t_struct(FeeRates)7494_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7475,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7475)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7491_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7700",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7670",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2567_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2567_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2567_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2570_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5133",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7475)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5133": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7670": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7700": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7475": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7517": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7557": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7525_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2570_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7475,t_struct(FeeRates)7494_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7475,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7491_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7475",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7494_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7497_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7551_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7525_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7517",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2567_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2570_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7557",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7551_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7525_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7497_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7475,t_struct(FeeRates)7494_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7475": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7517": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7557": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7525_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7475,t_struct(FeeRates)7494_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7494_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7497_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7551_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7525_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7517",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7491_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7700",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7670",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7670": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7700": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7475": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7491_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7475",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7475,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7475)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7475)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7475": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7475,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "20aa7a465e3e1f5a7b0e2c9f5800cabcd022768d72744a78787fc6a620be81f2",
          "withoutMetadata": "40deef617608419a2bafc262875ed0b873dc143a530b7bcfdbe0c4c30611243c",
          "linkedWithoutMetadata": "40deef617608419a2bafc262875ed0b873dc143a530b7bcfdbe0c4c30611243c"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9577,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10860,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11042,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11229,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12898,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15300,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7528",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7522_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7496_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7468_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7446,t_struct(FeeRates)7465_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7446,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7446)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7462_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7671",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7641",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2538_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2538_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2538_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2541_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5104",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7446)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5104": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7641": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7671": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7446": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7488": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7528": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7496_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2541_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7446,t_struct(FeeRates)7465_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7446,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7462_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7446",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7465_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7468_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7522_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7496_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7488",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2538_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2541_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7528",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7522_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7496_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7468_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7446,t_struct(FeeRates)7465_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7446": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7488": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7528": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7496_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7446,t_struct(FeeRates)7465_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7465_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7468_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7522_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7496_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7488",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7462_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7671",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7641",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7641": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7671": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7446": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7462_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7446",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7446,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7446)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7446)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7446": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7446,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "a59f8f9ccdc84f4ea327ea333bc6fcdea837f90bf8b7d9df454b486485c8fb00",
          "withoutMetadata": "a76eb13a22701c7be7df7eba10e559d0dbe1399c02d6142c88618cd771fb2aeb",
          "linkedWithoutMetadata": "a76eb13a22701c7be7df7eba10e559d0dbe1399c02d6142c88618cd771fb2aeb"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9577,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10860,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11042,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11229,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12898,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15285,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7518",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7512_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7486_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7458_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7436,t_struct(FeeRates)7455_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7436,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7436)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7452_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7661",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7631",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2528_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2528_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2528_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2531_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5094",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7436)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5094": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7631": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7661": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7436": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7478": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7518": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7486_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2531_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7436,t_struct(FeeRates)7455_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7436,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7452_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7436",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7455_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7458_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7512_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7486_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7478",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2528_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2531_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7518",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7512_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7486_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7458_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7436,t_struct(FeeRates)7455_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7436": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7478": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7518": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7486_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7436,t_struct(FeeRates)7455_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7455_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7458_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7512_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7486_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7478",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7452_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7661",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7631",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7631": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7661": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7436": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7452_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7436",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7436,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7436)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7436)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7436": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7436,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "f8a042e241ab95dea14bc46387633d60a2cc33f5f53659453e44fe547f880ab9",
          "withoutMetadata": "bff7173b7c618308459533bffa108c18395c939df0ae702be125694a9f08a005",
          "linkedWithoutMetadata": "bff7173b7c618308459533bffa108c18395c939df0ae702be125694a9f08a005"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9785,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11068,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11250,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11437,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13112,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15566,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7542",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7536_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7510_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7482_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7460,t_struct(FeeRates)7479_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7460,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7460)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7476_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7685",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7655",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2552_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2552_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2552_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2555_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5118",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7460)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5118": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7655": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7685": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7460": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7502": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7542": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7510_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2555_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7460,t_struct(FeeRates)7479_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7460,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7476_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7460",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7479_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7482_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7536_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7510_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7502",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2552_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2555_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7542",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7536_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7510_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7482_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7460,t_struct(FeeRates)7479_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7460": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7502": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7542": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7510_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7460,t_struct(FeeRates)7479_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7479_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7482_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7536_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7510_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7502",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7476_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7685",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7655",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7655": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7685": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7460": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7476_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7460",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7460,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7460)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7460)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7460": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7460,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "1bf79e9d76fa3c67c082b445bf5327fd20b72973367b32e7bd9122f3a21ae0f6",
          "withoutMetadata": "6cbe21f9f939f8aa07026b6b401d85f17b44f36c10896eea1ba4f7fe3a7a0d80",
          "linkedWithoutMetadata": "6cbe21f9f939f8aa07026b6b401d85f17b44f36c10896eea1ba4f7fe3a7a0d80"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9785,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11068,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11250,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11437,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13112,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15566,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7546",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7540_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7514_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7486_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7464,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7464)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7480_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7689",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7659",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2556_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2556_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2556_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2559_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5122",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7464)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5122": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7659": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7689": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7506": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7546": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7514_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2559_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7464,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7480_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7464",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7483_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7486_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7540_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7514_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7506",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2556_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2559_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7546",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7540_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7514_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7486_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7506": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7546": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7514_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7483_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7486_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7540_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7514_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7506",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7480_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7689",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7659",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7659": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7689": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7480_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7464",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7464,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7464)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7464)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7464,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "7f098d4abbd306108012934ae22625e42a4b1963f826d9e36e5f873677a41f9f",
          "withoutMetadata": "2cde6c9e35b5ab72da91f27aa2c5faa9d5ab60aa1f665fd2fff65f4c50b42ae8",
          "linkedWithoutMetadata": "2cde6c9e35b5ab72da91f27aa2c5faa9d5ab60aa1f665fd2fff65f4c50b42ae8"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9785,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11068,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11250,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11437,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13112,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15722,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7571",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7565_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7539_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7511_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7489,t_struct(FeeRates)7508_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7489,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7489)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7505_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7714",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7684",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2581_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2581_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2581_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2584_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5147",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7489)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5147": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7684": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7714": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7489": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7531": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7571": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7539_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2584_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7489,t_struct(FeeRates)7508_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7489,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7505_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7489",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7508_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7511_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7565_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7539_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7531",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2581_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2584_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7571",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7565_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7539_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7511_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7489,t_struct(FeeRates)7508_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7489": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7531": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7571": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7539_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7489,t_struct(FeeRates)7508_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7508_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7511_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7565_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7539_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7531",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7505_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7714",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7684",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7684": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7714": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7489": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7505_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7489",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7489,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7489)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7489)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7489": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7489,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "e156ea8f20045723851495667486446869c5595b3aaeae898073779933ff108a",
          "withoutMetadata": "f787e25600148826af252627b5301a5c514327ba99c5bb2a40cf03f6943c102a",
          "linkedWithoutMetadata": "f787e25600148826af252627b5301a5c514327ba99c5bb2a40cf03f6943c102a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9142,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10426,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10608,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10795,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12470,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15013,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7457",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7451_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7425_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7397_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7375,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7375)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7391_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7600",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7570",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2470_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5033",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7375)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5033": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7570": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7600": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7417": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7457": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7425_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2470_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7391_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7375",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7394_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7397_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7451_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7425_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7417",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2467_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2470_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7457",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7451_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7425_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7397_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7417": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7457": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7425_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7394_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7397_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7451_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7425_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7417",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7391_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7600",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7570",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7570": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7600": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7391_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7375",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7375,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7375)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7375)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7375,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "0bdfab3c0bbe001da43ed94b762128b57fc86304722d3d24cee8323d94cf5f78",
          "withoutMetadata": "e7bb51c2434d67f94e2b3b03ce8134529e011183e2aca534bd6863630586a5ef",
          "linkedWithoutMetadata": "e7bb51c2434d67f94e2b3b03ce8134529e011183e2aca534bd6863630586a5ef"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9939,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11222,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11404,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11591,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13266,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15876,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7588",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7582_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7556_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7528_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7506,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7506)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7522_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7731",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7701",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2598_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2598_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2598_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2601_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5164",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7506)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5164": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7701": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7731": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7548": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7588": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7556_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2601_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7506,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7522_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7506",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7525_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7528_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7582_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7556_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7548",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2598_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2601_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7588",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7582_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7556_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7528_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7548": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7588": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7556_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7525_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7528_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7582_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7556_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7548",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7522_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7731",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7701",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7701": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7731": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7522_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7506",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7506,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7506)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7506)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7506,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "063f1745a93a730cb3df43b8c6a11df7b5bcb84a605085de93c5e70d8ff433a2",
          "withoutMetadata": "f787e25600148826af252627b5301a5c514327ba99c5bb2a40cf03f6943c102a",
          "linkedWithoutMetadata": "f787e25600148826af252627b5301a5c514327ba99c5bb2a40cf03f6943c102a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9142,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10426,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10608,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10795,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12470,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15013,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7457",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7451_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7425_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7397_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7375,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7375)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7391_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7600",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7570",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2470_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5033",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7375)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5033": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7570": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7600": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7417": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7457": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7425_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2470_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7391_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7375",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7394_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7397_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7451_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7425_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7417",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2467_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2470_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7457",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7451_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7425_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7397_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7417": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7457": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7425_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7394_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7397_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7451_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7425_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7417",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7391_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7600",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7570",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7570": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7600": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7391_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7375",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7375,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7375)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7375)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7375,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "650a90f3f0bb288e35ecff258dbfd1001e5d69de801f68d916f67b306ab24cf7",
          "withoutMetadata": "f787e25600148826af252627b5301a5c514327ba99c5bb2a40cf03f6943c102a",
          "linkedWithoutMetadata": "f787e25600148826af252627b5301a5c514327ba99c5bb2a40cf03f6943c102a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9142,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10426,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10608,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10795,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12470,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15013,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7457",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7451_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7425_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7397_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7375,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7375)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7391_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7600",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7570",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2467_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2470_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5033",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7375)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5033": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7570": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7600": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7417": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7457": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7425_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2470_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7391_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7375",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7394_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7397_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7451_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7425_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7417",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2467_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2470_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7457",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7451_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7425_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7397_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7417": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7457": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7425_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7375,t_struct(FeeRates)7394_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7394_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7397_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7451_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7425_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7417",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7391_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7600",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7570",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7570": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7600": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7391_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7375",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7375,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7375)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7375)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7375": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7375,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "e3a5a3ebe83e56426ca0251687feb5cee76627e2b41e68e2a9599d3c0776d106",
          "withoutMetadata": "e7bb51c2434d67f94e2b3b03ce8134529e011183e2aca534bd6863630586a5ef",
          "linkedWithoutMetadata": "e7bb51c2434d67f94e2b3b03ce8134529e011183e2aca534bd6863630586a5ef"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9939,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11222,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11404,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11591,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13266,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15876,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7588",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7582_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7556_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7528_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7506,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7506)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7522_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7731",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7701",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2598_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2598_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2598_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2601_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5164",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7506)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5164": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7701": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7731": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7548": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7588": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7556_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2601_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7506,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7522_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7506",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7525_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7528_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7582_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7556_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7548",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2598_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2601_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7588",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7582_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7556_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7528_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7548": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7588": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7556_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7506,t_struct(FeeRates)7525_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7525_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7528_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7582_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7556_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7548",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7522_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7731",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7701",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7701": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7731": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7522_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7506",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7506,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7506)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7506)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7506": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7506,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "ef505e508e709232eca55b7e2aac0521389f396baa0494c09413d660d752869d",
          "withoutMetadata": "94ddfbd25e7d4cf32f1b786dcd6645e34c7237805b3f7baecf8847c92a1e50b3",
          "linkedWithoutMetadata": "94ddfbd25e7d4cf32f1b786dcd6645e34c7237805b3f7baecf8847c92a1e50b3"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9816,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11099,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11281,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11468,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13143,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15686,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:133"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7576",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7570_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7544_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7516_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7494,t_struct(FeeRates)7513_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7494,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7494)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7510_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7719",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7689",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2586_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2586_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2586_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2589_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5152",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7494)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5152": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7689": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7719": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7494": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7536": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7576": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7544_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2589_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7494,t_struct(FeeRates)7513_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7494,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7510_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7494",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7513_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7516_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7570_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7544_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7536",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2586_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2589_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7576",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7570_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7544_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7516_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7494,t_struct(FeeRates)7513_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7494": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7536": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7576": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7544_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7494,t_struct(FeeRates)7513_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7513_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7516_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7570_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7544_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7536",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7510_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7719",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7689",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7689": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7719": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7494": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7510_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7494",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7494,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7494)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7494)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7494": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7494,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "e5938480d406e78bf8cee64fd6fed3d077e5af6e9286d3fea5d9bd4308cb0908",
          "withoutMetadata": "33ccb802ec37aabb036b94c74a6583225e2282fc1114a1f4c957eda36ee91091",
          "linkedWithoutMetadata": "33ccb802ec37aabb036b94c74a6583225e2282fc1114a1f4c957eda36ee91091"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10080,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11363,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11545,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11732,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13407,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15909,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:134"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7562",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7556_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7530_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7502_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7480,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7480)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7496_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7705",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7675",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2572_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2572_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2572_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2575_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5138",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:132"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7480)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5138": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7675": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7705": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7522": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7562": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7530_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2575_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7480,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7496_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7480",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7499_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7502_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7556_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7530_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7522",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2572_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2575_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7562",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7556_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7530_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7502_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7522": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7562": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7530_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7499_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7502_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7556_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7530_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7522",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7496_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7705",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7675",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7675": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7705": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7496_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7480",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7480,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7480)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7480)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7480,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "8be47277d4b7dd4a538377d3556bda03a9b509208cdc10470f9c3c19f090ad40",
          "withoutMetadata": "33ccb802ec37aabb036b94c74a6583225e2282fc1114a1f4c957eda36ee91091",
          "linkedWithoutMetadata": "33ccb802ec37aabb036b94c74a6583225e2282fc1114a1f4c957eda36ee91091"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10080,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11363,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11545,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11732,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13407,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15909,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:135"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7562",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7556_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7530_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7502_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7480,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7480)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7496_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7705",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7675",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2572_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2572_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2572_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2575_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5138",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:133"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7480)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5138": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7675": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7705": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7522": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7562": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7530_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2575_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7480,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7496_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7480",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7499_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7502_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7556_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7530_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7522",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2572_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2575_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7562",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7556_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7530_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7502_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7522": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7562": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7530_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7480,t_struct(FeeRates)7499_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7499_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7502_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7556_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7530_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7522",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7496_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7705",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7675",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7675": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7705": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7496_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7480",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7480,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7480)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7480)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7480": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7480,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "22e8f1efbb2a21085b81caf6d246f828053b38c7bf75f12e11628726a45f3e1e",
          "withoutMetadata": "3f5fad6898688510655bada60fb519c1a991a7c81e0f1005a31ca2a810ef7b9c",
          "linkedWithoutMetadata": "3f5fad6898688510655bada60fb519c1a991a7c81e0f1005a31ca2a810ef7b9c"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10054,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11337,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11519,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11706,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13381,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15883,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:127"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:125"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "e22fb5e0d8597b6e737d4eacffefaafa04016d2850befb2e16c010e0f2710bf9",
          "withoutMetadata": "e22fb5e0d8597b6e737d4eacffefaafa04016d2850befb2e16c010e0f2710bf9",
          "linkedWithoutMetadata": "e22fb5e0d8597b6e737d4eacffefaafa04016d2850befb2e16c010e0f2710bf9"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10711,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11994,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12176,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12363,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 14038,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16743,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7546",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7540_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7514_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7486_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7464,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7464)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7480_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7689",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7659",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2556_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2556_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2556_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2559_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5122",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7464)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5122": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7659": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7689": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7506": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7546": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7514_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2559_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7464,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7480_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7464",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7483_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7486_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7540_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7514_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7506",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2556_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2559_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7546",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7540_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7514_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7486_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7506": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7546": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7514_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7464,t_struct(FeeRates)7483_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7483_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7486_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7540_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7514_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7506",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7480_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7689",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7659",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7659": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7689": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7480_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7464",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7464,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7464)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7464)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7464": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7464,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "7ec37884443cc27d0fe33d05aa20bab27a6c8897e7db9f22b02c2038ac4473fa",
          "withoutMetadata": "7ec37884443cc27d0fe33d05aa20bab27a6c8897e7db9f22b02c2038ac4473fa",
          "linkedWithoutMetadata": "7ec37884443cc27d0fe33d05aa20bab27a6c8897e7db9f22b02c2038ac4473fa"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10655,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11938,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12120,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12307,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13982,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16624,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:119"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:117"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "568f73cb40cb3bd611408e33fd97d1907c2458d79a956e25642ba7e47cd8ed6a",
          "withoutMetadata": "568f73cb40cb3bd611408e33fd97d1907c2458d79a956e25642ba7e47cd8ed6a",
          "linkedWithoutMetadata": "568f73cb40cb3bd611408e33fd97d1907c2458d79a956e25642ba7e47cd8ed6a"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10672,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11955,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12137,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12324,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13999,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16641,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7522",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7516_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7490_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7462_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7440,t_struct(FeeRates)7459_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7440,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7440)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7456_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7665",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7635",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2532_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2532_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2532_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2535_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5098",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7440)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5098": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7635": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7665": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7440": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7482": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7522": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7490_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2535_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7440,t_struct(FeeRates)7459_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7440,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7456_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7440",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7459_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7462_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7516_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7490_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7482",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2532_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2535_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7522",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7516_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7490_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7462_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7440,t_struct(FeeRates)7459_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7440": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7482": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7522": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7490_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7440,t_struct(FeeRates)7459_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7459_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7462_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7516_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7490_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7482",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7456_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7665",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7635",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7635": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7665": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7440": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7456_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7440",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7440,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7440)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7440)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7440": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7440,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "7ec37884443cc27d0fe33d05aa20bab27a6c8897e7db9f22b02c2038ac4473fa",
          "withoutMetadata": "7ec37884443cc27d0fe33d05aa20bab27a6c8897e7db9f22b02c2038ac4473fa",
          "linkedWithoutMetadata": "7ec37884443cc27d0fe33d05aa20bab27a6c8897e7db9f22b02c2038ac4473fa"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10655,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11938,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12120,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12307,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13982,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16624,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:119"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:117"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "497fc0b54795248382b8d1350160bcc0b2d3b7a4860af7bae0deacae46081a79",
          "withoutMetadata": "497fc0b54795248382b8d1350160bcc0b2d3b7a4860af7bae0deacae46081a79",
          "linkedWithoutMetadata": "497fc0b54795248382b8d1350160bcc0b2d3b7a4860af7bae0deacae46081a79"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10662,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11945,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12127,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12314,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13989,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16631,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:121"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7524",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7518_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7492_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7464_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7442,t_struct(FeeRates)7461_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7442,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7442)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7458_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7667",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7637",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2534_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2534_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2534_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2537_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5100",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:119"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7442)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5100": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7637": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7667": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7442": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7484": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7524": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7492_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2537_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7442,t_struct(FeeRates)7461_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7442,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7458_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7442",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7461_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7464_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7518_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7492_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7484",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2534_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2537_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7524",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7518_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7492_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7464_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7442,t_struct(FeeRates)7461_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7442": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7484": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7524": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7492_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7442,t_struct(FeeRates)7461_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7461_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7464_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7518_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7492_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7484",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7458_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7667",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7637",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7637": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7667": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7442": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7458_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7442",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7442,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7442)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7442)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7442": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7442,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "370c47b3d20f2cf1da019d8d52b512ed661fdcbe522e6ecd5f75c5a9e97c7327",
          "withoutMetadata": "370c47b3d20f2cf1da019d8d52b512ed661fdcbe522e6ecd5f75c5a9e97c7327",
          "linkedWithoutMetadata": "370c47b3d20f2cf1da019d8d52b512ed661fdcbe522e6ecd5f75c5a9e97c7327"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10658,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11941,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12123,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12310,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13985,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16627,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "94cac7c6177d8877084d5be4a1623d88ea4c946aa3326f69b9426ab4333414ed",
          "withoutMetadata": "94cac7c6177d8877084d5be4a1623d88ea4c946aa3326f69b9426ab4333414ed",
          "linkedWithoutMetadata": "94cac7c6177d8877084d5be4a1623d88ea4c946aa3326f69b9426ab4333414ed"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10310,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11593,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11775,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11962,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13637,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16050,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7491",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7485_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7459_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7431_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7409,t_struct(FeeRates)7428_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7409,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7409)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7425_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7634",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7604",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2501_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2501_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2501_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2504_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5067",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7409)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5067": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7604": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7634": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7409": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7451": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7491": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7459_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2504_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7409,t_struct(FeeRates)7428_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7409,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7425_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7409",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7428_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7431_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7485_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7459_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7451",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2501_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2504_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7491",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7485_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7459_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7431_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7409,t_struct(FeeRates)7428_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7409": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7451": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7491": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7459_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7409,t_struct(FeeRates)7428_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7428_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7431_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7485_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7459_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7451",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7425_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7634",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7604",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7604": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7634": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7409": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7425_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7409",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7409,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7409)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7409)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7409": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7409,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "025f0a6a10b625cf43d396bfcd5b790cf336d8b793bc083d5baff385512eb462",
          "withoutMetadata": "025f0a6a10b625cf43d396bfcd5b790cf336d8b793bc083d5baff385512eb462",
          "linkedWithoutMetadata": "025f0a6a10b625cf43d396bfcd5b790cf336d8b793bc083d5baff385512eb462"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10655,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11938,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12120,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12307,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13982,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16624,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "370c47b3d20f2cf1da019d8d52b512ed661fdcbe522e6ecd5f75c5a9e97c7327",
          "withoutMetadata": "370c47b3d20f2cf1da019d8d52b512ed661fdcbe522e6ecd5f75c5a9e97c7327",
          "linkedWithoutMetadata": "370c47b3d20f2cf1da019d8d52b512ed661fdcbe522e6ecd5f75c5a9e97c7327"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10658,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11941,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12123,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12310,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13985,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16627,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "471a9ca2c5a924bb152efdbedaedfba553c738b4c1b3c2b54c5dbc7b99b03b6b",
          "withoutMetadata": "471a9ca2c5a924bb152efdbedaedfba553c738b4c1b3c2b54c5dbc7b99b03b6b",
          "linkedWithoutMetadata": "471a9ca2c5a924bb152efdbedaedfba553c738b4c1b3c2b54c5dbc7b99b03b6b"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10668,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11951,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12133,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12320,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13995,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16637,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:119"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:117"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "80bcdd1866e6f952e369c495e13dc81069dad9e469bb498bc94d9dba87cc9e67",
          "withoutMetadata": "3f5fad6898688510655bada60fb519c1a991a7c81e0f1005a31ca2a810ef7b9c",
          "linkedWithoutMetadata": "3f5fad6898688510655bada60fb519c1a991a7c81e0f1005a31ca2a810ef7b9c"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10054,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11337,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11519,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11706,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13381,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15883,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:119"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:117"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "b279953c5fcadadeeef52cbca8ebaab1768d36a37b02ab5bb34f2d2df74b4f87",
          "withoutMetadata": "3f5fad6898688510655bada60fb519c1a991a7c81e0f1005a31ca2a810ef7b9c",
          "linkedWithoutMetadata": "3f5fad6898688510655bada60fb519c1a991a7c81e0f1005a31ca2a810ef7b9c"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10054,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11337,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11519,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11706,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13381,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15883,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:118"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2530_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2533_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5096",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:116"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5096": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2533_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2530_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2533_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7520",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7514_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7488_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7460_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7480": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7520": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7488_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7438,t_struct(FeeRates)7457_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7457_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7460_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7514_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7488_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7480",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7454_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7663",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7633",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7633": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7663": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7454_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7438",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7438,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7438)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7438)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7438": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7438,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "3f207883dec0c41c527174860c8a3e7f3900060529dd587e07b6f4233a312a21",
          "withoutMetadata": "29b47eaf58c3b1a1158122586a5d880d22014cde5850125709c71e06a2693cb0",
          "linkedWithoutMetadata": "29b47eaf58c3b1a1158122586a5d880d22014cde5850125709c71e06a2693cb0"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10054,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11337,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11519,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11706,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13381,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 15833,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:118"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7510",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7504_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7478_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7450_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7428,t_struct(FeeRates)7447_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)7428,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)7428)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)7444_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)7653",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)7623",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)2520_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)2520_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)2520_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)2523_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)5086",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:116"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)7428)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)5086": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)7623": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7653": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7428": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7470": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7510": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7478_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)2523_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7428,t_struct(FeeRates)7447_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7428,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)7444_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7428",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)7447_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7450_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7504_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7478_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7470",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)2520_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)2523_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)7510",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)7504_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)7478_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)7450_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)7428,t_struct(FeeRates)7447_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7428": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)7470": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)7510": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)7478_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)7428,t_struct(FeeRates)7447_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)7447_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)7450_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)7504_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)7478_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)7470",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)7444_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)7653",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)7623",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)7623": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)7653": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)7428": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)7444_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)7428",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)7428,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)7428)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)7428)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)7428": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)7428,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "67ebaa443506466efe7ee5835353ca7caa5c3485ca8418de8d21b2b39179c2f5",
          "withoutMetadata": "7eaf6e2da372192c65ae6dd6fa3ba2298f35fb14a7a18391f0b8200e2d1c6918",
          "linkedWithoutMetadata": "7eaf6e2da372192c65ae6dd6fa3ba2298f35fb14a7a18391f0b8200e2d1c6918"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "9cfa54326120f91621488a8ccce7f89f3de28e482c3287b7f411389184ff0c9a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8beebf4e2a9edc76265cdcd41d7ea58bf04563c72e84ec697c3daa46896d5fa9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "284a66646cd8d6d6a48c7bb7054d6e0b4fbb4b2b4ea0188bb3cfcc3af85c808f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ea54f569f63a1a18dccbfaa455062c120052899af0dcff13ec580ae61d8d1d82",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:30",
        "version": {
          "withMetadata": "44dee444022ed31117597d649624b24a06b8359f7623f4487eb1f33558fda0ef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Minimal": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3Pool": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\IUniswapV3Pool.sol:15",
        "inherit": [
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3SwapCallback": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\callback\\IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolActions": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolDerivedState": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolEvents": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolImmutables": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolOwnerActions": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV3PoolState": {
        "src": "@uniswap\\v3-core\\contracts\\interfaces\\pool\\IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISwapRouter": {
        "src": "@uniswap\\v3-periphery\\contracts\\interfaces\\ISwapRouter.sol:9",
        "inherit": [
          "IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Keep3r": {
        "src": "contracts\\agency\\Keep3r.sol:36",
        "version": {
          "withMetadata": "aa374788c77288689544cce0dd43862f3b777a6a7d705057af53c7c90875b308",
          "withoutMetadata": "2594fdebaa62c7a020f2c690df8f39ca45b92d825155e1b1915e2ab9b5d6239e",
          "linkedWithoutMetadata": "2594fdebaa62c7a020f2c690df8f39ca45b92d825155e1b1915e2ab9b5d6239e"
        },
        "inherit": [
          "Keep3rKeepers",
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rJobs",
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobManager",
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "DustCollector",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IDustCollector",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rJobManager",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3r",
            "src": "contracts\\agency\\Keep3r.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rHelper": {
        "src": "contracts\\agency\\Keep3rHelper.sol:61",
        "version": {
          "withMetadata": "ae71f9af7319a1598475b2311ed9ae4ea4015eb13f7d137a23f003dbc30ea209",
          "withoutMetadata": "088ae58818229a4235f06f9af49b31ed1999613fd64cdc2c5393d4183b049e29",
          "linkedWithoutMetadata": "088ae58818229a4235f06f9af49b31ed1999613fd64cdc2c5393d4183b049e29"
        },
        "inherit": [
          "Keep3rHelperParameters",
          "Governable",
          "IGovernable",
          "IKeep3rHelperParameters",
          "IKeep3rHelper"
        ],
        "libraries": [
          "Math"
        ],
        "methods": [
          "(address,address)",
          "quote(uint256)",
          "bonds(address)",
          "getRewardAmountFor(address,uint256)",
          "getRewardAmount(uint256)",
          "getRewardBoostFor(uint256)",
          "getPoolTokens(address)",
          "isKP3RToken0(address)",
          "getPaymentParams(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rHelper",
            "src": "contracts\\agency\\Keep3rHelper.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "minBoost",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
            },
            {
              "label": "maxBoost",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
            },
            {
              "label": "targetBond",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
            },
            {
              "label": "workExtraGas",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
            },
            {
              "label": "keep3rV2",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:38"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Kp3rWethPool)15057_storage",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(Kp3rWethPool)15057_storage": {
              "label": "struct IKeep3rHelperParameters.Kp3rWethPool",
              "members": [
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isKP3RToken0",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rHelperParameters": {
        "src": "contracts\\agency\\Keep3rHelperParameters.sol:15",
        "version": {
          "withMetadata": "722e8b831d517004fcbdc800579a2d013b99ccbc1a9239bb03bf0db2c74355b2",
          "withoutMetadata": "5c6c1bfe73641d4a6f17cb8cc9de628dff7580698cc3a9384e90e7b0b02bed6a",
          "linkedWithoutMetadata": "5c6c1bfe73641d4a6f17cb8cc9de628dff7580698cc3a9384e90e7b0b02bed6a"
        },
        "inherit": [
          "Governable",
          "IGovernable",
          "IKeep3rHelperParameters"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setKp3rWethPool(address)",
          "setMinBoost(uint256)",
          "setMaxBoost(uint256)",
          "setTargetBond(uint256)",
          "setKeep3rV2(address)",
          "setWorkExtraGas(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rHelperParameters",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "minBoost",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxBoost",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "targetBond",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "workExtraGas",
            "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "minBoost",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
            },
            {
              "label": "maxBoost",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
            },
            {
              "label": "targetBond",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
            },
            {
              "label": "workExtraGas",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
            },
            {
              "label": "keep3rV2",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:38"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Kp3rWethPool)15057_storage",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(Kp3rWethPool)15057_storage": {
              "label": "struct IKeep3rHelperParameters.Kp3rWethPool",
              "members": [
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isKP3RToken0",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniV3PairManager": {
        "src": "contracts\\agency\\UniV3PairManager.sol:79",
        "version": {
          "withMetadata": "dada5c66992dba8ec98c29b727b7f7deb34540f3f75daab0b7c9ba68dba3bc93",
          "withoutMetadata": "3a14169a35133af152528b4f6168a738b0fe6a61e15baa6f16d9a3c118659970",
          "linkedWithoutMetadata": "3a14169a35133af152528b4f6168a738b0fe6a61e15baa6f16d9a3c118659970"
        },
        "inherit": [
          "Governable",
          "IUniV3PairManager",
          "IPairManager",
          "IERC20Metadata",
          "IERC20",
          "IGovernable"
        ],
        "libraries": [
          "TickMath",
          "PoolAddress",
          "LiquidityAmounts"
        ],
        "methods": [
          "(address,address)",
          "mint(uint256,uint256,uint256,uint256,address)",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "burn(uint128,uint256,uint256,address)",
          "collect()",
          "position()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniV3PairManager",
            "src": "contracts\\agency\\UniV3PairManager.sol:124"
          },
          {
            "kind": "state-variable-immutable",
            "name": "factory",
            "src": "contracts\\agency\\UniV3PairManager.sol:88"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token0",
            "src": "contracts\\agency\\UniV3PairManager.sol:89"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token1",
            "src": "contracts\\agency\\UniV3PairManager.sol:91"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts\\agency\\UniV3PairManager.sol:93"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fee",
            "src": "contracts\\agency\\UniV3PairManager.sol:94"
          },
          {
            "kind": "state-variable-immutable",
            "name": "sqrtRatioAX96",
            "src": "contracts\\agency\\UniV3PairManager.sol:96"
          },
          {
            "kind": "state-variable-immutable",
            "name": "sqrtRatioBX96",
            "src": "contracts\\agency\\UniV3PairManager.sol:97"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickLower",
            "src": "contracts\\agency\\UniV3PairManager.sol:102"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickUpper",
            "src": "contracts\\agency\\UniV3PairManager.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tickSpacing",
            "src": "contracts\\agency\\UniV3PairManager.sol:107"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:82"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:83"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:86"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:115"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:119"
            },
            {
              "label": "_poolKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PoolKey)5348_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolKey)5348_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniV3PairManagerFactory": {
        "src": "contracts\\agency\\UniV3PairManagerFactory.sol:39",
        "version": {
          "withMetadata": "ee230432a4b70205cbaca77ca5b5330b511b7f1e2a6f0aa1d808e6898883aea3",
          "withoutMetadata": "58bdef827f83967616d98c34379eea168e0a709b3d5100173f5c38c11ace28d6",
          "linkedWithoutMetadata": "58bdef827f83967616d98c34379eea168e0a709b3d5100173f5c38c11ace28d6"
        },
        "inherit": [
          "Governable",
          "IPairManagerFactory",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "createPairManager(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniV3PairManagerFactory",
            "src": "contracts\\agency\\UniV3PairManagerFactory.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "pairManagers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UniV3PairManagerFactory",
              "src": "contracts\\agency\\UniV3PairManagerFactory.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FixedPoint96": {
        "src": "contracts\\agency\\libraries\\FixedPoint96.sol:4",
        "version": {
          "withMetadata": "71e05046f3f83598bdc860f619e5915957b295379fbb9412383dceb1c0825110",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FullMath": {
        "src": "contracts\\agency\\libraries\\FullMath.sol:7",
        "version": {
          "withMetadata": "eca6cedb733a22c7cbbfe18dafa11c462b1f6513f5ba19ff77dc0f54bd05a259",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LiquidityAmounts": {
        "src": "contracts\\agency\\libraries\\LiquidityAmounts.sol:8",
        "version": {
          "withMetadata": "c1937d84e71ca7d3f42ef7016532e2328a279142476e32993defba31c62923db",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint96",
          "FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "PoolAddress": {
        "src": "contracts\\agency\\libraries\\PoolAddress.sol:4",
        "version": {
          "withMetadata": "f512f345c3a59738d9ab7e54428e066a5fa7c53a8ff6762f9b591dc57566cc90",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TickMath": {
        "src": "contracts\\agency\\libraries\\TickMath.sol:9",
        "version": {
          "withMetadata": "2f3beeaacd26e9c7a6b9ce59baf144f0b55cb58ab890c0f256de5ae61afbdbef",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DustCollector": {
        "src": "contracts\\agency\\peripherals\\DustCollector.sol:10",
        "inherit": [
          "Governable",
          "IGovernable",
          "IDustCollector",
          "IBaseErrors"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "sendDust(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Governable": {
        "src": "contracts\\agency\\peripherals\\Governable.sol:6",
        "inherit": [
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "setGovernance(address)",
          "acceptGovernance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Governable",
            "src": "contracts\\agency\\peripherals\\Governable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rAccountance": {
        "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:7",
        "inherit": [
          "IKeep3rAccountance"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "jobs()",
          "keepers()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rDisputable": {
        "src": "contracts\\agency\\peripherals\\Keep3rDisputable.sol:8",
        "inherit": [
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rDisputable"
        ],
        "libraries": [],
        "methods": [
          "dispute(address)",
          "resolve(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rParameters": {
        "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:9",
        "inherit": [
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "setKeep3rHelper(address)",
          "setKeep3rV1(address)",
          "setKeep3rV1Proxy(address)",
          "setKp3rWethPool(address)",
          "setBondTime(uint256)",
          "setUnbondTime(uint256)",
          "setFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rParameters",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "bondTime",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unbondTime",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rRoles": {
        "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:8",
        "version": {
          "withMetadata": "45ee6e6c05c256ee0803915c3b5eb0bde0e3ea2bf6d62dda60d12767b9ebd6b7",
          "withoutMetadata": "0880a2db7b8b8d9a4dbe3b5ff3d889ba2d42d671a5d6d3708a36b0f48ac5eb96",
          "linkedWithoutMetadata": "0880a2db7b8b8d9a4dbe3b5ff3d889ba2d42d671a5d6d3708a36b0f48ac5eb96"
        },
        "inherit": [
          "Governable",
          "IGovernable",
          "IKeep3rRoles"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addSlasher(address)",
          "removeSlasher(address)",
          "addDisputer(address)",
          "removeDisputer(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rRoles",
            "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobDisputable": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobDisputable.sol:9",
        "inherit": [
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "slashTokenFromJob(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobFundableCredits": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:14",
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "addTokenCreditsToJob(address,address,uint256)",
          "withdrawTokenCreditsFromJob(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobManager": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobManager.sol:9",
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "IKeep3rJobManager"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "addJob(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "20",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobMigration": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:9",
        "inherit": [
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "migrateJob(address,address)",
          "acceptJobMigration(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobOwnership": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:6",
        "inherit": [
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [
          "changeJobOwnership(address,address)",
          "acceptJobOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobWorkable": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:11",
        "inherit": [
          "Keep3rJobMigration",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "isKeeper(address)",
          "isBondedKeeper(address,address,uint256,uint256,uint256)",
          "worked(address)",
          "bondedPayment(address,uint256)",
          "directTokenPayment(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobs": {
        "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobs.sol:8",
        "inherit": [
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobManager",
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobManager",
          "IKeep3rDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperDisputable": {
        "src": "contracts\\agency\\peripherals\\keepers\\Keep3rKeeperDisputable.sol:9",
        "inherit": [
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "slash(address,address,uint256,uint256)",
          "revoke(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperFundable": {
        "src": "contracts\\agency\\peripherals\\keepers\\Keep3rKeeperFundable.sol:15",
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable"
        ],
        "libraries": [
          "EnumerableSet",
          "SafeERC20"
        ],
        "methods": [
          "bond(address,uint256)",
          "activate(address)",
          "unbond(address,uint256)",
          "withdraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeepers": {
        "src": "contracts\\agency\\peripherals\\keepers\\Keep3rKeepers.sol:6",
        "inherit": [
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XFactory": {
        "src": "contracts\\core\\XFactory.sol:12",
        "version": {
          "withMetadata": "5c3143ed07c2ac57c84f246a42d61b626398f649ccab0161c65059a96ca4bdd0",
          "withoutMetadata": "f96b1ac108d63fbf811777741a793f9b4629eaad9ef1e3d9898c82c39ef00a95",
          "linkedWithoutMetadata": "f96b1ac108d63fbf811777741a793f9b4629eaad9ef1e3d9898c82c39ef00a95"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IXFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getPair(address,address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "changeTokenStatus(address,uint8)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2030,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4347,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4534,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5097,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 6169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XFactory",
            "src": "contracts\\core\\XFactory.sol:19"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30421",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30415_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30389_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30361_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "15",
              "type": "t_address",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_address)dyn_storage",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:16"
            },
            {
              "label": "tokenListed",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XFactory",
              "src": "contracts\\core\\XFactory.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30421": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30389_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)30358_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30361_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30415_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30389_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30381",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XPair": {
        "src": "contracts\\core\\XPair.sol:17",
        "version": {
          "withMetadata": "d1a0746a623af4dd9bcb657423472307c7e9ac59e611990c6905f64cc8aaff81",
          "withoutMetadata": "f163729ae15e2115c6829e33f9a85397cbfa16240c8ba342406a56baa7726f2b",
          "linkedWithoutMetadata": "f163729ae15e2115c6829e33f9a85397cbfa16240c8ba342406a56baa7726f2b"
        },
        "inherit": [
          "IXPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "changeStatus(uint8)",
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "sim_burn(uint256)",
          "swap(uint256,uint256,address,bytes)",
          "dilute(uint256,address)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XPair",
            "src": "contracts\\core\\XPair.sol:110"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\XPair.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:25"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:26"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:27"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:29"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:34"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "5",
              "type": "t_enum(ListStatus)30381",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:39"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:41"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:42"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:43"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:45"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:46"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:47"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:49"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:50"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:51"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:53"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:54"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:55"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XPair",
              "src": "contracts\\core\\XPair.sol:57"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICallee": {
        "src": "contracts\\core\\interfaces\\ICallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXFactory": {
        "src": "contracts\\core\\interfaces\\IXFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "changeTokenStatus(address,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXPair": {
        "src": "contracts\\core\\interfaces\\IXPair.sol:7",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "status()",
          "changeStatus(uint8)",
          "sim_burn(uint256)",
          "dilute(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Referral": {
        "src": "contracts\\farm\\Referral.sol:7",
        "version": {
          "withMetadata": "17afb95afcf01c95c1e5c4ba2c8a8205416fb9e818013818b7f376bce703482a",
          "withoutMetadata": "82fac4bd7405e54edcc5ead934551bd2d56200bd94ba1d12b80d1db09965997b",
          "linkedWithoutMetadata": "82fac4bd7405e54edcc5ead934551bd2d56200bd94ba1d12b80d1db09965997b"
        },
        "inherit": [
          "Ownable",
          "Context",
          "IReferral"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setPayer(address)",
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getOutstandingCommission(address)",
          "debitOutstandingCommission(address,uint256)",
          "getReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Referral",
            "src": "contracts\\farm\\Referral.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "referrers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:8"
            },
            {
              "label": "countReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:9"
            },
            {
              "label": "totalReferralCommissions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:10"
            },
            {
              "label": "outstandingCommissions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:11"
            },
            {
              "label": "payer",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Referral",
              "src": "contracts\\farm\\Referral.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TGRToken": {
        "src": "contracts\\farm\\TGRToken.sol:24",
        "version": {
          "withMetadata": "26699e96f26eebbc19efe154f37d80ce349f55d2550c29eae34e78fd3c0c72d3",
          "withoutMetadata": "26699e96f26eebbc19efe154f37d80ce349f55d2550c29eae34e78fd3c0c72d3",
          "linkedWithoutMetadata": "26699e96f26eebbc19efe154f37d80ce349f55d2550c29eae34e78fd3c0c72d3"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ITGRToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "console"
        ],
        "methods": [
          "()",
          "(address)",
          "_decreaseAllowance(address,address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "pulse_lp_reward()",
          "pulse_vote_burn()",
          "pulse_user_burn()",
          "checkForConsistency()",
          "transferDirectSafe(address,address,uint256)",
          "changeBurnRates(uint256,uint256)",
          "getOwner()",
          "setNode(uint8,address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10655,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11938,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12120,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 12307,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13982,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 16624,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TGRToken",
            "src": "contracts\\farm\\TGRToken.sol:120"
          },
          {
            "kind": "state-variable-immutable",
            "name": "votes",
            "src": "contracts\\farm\\TGRToken.sol:52"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30421",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30415_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30389_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30361_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_enum(ActionType)30339,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_enum(ActionType)30339)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "20",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(ActionParams)30355_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "25",
              "type": "t_contract(ISessionRegistrar)30564",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "26",
              "type": "t_contract(ISessionFees)30534",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:44"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:45"
            },
            {
              "label": "lp_reward",
              "offset": 0,
              "slot": "30",
              "type": "t_struct(Pulse)13318_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:54"
            },
            {
              "label": "vote_burn",
              "offset": 0,
              "slot": "38",
              "type": "t_struct(Pulse)13318_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:55"
            },
            {
              "label": "user_burn",
              "offset": 0,
              "slot": "46",
              "type": "t_struct(Pulse)13318_storage",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:56"
            },
            {
              "label": "Users",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_address,t_struct(User)13321_storage)",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:58"
            },
            {
              "label": "nonUserSumTokens",
              "offset": 0,
              "slot": "55",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:59"
            },
            {
              "label": "buysell_burn_rate",
              "offset": 0,
              "slot": "56",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:61"
            },
            {
              "label": "shift_burn_rate",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:62"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "58",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "alice",
              "offset": 0,
              "slot": "59",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "bob",
              "offset": 0,
              "slot": "60",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "carol",
              "offset": 0,
              "slot": "61",
              "type": "t_address",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:65"
            },
            {
              "label": "analyticMath",
              "offset": 0,
              "slot": "62",
              "type": "t_contract(AnalyticMath)20728",
              "contract": "TGRToken",
              "src": "contracts\\farm\\TGRToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_enum(ActionType)30339)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AnalyticMath)20728": {
              "label": "contract AnalyticMath",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)30534": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)30564": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30421": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30389_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)13321_storage)": {
              "label": "mapping(address => struct ITGRToken.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)30355_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30339",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)30358_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30361_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30415_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30389_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30381",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pulse)13318_storage": {
              "label": "struct ITGRToken.Pulse",
              "members": [
                {
                  "label": "latestTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cycle",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "decayRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accDecayPer1e12",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "sum_tokens",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "pending_burn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "latestRound",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(User)13321_storage": {
              "label": "struct ITGRToken.User",
              "members": [
                {
                  "label": "debtToPendingBurn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IReferral": {
        "src": "contracts\\farm\\interfaces\\IReferral.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getReferrer(address)",
          "getOutstandingCommission(address)",
          "debitOutstandingCommission(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITGRToken": {
        "src": "contracts\\farm\\interfaces\\ITGRToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferDirectSafe(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BasicJob": {
        "src": "contracts\\for-test\\BasicJob.sol:6",
        "version": {
          "withMetadata": "2caf7b470391014a3f4163f9c03d8a3b4148cd89ed5b227c2baacdb0bdb435d4",
          "withoutMetadata": "a157dbbfbeac0008898705284ba68d43035dcf64ff8ac6e3c009f7b7f5a9ea38",
          "linkedWithoutMetadata": "a157dbbfbeac0008898705284ba68d43035dcf64ff8ac6e3c009f7b7f5a9ea38"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "work()",
          "workHard(uint256)",
          "workRefund(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BasicJob",
            "src": "contracts\\for-test\\BasicJob.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "keep3r",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BasicJob",
              "src": "contracts\\for-test\\BasicJob.sol:9"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BasicJob",
              "src": "contracts\\for-test\\BasicJob.sol:10"
            },
            {
              "label": "array",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "BasicJob",
              "src": "contracts\\for-test\\BasicJob.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20ForTest": {
        "src": "contracts\\for-test\\ERC20ForTest.sol:6",
        "version": {
          "withMetadata": "03556eeeca281f3e148576eadfaea202a4f9d06fc229ac1277287a2c610f1d9f",
          "withoutMetadata": "8031c6d6a61864e0b1654e3d4b52962445ecc2b45907531c980f6e1463341160",
          "linkedWithoutMetadata": "8031c6d6a61864e0b1654e3d4b52962445ecc2b45907531c980f6e1463341160"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transferInternal(address,address,uint256)",
          "approveInternal(address,address,uint256)",
          "deposit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20ForTest",
            "src": "contracts\\for-test\\ERC20ForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV3PoolForTest": {
        "src": "contracts\\for-test\\IUniswapV3PoolForTest.sol:8",
        "inherit": [
          "IUniswapV3Pool",
          "IUniswapV3PoolEvents",
          "IUniswapV3PoolOwnerActions",
          "IUniswapV3PoolActions",
          "IUniswapV3PoolDerivedState",
          "IUniswapV3PoolState",
          "IUniswapV3PoolImmutables",
          "IERC20Minimal"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "JobForTest": {
        "src": "contracts\\for-test\\JobForTest.sol:6",
        "version": {
          "withMetadata": "ce4a212488210bb1d8374faf59970057810c3a2da8a8dac5b485ddd07fce515e",
          "withoutMetadata": "e79aa8d000e3f8fa95d0cbc93d3c3203f1e662fb862d8cabb8e83eb6b36da32d",
          "linkedWithoutMetadata": "e79aa8d000e3f8fa95d0cbc93d3c3203f1e662fb862d8cabb8e83eb6b36da32d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "work()",
          "workHard(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "JobForTest",
            "src": "contracts\\for-test\\JobForTest.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "keep3r",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "JobForTest",
              "src": "contracts\\for-test\\JobForTest.sol:8"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "JobForTest",
              "src": "contracts\\for-test\\JobForTest.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rForTest": {
        "src": "contracts\\for-test\\Keep3rForTest.sol:6",
        "version": {
          "withMetadata": "4352a96e9813a597582603aa2711ee62d539d8f0fda5e94b2fa8204a3a5113c7",
          "withoutMetadata": "54dade9ecb7228155dd55afb5c9ba185f8769038780740421d72a5b879c257d1",
          "linkedWithoutMetadata": "54dade9ecb7228155dd55afb5c9ba185f8769038780740421d72a5b879c257d1"
        },
        "inherit": [
          "Keep3r",
          "Keep3rKeepers",
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rJobs",
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobManager",
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "DustCollector",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IDustCollector",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rJobManager",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "viewTickOrder(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rForTest",
            "src": "contracts\\for-test\\Keep3rForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rHelperForTest": {
        "src": "contracts\\for-test\\Keep3rHelperForTest.sol:6",
        "version": {
          "withMetadata": "9a53f08050b037f86fdc57c717890a72e6e196e3f9da8cfaccb94ad506468f2f",
          "withoutMetadata": "23246aa1724553d0d56d31bfe00881fe6a62a083cb991c34f87c751402802da4",
          "linkedWithoutMetadata": "23246aa1724553d0d56d31bfe00881fe6a62a083cb991c34f87c751402802da4"
        },
        "inherit": [
          "Keep3rHelper",
          "Keep3rHelperParameters",
          "Governable",
          "IGovernable",
          "IKeep3rHelperParameters",
          "IKeep3rHelper"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setBaseFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rHelperForTest",
            "src": "contracts\\for-test\\Keep3rHelperForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "minBoost",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:23"
            },
            {
              "label": "maxBoost",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:26"
            },
            {
              "label": "targetBond",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:29"
            },
            {
              "label": "workExtraGas",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:32"
            },
            {
              "label": "keep3rV2",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:38"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Kp3rWethPool)15057_storage",
              "contract": "Keep3rHelperParameters",
              "src": "contracts\\agency\\Keep3rHelperParameters.sol:41"
            },
            {
              "label": "basefee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Keep3rHelperForTest",
              "src": "contracts\\for-test\\Keep3rHelperForTest.sol:7"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(Kp3rWethPool)15057_storage": {
              "label": "struct IKeep3rHelperParameters.Kp3rWethPool",
              "members": [
                {
                  "label": "poolAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "isKP3RToken0",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UniV3PairManagerForTest": {
        "src": "contracts\\for-test\\UniV3PairManagerForTest.sol:16",
        "version": {
          "withMetadata": "f62214cd14bd76690b447e32aa657d3918f264fd42e23a13d5b9652457f4e2c7",
          "withoutMetadata": "b38dc91d1570ba1e443d76c72b04a1490e0e3765b85403a357e8ab0ef9d57d1e",
          "linkedWithoutMetadata": "b38dc91d1570ba1e443d76c72b04a1490e0e3765b85403a357e8ab0ef9d57d1e"
        },
        "inherit": [
          "UniV3PairManager",
          "Governable",
          "IUniV3PairManager",
          "IPairManager",
          "IERC20Metadata",
          "IERC20",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "internalAddLiquidity(uint256,uint256,uint256,uint256)",
          "internalPay(address,address,address,uint256)",
          "internalMint(address,uint256)",
          "internalBurn(address,uint256)",
          "internalTransferTokens(address,address,uint256)",
          "internalSafeTransferFrom(address,address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniV3PairManagerForTest",
            "src": "contracts\\for-test\\UniV3PairManagerForTest.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:82"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:83"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:86"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:115"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:119"
            },
            {
              "label": "_poolKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PoolKey)5348_storage",
              "contract": "UniV3PairManager",
              "src": "contracts\\agency\\UniV3PairManager.sol:124"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PoolKey)5348_storage": {
              "label": "struct PoolAddress.PoolKey",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fee",
                  "type": "t_uint24",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint24": {
              "label": "uint24",
              "numberOfBytes": "3"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LiquidityAmountsForTest": {
        "src": "contracts\\for-test\\libraries\\LiquidityAmountsForTest.sol:10",
        "version": {
          "withMetadata": "c6da61aee24d61680cfe0ed390375496f8e0ffc29cf58fe5dd048014b61a7511",
          "withoutMetadata": "fabcf183a59141af743645791ebd037c74bf22b862b6e4b20b1901fba9d76b53",
          "linkedWithoutMetadata": "fabcf183a59141af743645791ebd037c74bf22b862b6e4b20b1901fba9d76b53"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint96",
          "FullMath"
        ],
        "methods": [
          "getLiquidityForAmount0(uint160,uint160,uint256)",
          "getLiquidityForAmount1(uint160,uint160,uint256)",
          "getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)",
          "getAmount0ForLiquidity(uint160,uint160,uint128)",
          "getAmount1ForLiquidity(uint160,uint160,uint128)",
          "getAmountsForLiquidity(uint160,uint160,uint160,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DustCollectorForTest": {
        "src": "contracts\\for-test\\peripherals\\DustCollectorForTest.sol:6",
        "version": {
          "withMetadata": "5cbc4273974975b4caaeffe0342ca366863921746dc8d0ab52cdd0661759d682",
          "withoutMetadata": "e0829387857986b50707e60f236966d4bea0bebd6f20e039a8c5fe3f07f49201",
          "linkedWithoutMetadata": "e0829387857986b50707e60f236966d4bea0bebd6f20e039a8c5fe3f07f49201"
        },
        "inherit": [
          "DustCollector",
          "Governable",
          "IGovernable",
          "IDustCollector",
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DustCollectorForTest",
            "src": "contracts\\for-test\\peripherals\\DustCollectorForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "GovernableForTest": {
        "src": "contracts\\for-test\\peripherals\\GovernableForTest.sol:6",
        "version": {
          "withMetadata": "d56f60d00aef7999501235b83bba83fea6b4eb73566eba9d984bbed387b5b9cd",
          "withoutMetadata": "d9968478e30c31f68c70ce5da20e7c00f2f23052ed8c59cd6299b2f8cd27279b",
          "linkedWithoutMetadata": "d9968478e30c31f68c70ce5da20e7c00f2f23052ed8c59cd6299b2f8cd27279b"
        },
        "inherit": [
          "Governable",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GovernableForTest",
            "src": "contracts\\for-test\\peripherals\\GovernableForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "governance",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rAccountanceForTest": {
        "src": "contracts\\for-test\\peripherals\\Keep3rAccountanceForTest.sol:6",
        "version": {
          "withMetadata": "696e16092bc4b6fd590f774c0d0a91b8c312e458cff53b6923dd074aa184a867",
          "withoutMetadata": "338e3aa563f99a0da74a1ecdc0d6f41bbaaf06fce51d522914759dd923f4cd44",
          "linkedWithoutMetadata": "338e3aa563f99a0da74a1ecdc0d6f41bbaaf06fce51d522914759dd923f4cd44"
        },
        "inherit": [
          "Keep3rAccountance",
          "IKeep3rAccountance"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "setJob(address)",
          "setKeeper(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rDisputableForTest": {
        "src": "contracts\\for-test\\peripherals\\Keep3rDisputableForTest.sol:6",
        "version": {
          "withMetadata": "7d9b2ac8c4d514a8fa0a769dd8ede2b3400bae43c1792a239135494fedc085ef",
          "withoutMetadata": "9af1007dc257ffde2ab885a7119b00a062b5a2c2f137da7b73dc13ffa2aac8a8",
          "linkedWithoutMetadata": "9af1007dc257ffde2ab885a7119b00a062b5a2c2f137da7b73dc13ffa2aac8a8"
        },
        "inherit": [
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rDisputable"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rDisputableForTest",
            "src": "contracts\\for-test\\peripherals\\Keep3rDisputableForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rParametersForTest": {
        "src": "contracts\\for-test\\peripherals\\Keep3rParametersForTest.sol:6",
        "version": {
          "withMetadata": "2f06f1ce02f07387fbf62861df414ced223c06903eb228feecea135cdf4a016f",
          "withoutMetadata": "22c33b8bc08c35ec2f4001aa946ac5ec031e5a657e09f0b97057757972333d1b",
          "linkedWithoutMetadata": "22c33b8bc08c35ec2f4001aa946ac5ec031e5a657e09f0b97057757972333d1b"
        },
        "inherit": [
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "viewLiquidityPool(address)",
          "viewIsKP3RToken0(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rParametersForTest",
            "src": "contracts\\for-test\\peripherals\\Keep3rParametersForTest.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "20",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobDisputableForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobDisputableForTest.sol:6",
        "version": {
          "withMetadata": "4803505e1f0b4b224dc6fcdd0c8ca0d44bf3892c7d645502dde68bd939e83efe",
          "withoutMetadata": "289fb94c3e803e14efe385427ef5f6bcb94cc08a8a12c27ef49d878e19110f3e",
          "linkedWithoutMetadata": "289fb94c3e803e14efe385427ef5f6bcb94cc08a8a12c27ef49d878e19110f3e"
        },
        "inherit": [
          "Keep3rJobDisputable",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rDisputable",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJobToken(address,address)",
          "internalJobTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobDisputableForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobDisputableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobFundableCreditsForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobFundableCreditsForTest.sol:6",
        "version": {
          "withMetadata": "bb6cbc5758863458de2f5a491cbde172cafb0f0aa6e9e956ea6e62a93c6a18b0",
          "withoutMetadata": "baff6391f56af4e40e4dddd4d040455b3a8775a06facda8c881ad35b37241bf9",
          "linkedWithoutMetadata": "baff6391f56af4e40e4dddd4d040455b3a8775a06facda8c881ad35b37241bf9"
        },
        "inherit": [
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJob(address,address)",
          "setJobToken(address,address)",
          "isJobToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobFundableCreditsForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobFundableCreditsForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobManagerForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobManagerForTest.sol:6",
        "version": {
          "withMetadata": "3c5352cb955eeb1fcb40aa14a94654a1d7faeea8ee19dc2eb5830a47e41887e0",
          "withoutMetadata": "cfc8c444c26635d88d326f01d68ae96497a7eb40c76f851628cea19a6deecc9d",
          "linkedWithoutMetadata": "cfc8c444c26635d88d326f01d68ae96497a7eb40c76f851628cea19a6deecc9d"
        },
        "inherit": [
          "Keep3rJobManager",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "IKeep3rJobManager"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "isJob(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobManagerForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobManagerForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "20",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobMigrationForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobMigrationForTest.sol:6",
        "version": {
          "withMetadata": "3983be130b446292791bd4dcdf76119977e30f830c7f4e550ca058443aa8a0e5",
          "withoutMetadata": "3bfed4f3c2637ea1c889cffb9b36f57a446bcf8db4b1332e0d4f65028de0ce31",
          "linkedWithoutMetadata": "3bfed4f3c2637ea1c889cffb9b36f57a446bcf8db4b1332e0d4f65028de0ce31"
        },
        "inherit": [
          "Keep3rJobMigration",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJobToken(address,address)",
          "setJobLiquidity(address,address)",
          "viewJobTokenListLength(address)",
          "viewJobLiquidityList(address)",
          "viewJobPeriodCredits(address)",
          "viewJobLiquidityCredits(address)",
          "viewMigrationCreatedAt(address,address)",
          "isJob(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobMigrationForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobMigrationForTest.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "settleJobAccountanceCallCount",
              "offset": 0,
              "slot": "37",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rJobMigrationForTest",
              "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobMigrationForTest.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobOwnershipForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobOwnershipForTest.sol:6",
        "version": {
          "withMetadata": "9c4172473cbec288fee19d04ead1be93b612e92faefec3c34de4e9c6b8358a91",
          "withoutMetadata": "29a97d5285b9a0b7822ec752a79ef97c7d49f5f19c138241f02ba5a53a57e4a0",
          "linkedWithoutMetadata": "29a97d5285b9a0b7822ec752a79ef97c7d49f5f19c138241f02ba5a53a57e4a0"
        },
        "inherit": [
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rJobWorkableForTest": {
        "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobWorkableForTest.sol:6",
        "version": {
          "withMetadata": "4fe9f15e8d9e07494ed61065892d9200ca51ab781bdd8654f3d127c9a016a17d",
          "withoutMetadata": "8be014bbc46b1bfa833fea65cd748bd48707578c0d075362dc9f247d9ebe54ee",
          "linkedWithoutMetadata": "8be014bbc46b1bfa833fea65cd748bd48707578c0d075362dc9f247d9ebe54ee"
        },
        "inherit": [
          "Keep3rJobWorkable",
          "Keep3rJobMigration",
          "Keep3rJobFundableCredits",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "Keep3rJobOwnership",
          "IKeep3rJobOwnership",
          "ReentrancyGuard",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobMigration",
          "IKeep3rJobWorkable"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setJob(address)",
          "setKeeper(address)",
          "viewGas()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rJobWorkableForTest",
            "src": "contracts\\for-test\\peripherals\\jobs\\Keep3rJobWorkableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "jobOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:8"
            },
            {
              "label": "jobPendingOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobOwnership",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobOwnership.sol:11"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "24",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "29",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "30",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            },
            {
              "label": "jobTokenCreditsAddedAt",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobFundableCredits",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobFundableCredits.sol:22"
            },
            {
              "label": "pendingJobMigrations",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:15"
            },
            {
              "label": "_migrationCreatedAt",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rJobMigration",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobMigration.sol:16"
            },
            {
              "label": "_initialGas",
              "offset": 0,
              "slot": "37",
              "type": "t_uint256",
              "contract": "Keep3rJobWorkable",
              "src": "contracts\\agency\\peripherals\\jobs\\Keep3rJobWorkable.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperDisputableForTest": {
        "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperDisputableForTest.sol:6",
        "version": {
          "withMetadata": "fb948df0b20e2e9a7e0955bbda1ecb8767a17523f1cae4d245b1370d7dc8c39b",
          "withoutMetadata": "e88d12a2dcba5f921430541b4710bf85e179731c675651e1cda9b1f1c3ba8523",
          "linkedWithoutMetadata": "e88d12a2dcba5f921430541b4710bf85e179731c675651e1cda9b1f1c3ba8523"
        },
        "inherit": [
          "Keep3rKeeperDisputable",
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rDisputable",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable",
          "IKeep3rDisputable",
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "setKeeper(address)",
          "internalSlash(address,address,uint256,uint256)",
          "isKeeper(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rKeeperDisputableForTest",
            "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperDisputableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Keep3rKeeperFundableForTest": {
        "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperFundableForTest.sol:6",
        "version": {
          "withMetadata": "5bde66abbd38e53d2460a5ca6e09b324ff903f6f2c34d31c15e1c17bf354d5a5",
          "withoutMetadata": "8d68973352bfcd6966060578c879888cbe7c5a3fccb1b9aef36bbc4980c32dd4",
          "linkedWithoutMetadata": "8d68973352bfcd6966060578c879888cbe7c5a3fccb1b9aef36bbc4980c32dd4"
        },
        "inherit": [
          "Keep3rKeeperFundable",
          "Keep3rParameters",
          "Keep3rRoles",
          "Governable",
          "IGovernable",
          "IKeep3rRoles",
          "Keep3rAccountance",
          "IKeep3rAccountance",
          "IKeep3rParameters",
          "IBaseErrors",
          "ReentrancyGuard",
          "IKeep3rKeeperFundable"
        ],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [
          "(address,address,address,address)",
          "isKeeper(address)",
          "setJob(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Keep3rKeeperFundableForTest",
            "src": "contracts\\for-test\\peripherals\\keepers\\Keep3rKeeperFundableForTest.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_keepers",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:11"
            },
            {
              "label": "workCompleted",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:14"
            },
            {
              "label": "firstSeen",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:17"
            },
            {
              "label": "disputes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:20"
            },
            {
              "label": "bonds",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:24"
            },
            {
              "label": "jobTokenCredits",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:27"
            },
            {
              "label": "_jobLiquidityCredits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:30"
            },
            {
              "label": "_jobPeriodCredits",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:33"
            },
            {
              "label": "_jobTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:36"
            },
            {
              "label": "_jobLiquidities",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(AddressSet)2476_storage)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:39"
            },
            {
              "label": "_liquidityPool",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:42"
            },
            {
              "label": "_isKP3RToken0",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:45"
            },
            {
              "label": "pendingBonds",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:48"
            },
            {
              "label": "canActivateAfter",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:51"
            },
            {
              "label": "canWithdrawAfter",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:54"
            },
            {
              "label": "pendingUnbonds",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:57"
            },
            {
              "label": "hasBonded",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:60"
            },
            {
              "label": "_jobs",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(AddressSet)2476_storage",
              "contract": "Keep3rAccountance",
              "src": "contracts\\agency\\peripherals\\Keep3rAccountance.sol:63"
            },
            {
              "label": "governance",
              "offset": 0,
              "slot": "21",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:8"
            },
            {
              "label": "pendingGovernance",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "Governable",
              "src": "contracts\\agency\\peripherals\\Governable.sol:11"
            },
            {
              "label": "slashers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:10"
            },
            {
              "label": "disputers",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Keep3rRoles",
              "src": "contracts\\agency\\peripherals\\Keep3rRoles.sol:13"
            },
            {
              "label": "keep3rV1",
              "offset": 0,
              "slot": "25",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:11"
            },
            {
              "label": "keep3rV1Proxy",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:14"
            },
            {
              "label": "keep3rHelper",
              "offset": 0,
              "slot": "27",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:17"
            },
            {
              "label": "kp3rWethPool",
              "offset": 0,
              "slot": "28",
              "type": "t_address",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:20"
            },
            {
              "label": "bondTime",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:23"
            },
            {
              "label": "unbondTime",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:26"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "Keep3rParameters",
              "src": "contracts\\agency\\peripherals\\Keep3rParameters.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)2476_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2476_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2175_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2175_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProxyForTest": {
        "src": "contracts\\for-test\\utils\\ProxyForTest.sol:4",
        "version": {
          "withMetadata": "c42b2481ebed7c74ae4cf5b04d4440daaf5fa55db41a6342ef4cb232aac86bd0",
          "withoutMetadata": "1283072a057d354eceec2eb342d09da8bacb7d089f72f2bee03c9b245c8a9b4f",
          "linkedWithoutMetadata": "1283072a057d354eceec2eb342d09da8bacb7d089f72f2bee03c9b245c8a9b4f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "call(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3r": {
        "src": "contracts\\interfaces\\IKeep3r.sol:14",
        "inherit": [
          "IKeep3rParameters",
          "IBaseErrors",
          "IKeep3rRoles",
          "IKeep3rAccountance",
          "IKeep3rKeepers",
          "IKeep3rKeeperDisputable",
          "IKeep3rJobs",
          "IKeep3rJobWorkable",
          "IKeep3rJobManager",
          "IKeep3rJobMigration",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rHelper": {
        "src": "contracts\\interfaces\\IKeep3rHelper.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "quote(uint256)",
          "bonds(address)",
          "getRewardAmountFor(address,uint256)",
          "getRewardBoostFor(uint256)",
          "getRewardAmount(uint256)",
          "getPoolTokens(address)",
          "isKP3RToken0(address)",
          "getPaymentParams(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rHelperParameters": {
        "src": "contracts\\interfaces\\IKeep3rHelperParameters.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "KP3R()",
          "BOOST_BASE()",
          "kp3rWethPool()",
          "minBoost()",
          "maxBoost()",
          "targetBond()",
          "workExtraGas()",
          "keep3rV2()",
          "setKp3rWethPool(address)",
          "setMinBoost(uint256)",
          "setMaxBoost(uint256)",
          "setTargetBond(uint256)",
          "setKeep3rV2(address)",
          "setWorkExtraGas(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPairManager": {
        "src": "contracts\\interfaces\\IPairManager.sol:8",
        "inherit": [
          "IERC20Metadata",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "factory()",
          "pool()",
          "token0()",
          "token1()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPairManagerFactory": {
        "src": "contracts\\interfaces\\IPairManagerFactory.sol:8",
        "inherit": [
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "pairManagers(address)",
          "createPairManager(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniV3PairManager": {
        "src": "contracts\\interfaces\\IUniV3PairManager.sol:12",
        "inherit": [
          "IPairManager",
          "IERC20Metadata",
          "IERC20",
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "fee()",
          "tickUpper()",
          "tickLower()",
          "tickSpacing()",
          "sqrtRatioAX96()",
          "sqrtRatioBX96()",
          "uniswapV3MintCallback(uint256,uint256,bytes)",
          "mint(uint256,uint256,uint256,uint256,address)",
          "position()",
          "collect()",
          "burn(uint128,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAggregatorV3": {
        "src": "contracts\\interfaces\\external\\IAggregatorV3.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKasparov": {
        "src": "contracts\\interfaces\\external\\IKasparov.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "governor()",
          "work()",
          "setKeep3r(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rV1": {
        "src": "contracts\\interfaces\\external\\IKeep3rV1.sol:8",
        "inherit": [
          "IERC20Metadata",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "KPRH()",
          "delegates(address)",
          "checkpoints(address,uint32)",
          "numCheckpoints(address)",
          "DOMAIN_TYPEHASH()",
          "DOMAINSEPARATOR()",
          "DELEGATION_TYPEHASH()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "BOND()",
          "UNBOND()",
          "LIQUIDITYBOND()",
          "FEE()",
          "BASE()",
          "ETH()",
          "bondings(address,address)",
          "canWithdrawAfter(address,address)",
          "pendingUnbonds(address,address)",
          "pendingbonds(address,address)",
          "bonds(address,address)",
          "votes(address)",
          "firstSeen(address)",
          "disputes(address)",
          "lastJob(address)",
          "workCompleted(address)",
          "jobs(address)",
          "credits(address,address)",
          "liquidityProvided(address,address,address)",
          "liquidityUnbonding(address,address,address)",
          "liquidityAmountsUnbonding(address,address,address)",
          "jobProposalDelay(address)",
          "liquidityApplied(address,address,address)",
          "liquidityAmount(address,address,address)",
          "keepers(address)",
          "blacklist(address)",
          "keeperList(uint256)",
          "jobList(uint256)",
          "governance()",
          "pendingGovernance()",
          "liquidityAccepted(address)",
          "liquidityPairs(uint256)",
          "getCurrentVotes(address)",
          "addCreditETH(address)",
          "addCredit(address,address,uint256)",
          "addVotes(address,uint256)",
          "removeVotes(address,uint256)",
          "addKPRCredit(address,uint256)",
          "approveLiquidity(address)",
          "revokeLiquidity(address)",
          "pairs()",
          "addLiquidityToJob(address,address,uint256)",
          "applyCreditToJob(address,address,address)",
          "unbondLiquidityFromJob(address,address,uint256)",
          "removeLiquidityFromJob(address,address)",
          "mint(uint256)",
          "burn(uint256)",
          "worked(address)",
          "receipt(address,address,uint256)",
          "receiptETH(address,uint256)",
          "addJob(address)",
          "getJobs()",
          "removeJob(address)",
          "setKeep3rHelper(address)",
          "setGovernance(address)",
          "acceptGovernance()",
          "isKeeper(address)",
          "isMinKeeper(address,uint256,uint256,uint256)",
          "isBondedKeeper(address,address,uint256,uint256,uint256)",
          "bond(address,uint256)",
          "getKeepers()",
          "activate(address)",
          "unbond(address,uint256)",
          "slash(address,address,uint256)",
          "withdraw(address)",
          "dispute(address)",
          "revoke(address)",
          "resolve(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rV1Proxy": {
        "src": "contracts\\interfaces\\external\\IKeep3rV1Proxy.sol:6",
        "inherit": [
          "IGovernable"
        ],
        "libraries": [],
        "methods": [
          "keep3rV1()",
          "minter()",
          "next(address)",
          "caps(address)",
          "recipients()",
          "recipientsCaps()",
          "addRecipient(address,uint256)",
          "removeRecipient(address)",
          "draw()",
          "setKeep3rV1(address)",
          "setMinter(address)",
          "mint(uint256)",
          "mint(address,uint256)",
          "setKeep3rV1Governance(address)",
          "acceptKeep3rV1Governance()",
          "dispute(address)",
          "slash(address,address,uint256)",
          "revoke(address)",
          "resolve(address)",
          "addJob(address)",
          "removeJob(address)",
          "addKPRCredit(address,uint256)",
          "approveLiquidity(address)",
          "revokeLiquidity(address)",
          "setKeep3rHelper(address)",
          "addVotes(address,uint256)",
          "removeVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWeth9": {
        "src": "contracts\\interfaces\\external\\IWeth9.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBaseErrors": {
        "src": "contracts\\interfaces\\peripherals\\IBaseErrors.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IDustCollector": {
        "src": "contracts\\interfaces\\peripherals\\IDustCollector.sol:7",
        "inherit": [
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "sendDust(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IGovernable": {
        "src": "contracts\\interfaces\\peripherals\\IGovernable.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "governance()",
          "pendingGovernance()",
          "setGovernance(address)",
          "acceptGovernance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rAccountance": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rAccountance.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "workCompleted(address)",
          "firstSeen(address)",
          "disputes(address)",
          "bonds(address,address)",
          "jobTokenCredits(address,address)",
          "pendingBonds(address,address)",
          "canActivateAfter(address,address)",
          "canWithdrawAfter(address,address)",
          "pendingUnbonds(address,address)",
          "hasBonded(address)",
          "jobs()",
          "keepers()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rDisputable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rDisputable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dispute(address)",
          "resolve(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobDisputable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:427",
        "inherit": [
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits"
        ],
        "libraries": [],
        "methods": [
          "slashTokenFromJob(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobFundableCredits": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jobTokenCreditsAddedAt(address,address)",
          "addTokenCreditsToJob(address,address,uint256)",
          "withdrawTokenCreditsFromJob(address,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobFundableLiquidity": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:69",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobManager": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:234",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addJob(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobMigration": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:380",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pendingJobMigrations(address)",
          "migrateJob(address,address)",
          "acceptJobMigration(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobOwnership": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:331",
        "inherit": [],
        "libraries": [],
        "methods": [
          "jobOwner(address)",
          "jobPendingOwner(address)",
          "changeJobOwnership(address,address)",
          "acceptJobOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobWorkable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:259",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isKeeper(address)",
          "isBondedKeeper(address,address,uint256,uint256,uint256)",
          "worked(address)",
          "bondedPayment(address,uint256)",
          "directTokenPayment(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rJobs": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rJobs.sol:477",
        "inherit": [
          "IKeep3rJobWorkable",
          "IKeep3rJobManager",
          "IKeep3rJobMigration",
          "IKeep3rJobDisputable",
          "IKeep3rJobFundableLiquidity",
          "IKeep3rJobFundableCredits",
          "IKeep3rJobOwnership"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rKeeperDisputable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rKeepers.sol:49",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slash(address,address,uint256,uint256)",
          "revoke(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rKeeperFundable": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rKeepers.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "bond(address,uint256)",
          "unbond(address,uint256)",
          "activate(address)",
          "withdraw(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rKeepers": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rKeepers.sol:85",
        "inherit": [
          "IKeep3rKeeperDisputable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rParameters": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rParameters.sol:9",
        "inherit": [
          "IBaseErrors"
        ],
        "libraries": [],
        "methods": [
          "keep3rHelper()",
          "keep3rV1()",
          "keep3rV1Proxy()",
          "kp3rWethPool()",
          "bondTime()",
          "unbondTime()",
          "fee()",
          "setKeep3rHelper(address)",
          "setKeep3rV1(address)",
          "setKeep3rV1Proxy(address)",
          "setKp3rWethPool(address)",
          "setBondTime(uint256)",
          "setUnbondTime(uint256)",
          "setFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IKeep3rRoles": {
        "src": "contracts\\interfaces\\peripherals\\IKeep3rRoles.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slashers(address)",
          "disputers(address)",
          "addSlasher(address)",
          "removeSlasher(address)",
          "addDisputer(address)",
          "removeDisputer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "GovLib": {
        "src": "contracts\\libraries\\GovLib.sol:4",
        "version": {
          "withMetadata": "1ebbe8572633df371c2f6a743706772d1797a6af37354cd0d3dc652d63a188ad",
          "withoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf",
          "linkedWithoutMetadata": "edb7573b9b07fb11f74c4494eedb16442b522e318586edd74bf439ad5e3affdf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RouterLibrary": {
        "src": "contracts\\libraries\\RouterLibrary.sol:17",
        "version": {
          "withMetadata": "0e816b71e79c827a6ed060b118520bbcd2b1e816ba1031e4fc39244b50ea6afa",
          "withoutMetadata": "f9cc37899a7c457145325be82fddad6df4685a1de2ebca70b964e51d6ec7fc87",
          "linkedWithoutMetadata": "f9cc37899a7c457145325be82fddad6df4685a1de2ebca70b964e51d6ec7fc87"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "XLibrary"
        ],
        "methods": [
          "test()",
          "swapStep(uint256[],address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)",
          "swapStepSupportingFee(address[],address,(address,address,address,uint256,uint256,uint8,uint8),address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:6",
        "version": {
          "withMetadata": "59482254bed65a0b7f02816a761fc2d49b0f3bf68df4f474fe5968996904ae0b",
          "withoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786",
          "linkedWithoutMetadata": "22add1416bfa08dc8851fd80771abfc06804bedf3b59c7d2e3df2663e5a51786"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address))",
          "setFeeRates(uint8,mapping(enum ActionType => struct FeeRates) storage,(uint32))",
          "isSamePair(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XLibrary": {
        "src": "contracts\\libraries\\XLibrary.sol:12",
        "version": {
          "withMetadata": "3282d3043d276f4fe762741c7bcefb29e3a894fa62c0af28bcddcdc6105b47e5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "console",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AnalyticMath": {
        "src": "contracts\\libraries\\math\\AnalyticMath.sol:6",
        "version": {
          "withMetadata": "3165da5bfbe66be5cf06f41b7b87beff0c02f17334afad5de72f6555a28d29cd",
          "withoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f",
          "linkedWithoutMetadata": "33afbc8134d61887653fcf12210920db3655c93a85020880abbd3aa4c2ec8e1f"
        },
        "inherit": [],
        "libraries": [
          "IntegralMath"
        ],
        "methods": [
          "init()",
          "pow(uint256,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "maxExpArray",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)128_storage",
              "contract": "AnalyticMath",
              "src": "contracts\\libraries\\math\\AnalyticMath.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]",
              "numberOfBytes": "4096"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IntegralMath": {
        "src": "contracts\\libraries\\math\\IntegralMath.sol:6",
        "version": {
          "withMetadata": "e0ed2b5018db9102475a82450ba55729283382623751b459ca9162f6dc19280c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "92a73055169e866386e9bf41b72493b46dad6b6d17fa9c41c330e38810304cab",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "a64725e2d0886363d25be1770f8955acacd12d9d0fbfcbba1421cc56a056ee1a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WBNB": {
        "src": "contracts\\libraries\\token\\WBNB.sol:4",
        "version": {
          "withMetadata": "4137980e7feb19254f66e0bc26ee0f8141c5d33855c1ab986adfdc701c088a3d",
          "withoutMetadata": "fcb77ab56b90e071f2d777a7dbb80067acc8829bd99d89d1ac086c784c4bb4d0",
          "linkedWithoutMetadata": "fcb77ab56b90e071f2d777a7dbb80067acc8829bd99d89d1ac086c784c4bb4d0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "a()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\libraries\\token\\WBNB.sol:5"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\libraries\\token\\WBNB.sol:6"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\libraries\\token\\WBNB.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:5"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:6"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:7"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:14"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "FixedPoint": {
        "src": "contracts\\libraries\\utils\\FixedPoint.sol:8",
        "version": {
          "withMetadata": "0ca57a2ac15ce888e7c35a130c2973c5ee7ab89d4c670c6008db0045002f043f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "778b22d2a8736a8bf8634c4e649285e0af14fb397b1e1e2dda16518e13c918e0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockToken": {
        "src": "contracts\\mock\\MockToken.sol:7",
        "version": {
          "withMetadata": "607b7f1b2670362741b43e3c293bc911c46d34bef171537b8e1cf9039e32c457",
          "withoutMetadata": "5165fe718d786b30a22bfb757a9cc99863eeb8706e4557374deec3905cd3f266",
          "linkedWithoutMetadata": "5165fe718d786b30a22bfb757a9cc99863eeb8706e4557374deec3905cd3f266"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts\\mock\\MockToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ControlCenter": {
        "src": "contracts\\periphery\\ControlCenter.sol:14",
        "version": {
          "withMetadata": "77b4cd93a292a90f5d5f3f884fbe076bce139e7c5138b17a71e9297f064fba58",
          "withoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7",
          "linkedWithoutMetadata": "79acf6303edf9b16551f21bec478e9ca838da712f2be8858717ad2961e3901d7"
        },
        "inherit": [
          "Ownable",
          "Context",
          "Node",
          "INode",
          "IControlCenter"
        ],
        "libraries": [],
        "methods": [
          "()",
          "getOwner()",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "setLiquidityChangeLimit(uint256)",
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))",
          "setPriceChangeLimit(uint256)",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 29623,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30047,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31043,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31225,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31412,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 31975,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ControlCenter",
            "src": "contracts\\periphery\\ControlCenter.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\periphery\\ControlCenter.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:116"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ControlCenter.sol:118"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30421",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30415_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30389_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30361_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "pairStateAtSessionDetect",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)22459_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:29"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:30"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:32"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:116"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)22470_storage)",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:117"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ControlCenter",
              "src": "contracts\\periphery\\ControlCenter.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30421": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(CLFeed)22470_storage)": {
              "label": "mapping(address => struct ControlCenter.CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30389_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)22459_storage)": {
              "label": "mapping(address => struct ControlCenter.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)22470_storage": {
              "label": "struct ControlCenter.CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)30358_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30361_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30415_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30389_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30381",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairStateSessionTagged)22459_storage": {
              "label": "struct ControlCenter.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\XTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XMaker": {
        "src": "contracts\\periphery\\XMaker.sol:25",
        "version": {
          "withMetadata": "7466906ebd19a91904bbe88c938d10268435c6e4c3002fe859f5a821ee943163",
          "withoutMetadata": "7466906ebd19a91904bbe88c938d10268435c6e4c3002fe859f5a821ee943163",
          "linkedWithoutMetadata": "7466906ebd19a91904bbe88c938d10268435c6e4c3002fe859f5a821ee943163"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "console",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5513,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8237,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8419,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8606,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 9169,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 13749,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XMaker",
            "src": "contracts\\periphery\\XMaker.sol:43"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XMaker.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XMaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XMaker.sol:36"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30421",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30415_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30389_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30361_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)30355_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)30564",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)30534",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:30"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:31"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:32"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:33"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:34"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:35"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XMaker",
              "src": "contracts\\periphery\\XMaker.sol:36"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)30534": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)30564": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30421": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30389_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)30355_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30339",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)30358_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30361_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30415_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30389_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30381",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "XTaker": {
        "src": "contracts\\periphery\\XTaker.sol:26",
        "version": {
          "withMetadata": "6f9c359e896aa7204e8ca8afaa34f611c401f48f3d23ad55545d17d9c51f7797",
          "withoutMetadata": "6f9c359e896aa7204e8ca8afaa34f611c401f48f3d23ad55545d17d9c51f7797",
          "linkedWithoutMetadata": "6f9c359e896aa7204e8ca8afaa34f611c401f48f3d23ad55545d17d9c51f7797"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IXTaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "XLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8485,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 10842,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11024,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11211,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11774,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 17806,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XTaker",
            "src": "contracts\\periphery\\XTaker.sol:44"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\XTaker.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\XTaker.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\XTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\XTaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\XTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\XTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\XTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\XTaker.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30421",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30415_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30389_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30361_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            },
            {
              "label": "_owner",
              "offset": 3,
              "slot": "14",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "15",
              "type": "t_struct(ActionParams)30355_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionRegistrar)30564",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "20",
              "type": "t_contract(ISessionFees)30534",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "21",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:31"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "22",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:32"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:33"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:34"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:35"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:36"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "XTaker",
              "src": "contracts\\periphery\\XTaker.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)30534": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)30564": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30421": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30389_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ActionParams)30355_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30339",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(FeeRates)30358_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30361_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30415_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30389_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30381",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IControlCenter": {
        "src": "contracts\\periphery\\interfaces\\IControlCenter.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "capturePairStateAtSessionDetect(uint256,(address,address,address,uint256,uint256,uint8,uint8))",
          "captureInitialPairState((uint8,uint256,uint256,bool),address,address)",
          "ruleOutInvalidLiquidity((address,address,address,uint256,uint256,uint8,uint8))",
          "ruleOutDeviatedPrice(bool,(address,address,address,uint256,uint256,uint8,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXRouter": {
        "src": "contracts\\periphery\\interfaces\\ICrossRouter.sol:6",
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter02.sol:6",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXMaker": {
        "src": "contracts\\periphery\\interfaces\\IXMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "wired_addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "wired_removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "sim_removeLiquidity(address,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "diluteLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "diluteLiquidityForETH(address,uint256,uint256,address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXTaker": {
        "src": "contracts\\periphery\\interfaces\\IXTaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "wired_swapExactTokensForTokens(uint256,uint256,address[],address)",
          "sim_swapExactTokensForTokens(uint256,address[])",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Node",
            "src": "contracts\\session\\Node.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "thisNode",
              "offset": 0,
              "slot": "0",
              "type": "t_enum(NodeType)30421",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "prevNode",
              "offset": 1,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:12"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)30415_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:15"
            },
            {
              "label": "tgrBusd",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:16"
            },
            {
              "label": "tgrFtm",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:17"
            },
            {
              "label": "htzFtm",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:18"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Pair)30389_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:20"
            },
            {
              "label": "pairFor",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:21"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(FeeStores)30361_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:23"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:24"
            },
            {
              "label": "trackPairStatus",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:63"
            },
            {
              "label": "trackFeeStores",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:100"
            },
            {
              "label": "trackFeeRates",
              "offset": 2,
              "slot": "14",
              "type": "t_bool",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:113"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(ListStatus)30381": {
              "label": "enum ListStatus",
              "members": [
                "None",
                "Cleared",
                "Enlisted",
                "Delisted"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(NodeType)30421": {
              "label": "enum NodeType",
              "members": [
                "Token",
                "Center",
                "Maker",
                "Taker",
                "XFactory"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)30389_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(ActionType)30339,t_struct(FeeRates)30358_storage)": {
              "label": "mapping(enum ActionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)30358_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)30361_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "accountant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)30415_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "center",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)30389_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "status",
                  "type": "t_enum(ListStatus)30381",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:8",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:10",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "actionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(ActionParams)30355_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)30564",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:13"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)30534",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)30534": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)30564": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(ActionParams)30355_storage": {
              "label": "struct ActionParams",
              "members": [
                {
                  "label": "actionType",
                  "type": "t_enum(ActionType)30339",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isUserAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:9",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "pause()",
          "resume()",
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:11"
            },
            {
              "label": "lastSession",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_enum(ActionType)30339,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "actionStack",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_enum(ActionType)30339)20_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:15"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:16"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "5",
              "type": "t_bool",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:18"
            }
          ],
          "types": {
            "t_array(t_enum(ActionType)30339)20_storage": {
              "label": "enum ActionType[20]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ActionType)30339": {
              "label": "enum ActionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Dilute"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(ActionType)30339,t_uint256)": {
              "label": "mapping(enum ActionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "changePairStatus(address,address,address,uint8,address)",
          "setFeeStores((address),address)",
          "setFeeRates(uint8,(uint32),address)",
          "begin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeTgrLogic(address,uint256,(uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerAction(uint8,bool)",
          "unregisterAction()",
          "getCurrentActionType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "c59feb9d1a58ddda41adb15b88d3a67652c0e38cceaa1d0bc70b548a1d5356e3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:19",
        "inherit": [],
        "libraries": [
          "StorageSlot",
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "c14e740e5948185e46262620d3426425af20df495a7326a7a6a67ccc97946cc4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:32",
        "version": {
          "withMetadata": "53ac28de475ca0830e154a7ac46e8e69e1506a5c852e9b962de2d64f12cf9891",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "XdaoAgency": {
        "src": "contracts\\farm\\XdaoAgency.sol:48",
        "version": {
          "withMetadata": "1d16e95f2645d890d0b6b08ec55a6fe85ecada2c8f9f851d2b7e1cc95a0b2d2b",
          "withoutMetadata": "9bb174b075f8492602ce4e3b490f5eb6f4f318d195605b14fcf3d1d9d6fd2fcc",
          "linkedWithoutMetadata": "9bb174b075f8492602ce4e3b490f5eb6f4f318d195605b14fcf3d1d9d6fd2fcc"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "UUPSUpgradeable",
          "ERC1967Upgrade",
          "IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "setNumVerificationsNeeded(uint256)",
          "setSlashImpactPeriod(uint256)",
          "initialize(address)",
          "submitTask((string,string,uint256,uint256,uint8,uint8,uint8,uint8,uint8[],address,uint256,uint256))",
          "verifyTask(uint256)",
          "requestRevalidation(uint256,string)",
          "postTask(uint256)",
          "placeBid(uint256)",
          "assignTask(uint256,uint256[])",
          "_isTaskCompletedByUser(uint256,address)",
          "compeletTask(uint256)",
          "_isTaskEndVerifiedByUser(uint256,address)",
          "verifyTaskCompletion(uint256)",
          "stake(uint256)",
          "updateAgentLevel(address)",
          "unStake(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "currentTaskId",
            "src": "contracts\\farm\\XdaoAgency.sol:68"
          },
          {
            "kind": "state-variable-assignment",
            "name": "NumVerificationsNeeded",
            "src": "contracts\\farm\\XdaoAgency.sol:69"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SlashImpactPeriod",
            "src": "contracts\\farm\\XdaoAgency.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "tgr",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)778",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:49"
            },
            {
              "label": "isAgent",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:51"
            },
            {
              "label": "agentInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Agent)1168_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:52"
            },
            {
              "label": "tasks",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:53"
            },
            {
              "label": "taskVerifiersCount",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:54"
            },
            {
              "label": "userTasks",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:55"
            },
            {
              "label": "agentVerifiedTask",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:56"
            },
            {
              "label": "doers",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:57"
            },
            {
              "label": "bidders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:59"
            },
            {
              "label": "bidden",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:60"
            },
            {
              "label": "taskCompleters",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:62"
            },
            {
              "label": "taskEndVerifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:64"
            },
            {
              "label": "agentLastSlashTime",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:66"
            },
            {
              "label": "currentTaskId",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:68"
            },
            {
              "label": "NumVerificationsNeeded",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:69"
            },
            {
              "label": "SlashImpactPeriod",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "XdaoAgency",
              "src": "contracts\\farm\\XdaoAgency.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)778": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(JobBidType)1181": {
              "label": "enum JobBidType",
              "members": [
                "FirstPerson",
                "OneWinner",
                "MultiWinner"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(TaskStatus)1177": {
              "label": "enum TaskStatus",
              "members": [
                "Pending",
                "Verified",
                "Posted",
                "Assigned",
                "Delivered",
                "Complete",
                "Incomplete",
                "Cancelled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
              "label": "mapping(address => mapping(uint256 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Agent)1168_storage)": {
              "label": "mapping(address => struct Agent)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TaskDetails)1209_storage)": {
              "label": "mapping(uint256 => struct TaskDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Agent)1168_storage": {
              "label": "struct Agent",
              "members": [
                {
                  "label": "account",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "level",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "stakedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(TaskDetails)1209_storage": {
              "label": "struct TaskDetails",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "summary",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "bonus",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "minLevel",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "minCompletions",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "jobType",
                  "type": "t_enum(JobBidType)1181",
                  "offset": 2,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_enum(TaskStatus)1177",
                  "offset": 3,
                  "slot": "4"
                },
                {
                  "label": "skillSet",
                  "type": "t_array(t_uint8)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "dueTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "verifiedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}